/* soapH.h
   Generated by gSOAP 2.8.123 for ./event.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap*, const char*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void * SOAP_FMAC4 soap_dupelement(struct soap*, const void*, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_delelement(const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED

#ifdef SOAP_DEFAULT_byte
#define soap_default_byte(soap, a) (*(a) = SOAP_DEFAULT_byte)
#else
#define soap_default_byte(soap, a) (*(a) = (char)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_byte
#define soap_PUT_byte(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_byte
#define soap_PATCH_byte(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_byte
#define soap_POST_send_byte(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_byte
#define soap_GET_byte(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_byte(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_byte
#define soap_POST_recv_byte(soap, data) ( soap_read_byte(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED

#ifdef SOAP_DEFAULT_int
#define soap_default_int(soap, a) (*(a) = SOAP_DEFAULT_int)
#else
#define soap_default_int(soap, a) (*(a) = (int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_int
#define soap_PUT_int(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_int
#define soap_PATCH_int(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_int
#define soap_POST_send_int(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_int
#define soap_GET_int(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_int(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_int
#define soap_POST_recv_int(soap, data) ( soap_read_int(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _wsa5__RetryAfter is a typedef synonym of ULONG64 */

#ifndef SOAP_TYPE__wsa5__RetryAfter_DEFINED
#define SOAP_TYPE__wsa5__RetryAfter_DEFINED

#define soap_default__wsa5__RetryAfter soap_default_ULONG64


#define soap__wsa5__RetryAfter2s soap_ULONG642s


#define soap_out__wsa5__RetryAfter soap_out_ULONG64


#define soap_s2_wsa5__RetryAfter soap_s2ULONG64


#define soap_in__wsa5__RetryAfter soap_in_ULONG64

#define soap_new__wsa5__RetryAfter soap_new_ULONG64

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__RetryAfter(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write__wsa5__RetryAfter
#define soap_write__wsa5__RetryAfter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__RetryAfter(soap, data, "wsa5:RetryAfter", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__RetryAfter
#define soap_PUT__wsa5__RetryAfter(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__RetryAfter(soap, data, "wsa5:RetryAfter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__RetryAfter
#define soap_PATCH__wsa5__RetryAfter(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__RetryAfter(soap, data, "wsa5:RetryAfter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__RetryAfter
#define soap_POST_send__wsa5__RetryAfter(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__RetryAfter(soap, data, "wsa5:RetryAfter", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__RetryAfter soap_get_ULONG64


#define soap_read__wsa5__RetryAfter soap_read_ULONG64


#define soap_GET__wsa5__RetryAfter soap_GET_ULONG64


#define soap_POST_recv__wsa5__RetryAfter soap_POST_recv_ULONG64

#endif

#ifndef SOAP_TYPE_ULONG64_DEFINED
#define SOAP_TYPE_ULONG64_DEFINED

#ifdef SOAP_DEFAULT_ULONG64
#define soap_default_ULONG64(soap, a) (*(a) = SOAP_DEFAULT_ULONG64)
#else
#define soap_default_ULONG64(soap, a) (*(a) = (ULONG64)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ULONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_ULONG64(struct soap*, const char*, ULONG64 *, const char*);

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_new_ULONG64(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ULONG64(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write_ULONG64
#define soap_write_ULONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ULONG64
#define soap_PUT_ULONG64(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ULONG64
#define soap_PATCH_ULONG64(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ULONG64
#define soap_POST_send_ULONG64(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_ULONG64(struct soap*, ULONG64 *, const char*, const char*);

#ifndef soap_read_ULONG64
#define soap_read_ULONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_ULONG64(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ULONG64
#define soap_GET_ULONG64(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ULONG64(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ULONG64
#define soap_POST_recv_ULONG64(soap, data) ( soap_read_ULONG64(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_dateTime_DEFINED
#define SOAP_TYPE_dateTime_DEFINED

#ifdef SOAP_DEFAULT_dateTime
#define soap_default_dateTime(soap, a) (*(a) = SOAP_DEFAULT_dateTime)
#else
#define soap_default_dateTime(soap, a) (*(a) = (time_t)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_dateTime(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_dateTime(struct soap*, const char*, time_t *, const char*);

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_new_dateTime(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_dateTime(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_dateTime
#define soap_write_dateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_dateTime(soap, data, "dateTime", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_dateTime
#define soap_PUT_dateTime(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_dateTime(soap, data, "dateTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_dateTime
#define soap_PATCH_dateTime(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_dateTime(soap, data, "dateTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_dateTime
#define soap_POST_send_dateTime(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_dateTime(soap, data, "dateTime", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_dateTime(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_dateTime
#define soap_read_dateTime(soap, data) ( soap_begin_recv(soap) || !soap_get_dateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_dateTime
#define soap_GET_dateTime(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_dateTime(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_dateTime
#define soap_POST_recv_dateTime(soap, data) ( soap_read_dateTime(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tev__ConnectionStatus_DEFINED
#define SOAP_TYPE_tev__ConnectionStatus_DEFINED

#ifdef SOAP_DEFAULT_tev__ConnectionStatus
#define soap_default_tev__ConnectionStatus(soap, a) (*(a) = SOAP_DEFAULT_tev__ConnectionStatus)
#else
#define soap_default_tev__ConnectionStatus(soap, a) (*(a) = (enum tev__ConnectionStatus)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tev__ConnectionStatus(struct soap*, const char*, int, const enum tev__ConnectionStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tev__ConnectionStatus2s(struct soap*, enum tev__ConnectionStatus);
SOAP_FMAC3 enum tev__ConnectionStatus * SOAP_FMAC4 soap_in_tev__ConnectionStatus(struct soap*, const char*, enum tev__ConnectionStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tev__ConnectionStatus(struct soap*, const char*, enum tev__ConnectionStatus *);

SOAP_FMAC3 enum tev__ConnectionStatus * SOAP_FMAC4 soap_new_tev__ConnectionStatus(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tev__ConnectionStatus(struct soap*, const enum tev__ConnectionStatus *, const char*, const char*);

#ifndef soap_write_tev__ConnectionStatus
#define soap_write_tev__ConnectionStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tev__ConnectionStatus(soap, data, "tev:ConnectionStatus", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tev__ConnectionStatus
#define soap_PUT_tev__ConnectionStatus(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tev__ConnectionStatus(soap, data, "tev:ConnectionStatus", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tev__ConnectionStatus
#define soap_PATCH_tev__ConnectionStatus(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tev__ConnectionStatus(soap, data, "tev:ConnectionStatus", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tev__ConnectionStatus
#define soap_POST_send_tev__ConnectionStatus(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tev__ConnectionStatus(soap, data, "tev:ConnectionStatus", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tev__ConnectionStatus * SOAP_FMAC4 soap_get_tev__ConnectionStatus(struct soap*, enum tev__ConnectionStatus *, const char*, const char*);

#ifndef soap_read_tev__ConnectionStatus
#define soap_read_tev__ConnectionStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_tev__ConnectionStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tev__ConnectionStatus
#define soap_GET_tev__ConnectionStatus(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tev__ConnectionStatus(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tev__ConnectionStatus
#define soap_POST_recv_tev__ConnectionStatus(soap, data) ( soap_read_tev__ConnectionStatus(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tev__EventBrokerProtocol_DEFINED
#define SOAP_TYPE_tev__EventBrokerProtocol_DEFINED

#ifdef SOAP_DEFAULT_tev__EventBrokerProtocol
#define soap_default_tev__EventBrokerProtocol(soap, a) (*(a) = SOAP_DEFAULT_tev__EventBrokerProtocol)
#else
#define soap_default_tev__EventBrokerProtocol(soap, a) (*(a) = (enum tev__EventBrokerProtocol)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tev__EventBrokerProtocol(struct soap*, const char*, int, const enum tev__EventBrokerProtocol *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tev__EventBrokerProtocol2s(struct soap*, enum tev__EventBrokerProtocol);
SOAP_FMAC3 enum tev__EventBrokerProtocol * SOAP_FMAC4 soap_in_tev__EventBrokerProtocol(struct soap*, const char*, enum tev__EventBrokerProtocol *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tev__EventBrokerProtocol(struct soap*, const char*, enum tev__EventBrokerProtocol *);

SOAP_FMAC3 enum tev__EventBrokerProtocol * SOAP_FMAC4 soap_new_tev__EventBrokerProtocol(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tev__EventBrokerProtocol(struct soap*, const enum tev__EventBrokerProtocol *, const char*, const char*);

#ifndef soap_write_tev__EventBrokerProtocol
#define soap_write_tev__EventBrokerProtocol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tev__EventBrokerProtocol(soap, data, "tev:EventBrokerProtocol", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tev__EventBrokerProtocol
#define soap_PUT_tev__EventBrokerProtocol(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tev__EventBrokerProtocol(soap, data, "tev:EventBrokerProtocol", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tev__EventBrokerProtocol
#define soap_PATCH_tev__EventBrokerProtocol(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tev__EventBrokerProtocol(soap, data, "tev:EventBrokerProtocol", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tev__EventBrokerProtocol
#define soap_POST_send_tev__EventBrokerProtocol(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tev__EventBrokerProtocol(soap, data, "tev:EventBrokerProtocol", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tev__EventBrokerProtocol * SOAP_FMAC4 soap_get_tev__EventBrokerProtocol(struct soap*, enum tev__EventBrokerProtocol *, const char*, const char*);

#ifndef soap_read_tev__EventBrokerProtocol
#define soap_read_tev__EventBrokerProtocol(soap, data) ( soap_begin_recv(soap) || !soap_get_tev__EventBrokerProtocol(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tev__EventBrokerProtocol
#define soap_GET_tev__EventBrokerProtocol(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tev__EventBrokerProtocol(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tev__EventBrokerProtocol
#define soap_POST_recv_tev__EventBrokerProtocol(soap, data) ( soap_read_tev__EventBrokerProtocol(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__boolean_DEFINED
#define SOAP_TYPE_xsd__boolean_DEFINED

#ifdef SOAP_DEFAULT_xsd__boolean
#define soap_default_xsd__boolean(soap, a) (*(a) = SOAP_DEFAULT_xsd__boolean)
#else
#define soap_default_xsd__boolean(soap, a) (*(a) = (enum xsd__boolean)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const enum xsd__boolean *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__boolean2s(struct soap*, enum xsd__boolean);
SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, enum xsd__boolean *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__boolean(struct soap*, const char*, enum xsd__boolean *);

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_new_xsd__boolean(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__boolean(struct soap*, const enum xsd__boolean *, const char*, const char*);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__boolean
#define soap_PUT_xsd__boolean(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__boolean
#define soap_PATCH_xsd__boolean(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__boolean
#define soap_POST_send_xsd__boolean(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, enum xsd__boolean *, const char*, const char*);

#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__boolean
#define soap_GET_xsd__boolean(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__boolean(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__boolean
#define soap_POST_recv_xsd__boolean(soap, data) ( soap_read_xsd__boolean(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsa5__IsReferenceParameter_DEFINED
#define SOAP_TYPE__wsa5__IsReferenceParameter_DEFINED

#ifdef SOAP_DEFAULT__wsa5__IsReferenceParameter
#define soap_default__wsa5__IsReferenceParameter(soap, a) (*(a) = SOAP_DEFAULT__wsa5__IsReferenceParameter)
#else
#define soap_default__wsa5__IsReferenceParameter(soap, a) (*(a) = (enum _wsa5__IsReferenceParameter)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsa5__IsReferenceParameter(struct soap*, const char*, int, const enum _wsa5__IsReferenceParameter *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap__wsa5__IsReferenceParameter2s(struct soap*, enum _wsa5__IsReferenceParameter);
SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_in__wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2_wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *);

SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_new__wsa5__IsReferenceParameter(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__IsReferenceParameter(struct soap*, const enum _wsa5__IsReferenceParameter *, const char*, const char*);

#ifndef soap_write__wsa5__IsReferenceParameter
#define soap_write__wsa5__IsReferenceParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__IsReferenceParameter
#define soap_PUT__wsa5__IsReferenceParameter(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__IsReferenceParameter
#define soap_PATCH__wsa5__IsReferenceParameter(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__IsReferenceParameter
#define soap_POST_send__wsa5__IsReferenceParameter(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_get__wsa5__IsReferenceParameter(struct soap*, enum _wsa5__IsReferenceParameter *, const char*, const char*);

#ifndef soap_read__wsa5__IsReferenceParameter
#define soap_read__wsa5__IsReferenceParameter(soap, data) ( soap_begin_recv(soap) || !soap_get__wsa5__IsReferenceParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsa5__IsReferenceParameter
#define soap_GET__wsa5__IsReferenceParameter(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsa5__IsReferenceParameter(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsa5__IsReferenceParameter
#define soap_POST_recv__wsa5__IsReferenceParameter(soap, data) ( soap_read__wsa5__IsReferenceParameter(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__FaultCodesType_DEFINED
#define SOAP_TYPE_wsa5__FaultCodesType_DEFINED

#ifdef SOAP_DEFAULT_wsa5__FaultCodesType
#define soap_default_wsa5__FaultCodesType(soap, a) (*(a) = SOAP_DEFAULT_wsa5__FaultCodesType)
#else
#define soap_default_wsa5__FaultCodesType(soap, a) (*(a) = (enum wsa5__FaultCodesType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesType(struct soap*, const char*, int, const enum wsa5__FaultCodesType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__FaultCodesType2s(struct soap*, enum wsa5__FaultCodesType);
SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_in_wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *);

SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_new_wsa5__FaultCodesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesType(struct soap*, const enum wsa5__FaultCodesType *, const char*, const char*);

#ifndef soap_write_wsa5__FaultCodesType
#define soap_write_wsa5__FaultCodesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__FaultCodesType
#define soap_PUT_wsa5__FaultCodesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__FaultCodesType
#define soap_PATCH_wsa5__FaultCodesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__FaultCodesType
#define soap_POST_send_wsa5__FaultCodesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_get_wsa5__FaultCodesType(struct soap*, enum wsa5__FaultCodesType *, const char*, const char*);

#ifndef soap_read_wsa5__FaultCodesType
#define soap_read_wsa5__FaultCodesType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__FaultCodesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__FaultCodesType
#define soap_GET_wsa5__FaultCodesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__FaultCodesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__FaultCodesType
#define soap_POST_recv_wsa5__FaultCodesType(soap, data) ( soap_read_wsa5__FaultCodesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__RelationshipType_DEFINED
#define SOAP_TYPE_wsa5__RelationshipType_DEFINED

#ifdef SOAP_DEFAULT_wsa5__RelationshipType
#define soap_default_wsa5__RelationshipType(soap, a) (*(a) = SOAP_DEFAULT_wsa5__RelationshipType)
#else
#define soap_default_wsa5__RelationshipType(soap, a) (*(a) = (enum wsa5__RelationshipType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipType(struct soap*, const char*, int, const enum wsa5__RelationshipType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__RelationshipType2s(struct soap*, enum wsa5__RelationshipType);
SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_in_wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *);

SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_new_wsa5__RelationshipType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipType(struct soap*, const enum wsa5__RelationshipType *, const char*, const char*);

#ifndef soap_write_wsa5__RelationshipType
#define soap_write_wsa5__RelationshipType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__RelationshipType
#define soap_PUT_wsa5__RelationshipType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__RelationshipType
#define soap_PATCH_wsa5__RelationshipType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__RelationshipType
#define soap_POST_send_wsa5__RelationshipType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_get_wsa5__RelationshipType(struct soap*, enum wsa5__RelationshipType *, const char*, const char*);

#ifndef soap_read_wsa5__RelationshipType
#define soap_read_wsa5__RelationshipType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__RelationshipType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__RelationshipType
#define soap_GET_wsa5__RelationshipType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__RelationshipType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__RelationshipType
#define soap_POST_recv_wsa5__RelationshipType(soap, data) ( soap_read_wsa5__RelationshipType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__ResumeSubscription_DEFINED
#define SOAP_TYPE___tev__ResumeSubscription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__ResumeSubscription(struct soap*, struct __tev__ResumeSubscription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__ResumeSubscription(struct soap*, const struct __tev__ResumeSubscription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__ResumeSubscription(struct soap*, const char*, int, const struct __tev__ResumeSubscription *, const char*);
SOAP_FMAC3 struct __tev__ResumeSubscription * SOAP_FMAC4 soap_in___tev__ResumeSubscription(struct soap*, const char*, struct __tev__ResumeSubscription *, const char*);

SOAP_FMAC3 struct __tev__ResumeSubscription * SOAP_FMAC4 soap_new___tev__ResumeSubscription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__ResumeSubscription(struct soap*, const struct __tev__ResumeSubscription *, const char*, const char*);

#ifndef soap_write___tev__ResumeSubscription
#define soap_write___tev__ResumeSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__ResumeSubscription(soap, data), 0) || soap_put___tev__ResumeSubscription(soap, data, "-tev:ResumeSubscription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__ResumeSubscription
#define soap_PUT___tev__ResumeSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__ResumeSubscription(soap, data), 0) || soap_put___tev__ResumeSubscription(soap, data, "-tev:ResumeSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__ResumeSubscription
#define soap_PATCH___tev__ResumeSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__ResumeSubscription(soap, data), 0) || soap_put___tev__ResumeSubscription(soap, data, "-tev:ResumeSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__ResumeSubscription
#define soap_POST_send___tev__ResumeSubscription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__ResumeSubscription(soap, data), 0) || soap_put___tev__ResumeSubscription(soap, data, "-tev:ResumeSubscription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__ResumeSubscription * SOAP_FMAC4 soap_get___tev__ResumeSubscription(struct soap*, struct __tev__ResumeSubscription *, const char*, const char*);

#ifndef soap_read___tev__ResumeSubscription
#define soap_read___tev__ResumeSubscription(soap, data) ( ((data) ? (soap_default___tev__ResumeSubscription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__ResumeSubscription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__ResumeSubscription
#define soap_GET___tev__ResumeSubscription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__ResumeSubscription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__ResumeSubscription
#define soap_POST_recv___tev__ResumeSubscription(soap, data) ( soap_read___tev__ResumeSubscription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__PauseSubscription_DEFINED
#define SOAP_TYPE___tev__PauseSubscription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__PauseSubscription(struct soap*, struct __tev__PauseSubscription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__PauseSubscription(struct soap*, const struct __tev__PauseSubscription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__PauseSubscription(struct soap*, const char*, int, const struct __tev__PauseSubscription *, const char*);
SOAP_FMAC3 struct __tev__PauseSubscription * SOAP_FMAC4 soap_in___tev__PauseSubscription(struct soap*, const char*, struct __tev__PauseSubscription *, const char*);

SOAP_FMAC3 struct __tev__PauseSubscription * SOAP_FMAC4 soap_new___tev__PauseSubscription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__PauseSubscription(struct soap*, const struct __tev__PauseSubscription *, const char*, const char*);

#ifndef soap_write___tev__PauseSubscription
#define soap_write___tev__PauseSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__PauseSubscription(soap, data), 0) || soap_put___tev__PauseSubscription(soap, data, "-tev:PauseSubscription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__PauseSubscription
#define soap_PUT___tev__PauseSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__PauseSubscription(soap, data), 0) || soap_put___tev__PauseSubscription(soap, data, "-tev:PauseSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__PauseSubscription
#define soap_PATCH___tev__PauseSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__PauseSubscription(soap, data), 0) || soap_put___tev__PauseSubscription(soap, data, "-tev:PauseSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__PauseSubscription
#define soap_POST_send___tev__PauseSubscription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__PauseSubscription(soap, data), 0) || soap_put___tev__PauseSubscription(soap, data, "-tev:PauseSubscription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__PauseSubscription * SOAP_FMAC4 soap_get___tev__PauseSubscription(struct soap*, struct __tev__PauseSubscription *, const char*, const char*);

#ifndef soap_read___tev__PauseSubscription
#define soap_read___tev__PauseSubscription(soap, data) ( ((data) ? (soap_default___tev__PauseSubscription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__PauseSubscription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__PauseSubscription
#define soap_GET___tev__PauseSubscription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__PauseSubscription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__PauseSubscription
#define soap_POST_recv___tev__PauseSubscription(soap, data) ( soap_read___tev__PauseSubscription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__Unsubscribe___DEFINED
#define SOAP_TYPE___tev__Unsubscribe___DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__Unsubscribe__(struct soap*, struct __tev__Unsubscribe__ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__Unsubscribe__(struct soap*, const struct __tev__Unsubscribe__ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__Unsubscribe__(struct soap*, const char*, int, const struct __tev__Unsubscribe__ *, const char*);
SOAP_FMAC3 struct __tev__Unsubscribe__ * SOAP_FMAC4 soap_in___tev__Unsubscribe__(struct soap*, const char*, struct __tev__Unsubscribe__ *, const char*);

SOAP_FMAC3 struct __tev__Unsubscribe__ * SOAP_FMAC4 soap_new___tev__Unsubscribe__(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__Unsubscribe__(struct soap*, const struct __tev__Unsubscribe__ *, const char*, const char*);

#ifndef soap_write___tev__Unsubscribe__
#define soap_write___tev__Unsubscribe__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__Unsubscribe__(soap, data), 0) || soap_put___tev__Unsubscribe__(soap, data, "-tev:Unsubscribe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__Unsubscribe__
#define soap_PUT___tev__Unsubscribe__(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Unsubscribe__(soap, data), 0) || soap_put___tev__Unsubscribe__(soap, data, "-tev:Unsubscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__Unsubscribe__
#define soap_PATCH___tev__Unsubscribe__(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Unsubscribe__(soap, data), 0) || soap_put___tev__Unsubscribe__(soap, data, "-tev:Unsubscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__Unsubscribe__
#define soap_POST_send___tev__Unsubscribe__(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Unsubscribe__(soap, data), 0) || soap_put___tev__Unsubscribe__(soap, data, "-tev:Unsubscribe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__Unsubscribe__ * SOAP_FMAC4 soap_get___tev__Unsubscribe__(struct soap*, struct __tev__Unsubscribe__ *, const char*, const char*);

#ifndef soap_read___tev__Unsubscribe__
#define soap_read___tev__Unsubscribe__(soap, data) ( ((data) ? (soap_default___tev__Unsubscribe__(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__Unsubscribe__(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__Unsubscribe__
#define soap_GET___tev__Unsubscribe__(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__Unsubscribe__(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__Unsubscribe__
#define soap_POST_recv___tev__Unsubscribe__(soap, data) ( soap_read___tev__Unsubscribe__(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__Renew__DEFINED
#define SOAP_TYPE___tev__Renew__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__Renew_(struct soap*, struct __tev__Renew_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__Renew_(struct soap*, const struct __tev__Renew_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__Renew_(struct soap*, const char*, int, const struct __tev__Renew_ *, const char*);
SOAP_FMAC3 struct __tev__Renew_ * SOAP_FMAC4 soap_in___tev__Renew_(struct soap*, const char*, struct __tev__Renew_ *, const char*);

SOAP_FMAC3 struct __tev__Renew_ * SOAP_FMAC4 soap_new___tev__Renew_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__Renew_(struct soap*, const struct __tev__Renew_ *, const char*, const char*);

#ifndef soap_write___tev__Renew_
#define soap_write___tev__Renew_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__Renew_(soap, data), 0) || soap_put___tev__Renew_(soap, data, "-tev:Renew", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__Renew_
#define soap_PUT___tev__Renew_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Renew_(soap, data), 0) || soap_put___tev__Renew_(soap, data, "-tev:Renew", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__Renew_
#define soap_PATCH___tev__Renew_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Renew_(soap, data), 0) || soap_put___tev__Renew_(soap, data, "-tev:Renew", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__Renew_
#define soap_POST_send___tev__Renew_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Renew_(soap, data), 0) || soap_put___tev__Renew_(soap, data, "-tev:Renew", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__Renew_ * SOAP_FMAC4 soap_get___tev__Renew_(struct soap*, struct __tev__Renew_ *, const char*, const char*);

#ifndef soap_read___tev__Renew_
#define soap_read___tev__Renew_(soap, data) ( ((data) ? (soap_default___tev__Renew_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__Renew_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__Renew_
#define soap_GET___tev__Renew_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__Renew_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__Renew_
#define soap_POST_recv___tev__Renew_(soap, data) ( soap_read___tev__Renew_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__CreatePullPoint_DEFINED
#define SOAP_TYPE___tev__CreatePullPoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__CreatePullPoint(struct soap*, struct __tev__CreatePullPoint *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__CreatePullPoint(struct soap*, const struct __tev__CreatePullPoint *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__CreatePullPoint(struct soap*, const char*, int, const struct __tev__CreatePullPoint *, const char*);
SOAP_FMAC3 struct __tev__CreatePullPoint * SOAP_FMAC4 soap_in___tev__CreatePullPoint(struct soap*, const char*, struct __tev__CreatePullPoint *, const char*);

SOAP_FMAC3 struct __tev__CreatePullPoint * SOAP_FMAC4 soap_new___tev__CreatePullPoint(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__CreatePullPoint(struct soap*, const struct __tev__CreatePullPoint *, const char*, const char*);

#ifndef soap_write___tev__CreatePullPoint
#define soap_write___tev__CreatePullPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__CreatePullPoint(soap, data), 0) || soap_put___tev__CreatePullPoint(soap, data, "-tev:CreatePullPoint", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__CreatePullPoint
#define soap_PUT___tev__CreatePullPoint(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__CreatePullPoint(soap, data), 0) || soap_put___tev__CreatePullPoint(soap, data, "-tev:CreatePullPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__CreatePullPoint
#define soap_PATCH___tev__CreatePullPoint(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__CreatePullPoint(soap, data), 0) || soap_put___tev__CreatePullPoint(soap, data, "-tev:CreatePullPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__CreatePullPoint
#define soap_POST_send___tev__CreatePullPoint(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__CreatePullPoint(soap, data), 0) || soap_put___tev__CreatePullPoint(soap, data, "-tev:CreatePullPoint", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__CreatePullPoint * SOAP_FMAC4 soap_get___tev__CreatePullPoint(struct soap*, struct __tev__CreatePullPoint *, const char*, const char*);

#ifndef soap_read___tev__CreatePullPoint
#define soap_read___tev__CreatePullPoint(soap, data) ( ((data) ? (soap_default___tev__CreatePullPoint(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__CreatePullPoint(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__CreatePullPoint
#define soap_GET___tev__CreatePullPoint(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__CreatePullPoint(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__CreatePullPoint
#define soap_POST_recv___tev__CreatePullPoint(soap, data) ( soap_read___tev__CreatePullPoint(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__Notify__DEFINED
#define SOAP_TYPE___tev__Notify__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__Notify_(struct soap*, struct __tev__Notify_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__Notify_(struct soap*, const struct __tev__Notify_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__Notify_(struct soap*, const char*, int, const struct __tev__Notify_ *, const char*);
SOAP_FMAC3 struct __tev__Notify_ * SOAP_FMAC4 soap_in___tev__Notify_(struct soap*, const char*, struct __tev__Notify_ *, const char*);

SOAP_FMAC3 struct __tev__Notify_ * SOAP_FMAC4 soap_new___tev__Notify_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__Notify_(struct soap*, const struct __tev__Notify_ *, const char*, const char*);

#ifndef soap_write___tev__Notify_
#define soap_write___tev__Notify_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__Notify_(soap, data), 0) || soap_put___tev__Notify_(soap, data, "-tev:Notify", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__Notify_
#define soap_PUT___tev__Notify_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Notify_(soap, data), 0) || soap_put___tev__Notify_(soap, data, "-tev:Notify", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__Notify_
#define soap_PATCH___tev__Notify_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Notify_(soap, data), 0) || soap_put___tev__Notify_(soap, data, "-tev:Notify", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__Notify_
#define soap_POST_send___tev__Notify_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Notify_(soap, data), 0) || soap_put___tev__Notify_(soap, data, "-tev:Notify", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__Notify_ * SOAP_FMAC4 soap_get___tev__Notify_(struct soap*, struct __tev__Notify_ *, const char*, const char*);

#ifndef soap_read___tev__Notify_
#define soap_read___tev__Notify_(soap, data) ( ((data) ? (soap_default___tev__Notify_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__Notify_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__Notify_
#define soap_GET___tev__Notify_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__Notify_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__Notify_
#define soap_POST_recv___tev__Notify_(soap, data) ( soap_read___tev__Notify_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__DestroyPullPoint_DEFINED
#define SOAP_TYPE___tev__DestroyPullPoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__DestroyPullPoint(struct soap*, struct __tev__DestroyPullPoint *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__DestroyPullPoint(struct soap*, const struct __tev__DestroyPullPoint *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__DestroyPullPoint(struct soap*, const char*, int, const struct __tev__DestroyPullPoint *, const char*);
SOAP_FMAC3 struct __tev__DestroyPullPoint * SOAP_FMAC4 soap_in___tev__DestroyPullPoint(struct soap*, const char*, struct __tev__DestroyPullPoint *, const char*);

SOAP_FMAC3 struct __tev__DestroyPullPoint * SOAP_FMAC4 soap_new___tev__DestroyPullPoint(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__DestroyPullPoint(struct soap*, const struct __tev__DestroyPullPoint *, const char*, const char*);

#ifndef soap_write___tev__DestroyPullPoint
#define soap_write___tev__DestroyPullPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__DestroyPullPoint(soap, data), 0) || soap_put___tev__DestroyPullPoint(soap, data, "-tev:DestroyPullPoint", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__DestroyPullPoint
#define soap_PUT___tev__DestroyPullPoint(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__DestroyPullPoint(soap, data), 0) || soap_put___tev__DestroyPullPoint(soap, data, "-tev:DestroyPullPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__DestroyPullPoint
#define soap_PATCH___tev__DestroyPullPoint(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__DestroyPullPoint(soap, data), 0) || soap_put___tev__DestroyPullPoint(soap, data, "-tev:DestroyPullPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__DestroyPullPoint
#define soap_POST_send___tev__DestroyPullPoint(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__DestroyPullPoint(soap, data), 0) || soap_put___tev__DestroyPullPoint(soap, data, "-tev:DestroyPullPoint", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__DestroyPullPoint * SOAP_FMAC4 soap_get___tev__DestroyPullPoint(struct soap*, struct __tev__DestroyPullPoint *, const char*, const char*);

#ifndef soap_read___tev__DestroyPullPoint
#define soap_read___tev__DestroyPullPoint(soap, data) ( ((data) ? (soap_default___tev__DestroyPullPoint(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__DestroyPullPoint(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__DestroyPullPoint
#define soap_GET___tev__DestroyPullPoint(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__DestroyPullPoint(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__DestroyPullPoint
#define soap_POST_recv___tev__DestroyPullPoint(soap, data) ( soap_read___tev__DestroyPullPoint(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__GetMessages_DEFINED
#define SOAP_TYPE___tev__GetMessages_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__GetMessages(struct soap*, struct __tev__GetMessages *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__GetMessages(struct soap*, const struct __tev__GetMessages *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__GetMessages(struct soap*, const char*, int, const struct __tev__GetMessages *, const char*);
SOAP_FMAC3 struct __tev__GetMessages * SOAP_FMAC4 soap_in___tev__GetMessages(struct soap*, const char*, struct __tev__GetMessages *, const char*);

SOAP_FMAC3 struct __tev__GetMessages * SOAP_FMAC4 soap_new___tev__GetMessages(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__GetMessages(struct soap*, const struct __tev__GetMessages *, const char*, const char*);

#ifndef soap_write___tev__GetMessages
#define soap_write___tev__GetMessages(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__GetMessages(soap, data), 0) || soap_put___tev__GetMessages(soap, data, "-tev:GetMessages", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__GetMessages
#define soap_PUT___tev__GetMessages(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetMessages(soap, data), 0) || soap_put___tev__GetMessages(soap, data, "-tev:GetMessages", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__GetMessages
#define soap_PATCH___tev__GetMessages(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetMessages(soap, data), 0) || soap_put___tev__GetMessages(soap, data, "-tev:GetMessages", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__GetMessages
#define soap_POST_send___tev__GetMessages(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetMessages(soap, data), 0) || soap_put___tev__GetMessages(soap, data, "-tev:GetMessages", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__GetMessages * SOAP_FMAC4 soap_get___tev__GetMessages(struct soap*, struct __tev__GetMessages *, const char*, const char*);

#ifndef soap_read___tev__GetMessages
#define soap_read___tev__GetMessages(soap, data) ( ((data) ? (soap_default___tev__GetMessages(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__GetMessages(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__GetMessages
#define soap_GET___tev__GetMessages(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__GetMessages(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__GetMessages
#define soap_POST_recv___tev__GetMessages(soap, data) ( soap_read___tev__GetMessages(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__Notify_DEFINED
#define SOAP_TYPE___tev__Notify_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__Notify(struct soap*, struct __tev__Notify *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__Notify(struct soap*, const struct __tev__Notify *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__Notify(struct soap*, const char*, int, const struct __tev__Notify *, const char*);
SOAP_FMAC3 struct __tev__Notify * SOAP_FMAC4 soap_in___tev__Notify(struct soap*, const char*, struct __tev__Notify *, const char*);

SOAP_FMAC3 struct __tev__Notify * SOAP_FMAC4 soap_new___tev__Notify(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__Notify(struct soap*, const struct __tev__Notify *, const char*, const char*);

#ifndef soap_write___tev__Notify
#define soap_write___tev__Notify(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__Notify(soap, data), 0) || soap_put___tev__Notify(soap, data, "-tev:Notify", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__Notify
#define soap_PUT___tev__Notify(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Notify(soap, data), 0) || soap_put___tev__Notify(soap, data, "-tev:Notify", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__Notify
#define soap_PATCH___tev__Notify(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Notify(soap, data), 0) || soap_put___tev__Notify(soap, data, "-tev:Notify", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__Notify
#define soap_POST_send___tev__Notify(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Notify(soap, data), 0) || soap_put___tev__Notify(soap, data, "-tev:Notify", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__Notify * SOAP_FMAC4 soap_get___tev__Notify(struct soap*, struct __tev__Notify *, const char*, const char*);

#ifndef soap_read___tev__Notify
#define soap_read___tev__Notify(soap, data) ( ((data) ? (soap_default___tev__Notify(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__Notify(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__Notify
#define soap_GET___tev__Notify(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__Notify(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__Notify
#define soap_POST_recv___tev__Notify(soap, data) ( soap_read___tev__Notify(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__GetCurrentMessage_DEFINED
#define SOAP_TYPE___tev__GetCurrentMessage_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__GetCurrentMessage(struct soap*, struct __tev__GetCurrentMessage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__GetCurrentMessage(struct soap*, const struct __tev__GetCurrentMessage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__GetCurrentMessage(struct soap*, const char*, int, const struct __tev__GetCurrentMessage *, const char*);
SOAP_FMAC3 struct __tev__GetCurrentMessage * SOAP_FMAC4 soap_in___tev__GetCurrentMessage(struct soap*, const char*, struct __tev__GetCurrentMessage *, const char*);

SOAP_FMAC3 struct __tev__GetCurrentMessage * SOAP_FMAC4 soap_new___tev__GetCurrentMessage(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__GetCurrentMessage(struct soap*, const struct __tev__GetCurrentMessage *, const char*, const char*);

#ifndef soap_write___tev__GetCurrentMessage
#define soap_write___tev__GetCurrentMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__GetCurrentMessage(soap, data), 0) || soap_put___tev__GetCurrentMessage(soap, data, "-tev:GetCurrentMessage", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__GetCurrentMessage
#define soap_PUT___tev__GetCurrentMessage(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetCurrentMessage(soap, data), 0) || soap_put___tev__GetCurrentMessage(soap, data, "-tev:GetCurrentMessage", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__GetCurrentMessage
#define soap_PATCH___tev__GetCurrentMessage(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetCurrentMessage(soap, data), 0) || soap_put___tev__GetCurrentMessage(soap, data, "-tev:GetCurrentMessage", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__GetCurrentMessage
#define soap_POST_send___tev__GetCurrentMessage(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetCurrentMessage(soap, data), 0) || soap_put___tev__GetCurrentMessage(soap, data, "-tev:GetCurrentMessage", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__GetCurrentMessage * SOAP_FMAC4 soap_get___tev__GetCurrentMessage(struct soap*, struct __tev__GetCurrentMessage *, const char*, const char*);

#ifndef soap_read___tev__GetCurrentMessage
#define soap_read___tev__GetCurrentMessage(soap, data) ( ((data) ? (soap_default___tev__GetCurrentMessage(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__GetCurrentMessage(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__GetCurrentMessage
#define soap_GET___tev__GetCurrentMessage(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__GetCurrentMessage(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__GetCurrentMessage
#define soap_POST_recv___tev__GetCurrentMessage(soap, data) ( soap_read___tev__GetCurrentMessage(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__Subscribe_DEFINED
#define SOAP_TYPE___tev__Subscribe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__Subscribe(struct soap*, struct __tev__Subscribe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__Subscribe(struct soap*, const struct __tev__Subscribe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__Subscribe(struct soap*, const char*, int, const struct __tev__Subscribe *, const char*);
SOAP_FMAC3 struct __tev__Subscribe * SOAP_FMAC4 soap_in___tev__Subscribe(struct soap*, const char*, struct __tev__Subscribe *, const char*);

SOAP_FMAC3 struct __tev__Subscribe * SOAP_FMAC4 soap_new___tev__Subscribe(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__Subscribe(struct soap*, const struct __tev__Subscribe *, const char*, const char*);

#ifndef soap_write___tev__Subscribe
#define soap_write___tev__Subscribe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__Subscribe(soap, data), 0) || soap_put___tev__Subscribe(soap, data, "-tev:Subscribe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__Subscribe
#define soap_PUT___tev__Subscribe(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Subscribe(soap, data), 0) || soap_put___tev__Subscribe(soap, data, "-tev:Subscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__Subscribe
#define soap_PATCH___tev__Subscribe(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Subscribe(soap, data), 0) || soap_put___tev__Subscribe(soap, data, "-tev:Subscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__Subscribe
#define soap_POST_send___tev__Subscribe(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Subscribe(soap, data), 0) || soap_put___tev__Subscribe(soap, data, "-tev:Subscribe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__Subscribe * SOAP_FMAC4 soap_get___tev__Subscribe(struct soap*, struct __tev__Subscribe *, const char*, const char*);

#ifndef soap_read___tev__Subscribe
#define soap_read___tev__Subscribe(soap, data) ( ((data) ? (soap_default___tev__Subscribe(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__Subscribe(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__Subscribe
#define soap_GET___tev__Subscribe(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__Subscribe(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__Subscribe
#define soap_POST_recv___tev__Subscribe(soap, data) ( soap_read___tev__Subscribe(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__Unsubscribe__DEFINED
#define SOAP_TYPE___tev__Unsubscribe__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__Unsubscribe_(struct soap*, struct __tev__Unsubscribe_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__Unsubscribe_(struct soap*, const struct __tev__Unsubscribe_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__Unsubscribe_(struct soap*, const char*, int, const struct __tev__Unsubscribe_ *, const char*);
SOAP_FMAC3 struct __tev__Unsubscribe_ * SOAP_FMAC4 soap_in___tev__Unsubscribe_(struct soap*, const char*, struct __tev__Unsubscribe_ *, const char*);

SOAP_FMAC3 struct __tev__Unsubscribe_ * SOAP_FMAC4 soap_new___tev__Unsubscribe_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__Unsubscribe_(struct soap*, const struct __tev__Unsubscribe_ *, const char*, const char*);

#ifndef soap_write___tev__Unsubscribe_
#define soap_write___tev__Unsubscribe_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__Unsubscribe_(soap, data), 0) || soap_put___tev__Unsubscribe_(soap, data, "-tev:Unsubscribe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__Unsubscribe_
#define soap_PUT___tev__Unsubscribe_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Unsubscribe_(soap, data), 0) || soap_put___tev__Unsubscribe_(soap, data, "-tev:Unsubscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__Unsubscribe_
#define soap_PATCH___tev__Unsubscribe_(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Unsubscribe_(soap, data), 0) || soap_put___tev__Unsubscribe_(soap, data, "-tev:Unsubscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__Unsubscribe_
#define soap_POST_send___tev__Unsubscribe_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Unsubscribe_(soap, data), 0) || soap_put___tev__Unsubscribe_(soap, data, "-tev:Unsubscribe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__Unsubscribe_ * SOAP_FMAC4 soap_get___tev__Unsubscribe_(struct soap*, struct __tev__Unsubscribe_ *, const char*, const char*);

#ifndef soap_read___tev__Unsubscribe_
#define soap_read___tev__Unsubscribe_(soap, data) ( ((data) ? (soap_default___tev__Unsubscribe_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__Unsubscribe_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__Unsubscribe_
#define soap_GET___tev__Unsubscribe_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__Unsubscribe_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__Unsubscribe_
#define soap_POST_recv___tev__Unsubscribe_(soap, data) ( soap_read___tev__Unsubscribe_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__Renew_DEFINED
#define SOAP_TYPE___tev__Renew_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__Renew(struct soap*, struct __tev__Renew *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__Renew(struct soap*, const struct __tev__Renew *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__Renew(struct soap*, const char*, int, const struct __tev__Renew *, const char*);
SOAP_FMAC3 struct __tev__Renew * SOAP_FMAC4 soap_in___tev__Renew(struct soap*, const char*, struct __tev__Renew *, const char*);

SOAP_FMAC3 struct __tev__Renew * SOAP_FMAC4 soap_new___tev__Renew(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__Renew(struct soap*, const struct __tev__Renew *, const char*, const char*);

#ifndef soap_write___tev__Renew
#define soap_write___tev__Renew(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__Renew(soap, data), 0) || soap_put___tev__Renew(soap, data, "-tev:Renew", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__Renew
#define soap_PUT___tev__Renew(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Renew(soap, data), 0) || soap_put___tev__Renew(soap, data, "-tev:Renew", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__Renew
#define soap_PATCH___tev__Renew(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Renew(soap, data), 0) || soap_put___tev__Renew(soap, data, "-tev:Renew", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__Renew
#define soap_POST_send___tev__Renew(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Renew(soap, data), 0) || soap_put___tev__Renew(soap, data, "-tev:Renew", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__Renew * SOAP_FMAC4 soap_get___tev__Renew(struct soap*, struct __tev__Renew *, const char*, const char*);

#ifndef soap_read___tev__Renew
#define soap_read___tev__Renew(soap, data) ( ((data) ? (soap_default___tev__Renew(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__Renew(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__Renew
#define soap_GET___tev__Renew(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__Renew(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__Renew
#define soap_POST_recv___tev__Renew(soap, data) ( soap_read___tev__Renew(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__GetEventBrokers_DEFINED
#define SOAP_TYPE___tev__GetEventBrokers_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__GetEventBrokers(struct soap*, struct __tev__GetEventBrokers *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__GetEventBrokers(struct soap*, const struct __tev__GetEventBrokers *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__GetEventBrokers(struct soap*, const char*, int, const struct __tev__GetEventBrokers *, const char*);
SOAP_FMAC3 struct __tev__GetEventBrokers * SOAP_FMAC4 soap_in___tev__GetEventBrokers(struct soap*, const char*, struct __tev__GetEventBrokers *, const char*);

SOAP_FMAC3 struct __tev__GetEventBrokers * SOAP_FMAC4 soap_new___tev__GetEventBrokers(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__GetEventBrokers(struct soap*, const struct __tev__GetEventBrokers *, const char*, const char*);

#ifndef soap_write___tev__GetEventBrokers
#define soap_write___tev__GetEventBrokers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__GetEventBrokers(soap, data), 0) || soap_put___tev__GetEventBrokers(soap, data, "-tev:GetEventBrokers", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__GetEventBrokers
#define soap_PUT___tev__GetEventBrokers(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetEventBrokers(soap, data), 0) || soap_put___tev__GetEventBrokers(soap, data, "-tev:GetEventBrokers", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__GetEventBrokers
#define soap_PATCH___tev__GetEventBrokers(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetEventBrokers(soap, data), 0) || soap_put___tev__GetEventBrokers(soap, data, "-tev:GetEventBrokers", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__GetEventBrokers
#define soap_POST_send___tev__GetEventBrokers(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetEventBrokers(soap, data), 0) || soap_put___tev__GetEventBrokers(soap, data, "-tev:GetEventBrokers", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__GetEventBrokers * SOAP_FMAC4 soap_get___tev__GetEventBrokers(struct soap*, struct __tev__GetEventBrokers *, const char*, const char*);

#ifndef soap_read___tev__GetEventBrokers
#define soap_read___tev__GetEventBrokers(soap, data) ( ((data) ? (soap_default___tev__GetEventBrokers(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__GetEventBrokers(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__GetEventBrokers
#define soap_GET___tev__GetEventBrokers(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__GetEventBrokers(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__GetEventBrokers
#define soap_POST_recv___tev__GetEventBrokers(soap, data) ( soap_read___tev__GetEventBrokers(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__DeleteEventBroker_DEFINED
#define SOAP_TYPE___tev__DeleteEventBroker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__DeleteEventBroker(struct soap*, struct __tev__DeleteEventBroker *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__DeleteEventBroker(struct soap*, const struct __tev__DeleteEventBroker *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__DeleteEventBroker(struct soap*, const char*, int, const struct __tev__DeleteEventBroker *, const char*);
SOAP_FMAC3 struct __tev__DeleteEventBroker * SOAP_FMAC4 soap_in___tev__DeleteEventBroker(struct soap*, const char*, struct __tev__DeleteEventBroker *, const char*);

SOAP_FMAC3 struct __tev__DeleteEventBroker * SOAP_FMAC4 soap_new___tev__DeleteEventBroker(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__DeleteEventBroker(struct soap*, const struct __tev__DeleteEventBroker *, const char*, const char*);

#ifndef soap_write___tev__DeleteEventBroker
#define soap_write___tev__DeleteEventBroker(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__DeleteEventBroker(soap, data), 0) || soap_put___tev__DeleteEventBroker(soap, data, "-tev:DeleteEventBroker", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__DeleteEventBroker
#define soap_PUT___tev__DeleteEventBroker(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__DeleteEventBroker(soap, data), 0) || soap_put___tev__DeleteEventBroker(soap, data, "-tev:DeleteEventBroker", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__DeleteEventBroker
#define soap_PATCH___tev__DeleteEventBroker(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__DeleteEventBroker(soap, data), 0) || soap_put___tev__DeleteEventBroker(soap, data, "-tev:DeleteEventBroker", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__DeleteEventBroker
#define soap_POST_send___tev__DeleteEventBroker(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__DeleteEventBroker(soap, data), 0) || soap_put___tev__DeleteEventBroker(soap, data, "-tev:DeleteEventBroker", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__DeleteEventBroker * SOAP_FMAC4 soap_get___tev__DeleteEventBroker(struct soap*, struct __tev__DeleteEventBroker *, const char*, const char*);

#ifndef soap_read___tev__DeleteEventBroker
#define soap_read___tev__DeleteEventBroker(soap, data) ( ((data) ? (soap_default___tev__DeleteEventBroker(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__DeleteEventBroker(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__DeleteEventBroker
#define soap_GET___tev__DeleteEventBroker(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__DeleteEventBroker(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__DeleteEventBroker
#define soap_POST_recv___tev__DeleteEventBroker(soap, data) ( soap_read___tev__DeleteEventBroker(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__AddEventBroker_DEFINED
#define SOAP_TYPE___tev__AddEventBroker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__AddEventBroker(struct soap*, struct __tev__AddEventBroker *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__AddEventBroker(struct soap*, const struct __tev__AddEventBroker *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__AddEventBroker(struct soap*, const char*, int, const struct __tev__AddEventBroker *, const char*);
SOAP_FMAC3 struct __tev__AddEventBroker * SOAP_FMAC4 soap_in___tev__AddEventBroker(struct soap*, const char*, struct __tev__AddEventBroker *, const char*);

SOAP_FMAC3 struct __tev__AddEventBroker * SOAP_FMAC4 soap_new___tev__AddEventBroker(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__AddEventBroker(struct soap*, const struct __tev__AddEventBroker *, const char*, const char*);

#ifndef soap_write___tev__AddEventBroker
#define soap_write___tev__AddEventBroker(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__AddEventBroker(soap, data), 0) || soap_put___tev__AddEventBroker(soap, data, "-tev:AddEventBroker", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__AddEventBroker
#define soap_PUT___tev__AddEventBroker(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__AddEventBroker(soap, data), 0) || soap_put___tev__AddEventBroker(soap, data, "-tev:AddEventBroker", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__AddEventBroker
#define soap_PATCH___tev__AddEventBroker(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__AddEventBroker(soap, data), 0) || soap_put___tev__AddEventBroker(soap, data, "-tev:AddEventBroker", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__AddEventBroker
#define soap_POST_send___tev__AddEventBroker(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__AddEventBroker(soap, data), 0) || soap_put___tev__AddEventBroker(soap, data, "-tev:AddEventBroker", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__AddEventBroker * SOAP_FMAC4 soap_get___tev__AddEventBroker(struct soap*, struct __tev__AddEventBroker *, const char*, const char*);

#ifndef soap_read___tev__AddEventBroker
#define soap_read___tev__AddEventBroker(soap, data) ( ((data) ? (soap_default___tev__AddEventBroker(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__AddEventBroker(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__AddEventBroker
#define soap_GET___tev__AddEventBroker(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__AddEventBroker(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__AddEventBroker
#define soap_POST_recv___tev__AddEventBroker(soap, data) ( soap_read___tev__AddEventBroker(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__GetEventProperties_DEFINED
#define SOAP_TYPE___tev__GetEventProperties_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__GetEventProperties(struct soap*, struct __tev__GetEventProperties *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__GetEventProperties(struct soap*, const struct __tev__GetEventProperties *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__GetEventProperties(struct soap*, const char*, int, const struct __tev__GetEventProperties *, const char*);
SOAP_FMAC3 struct __tev__GetEventProperties * SOAP_FMAC4 soap_in___tev__GetEventProperties(struct soap*, const char*, struct __tev__GetEventProperties *, const char*);

SOAP_FMAC3 struct __tev__GetEventProperties * SOAP_FMAC4 soap_new___tev__GetEventProperties(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__GetEventProperties(struct soap*, const struct __tev__GetEventProperties *, const char*, const char*);

#ifndef soap_write___tev__GetEventProperties
#define soap_write___tev__GetEventProperties(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__GetEventProperties(soap, data), 0) || soap_put___tev__GetEventProperties(soap, data, "-tev:GetEventProperties", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__GetEventProperties
#define soap_PUT___tev__GetEventProperties(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetEventProperties(soap, data), 0) || soap_put___tev__GetEventProperties(soap, data, "-tev:GetEventProperties", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__GetEventProperties
#define soap_PATCH___tev__GetEventProperties(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetEventProperties(soap, data), 0) || soap_put___tev__GetEventProperties(soap, data, "-tev:GetEventProperties", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__GetEventProperties
#define soap_POST_send___tev__GetEventProperties(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetEventProperties(soap, data), 0) || soap_put___tev__GetEventProperties(soap, data, "-tev:GetEventProperties", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__GetEventProperties * SOAP_FMAC4 soap_get___tev__GetEventProperties(struct soap*, struct __tev__GetEventProperties *, const char*, const char*);

#ifndef soap_read___tev__GetEventProperties
#define soap_read___tev__GetEventProperties(soap, data) ( ((data) ? (soap_default___tev__GetEventProperties(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__GetEventProperties(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__GetEventProperties
#define soap_GET___tev__GetEventProperties(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__GetEventProperties(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__GetEventProperties
#define soap_POST_recv___tev__GetEventProperties(soap, data) ( soap_read___tev__GetEventProperties(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__CreatePullPointSubscription_DEFINED
#define SOAP_TYPE___tev__CreatePullPointSubscription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__CreatePullPointSubscription(struct soap*, struct __tev__CreatePullPointSubscription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__CreatePullPointSubscription(struct soap*, const struct __tev__CreatePullPointSubscription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__CreatePullPointSubscription(struct soap*, const char*, int, const struct __tev__CreatePullPointSubscription *, const char*);
SOAP_FMAC3 struct __tev__CreatePullPointSubscription * SOAP_FMAC4 soap_in___tev__CreatePullPointSubscription(struct soap*, const char*, struct __tev__CreatePullPointSubscription *, const char*);

SOAP_FMAC3 struct __tev__CreatePullPointSubscription * SOAP_FMAC4 soap_new___tev__CreatePullPointSubscription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__CreatePullPointSubscription(struct soap*, const struct __tev__CreatePullPointSubscription *, const char*, const char*);

#ifndef soap_write___tev__CreatePullPointSubscription
#define soap_write___tev__CreatePullPointSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__CreatePullPointSubscription(soap, data), 0) || soap_put___tev__CreatePullPointSubscription(soap, data, "-tev:CreatePullPointSubscription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__CreatePullPointSubscription
#define soap_PUT___tev__CreatePullPointSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__CreatePullPointSubscription(soap, data), 0) || soap_put___tev__CreatePullPointSubscription(soap, data, "-tev:CreatePullPointSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__CreatePullPointSubscription
#define soap_PATCH___tev__CreatePullPointSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__CreatePullPointSubscription(soap, data), 0) || soap_put___tev__CreatePullPointSubscription(soap, data, "-tev:CreatePullPointSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__CreatePullPointSubscription
#define soap_POST_send___tev__CreatePullPointSubscription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__CreatePullPointSubscription(soap, data), 0) || soap_put___tev__CreatePullPointSubscription(soap, data, "-tev:CreatePullPointSubscription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__CreatePullPointSubscription * SOAP_FMAC4 soap_get___tev__CreatePullPointSubscription(struct soap*, struct __tev__CreatePullPointSubscription *, const char*, const char*);

#ifndef soap_read___tev__CreatePullPointSubscription
#define soap_read___tev__CreatePullPointSubscription(soap, data) ( ((data) ? (soap_default___tev__CreatePullPointSubscription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__CreatePullPointSubscription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__CreatePullPointSubscription
#define soap_GET___tev__CreatePullPointSubscription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__CreatePullPointSubscription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__CreatePullPointSubscription
#define soap_POST_recv___tev__CreatePullPointSubscription(soap, data) ( soap_read___tev__CreatePullPointSubscription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__GetServiceCapabilities_DEFINED
#define SOAP_TYPE___tev__GetServiceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__GetServiceCapabilities(struct soap*, struct __tev__GetServiceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__GetServiceCapabilities(struct soap*, const struct __tev__GetServiceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__GetServiceCapabilities(struct soap*, const char*, int, const struct __tev__GetServiceCapabilities *, const char*);
SOAP_FMAC3 struct __tev__GetServiceCapabilities * SOAP_FMAC4 soap_in___tev__GetServiceCapabilities(struct soap*, const char*, struct __tev__GetServiceCapabilities *, const char*);

SOAP_FMAC3 struct __tev__GetServiceCapabilities * SOAP_FMAC4 soap_new___tev__GetServiceCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__GetServiceCapabilities(struct soap*, const struct __tev__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_write___tev__GetServiceCapabilities
#define soap_write___tev__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__GetServiceCapabilities(soap, data), 0) || soap_put___tev__GetServiceCapabilities(soap, data, "-tev:GetServiceCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__GetServiceCapabilities
#define soap_PUT___tev__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetServiceCapabilities(soap, data), 0) || soap_put___tev__GetServiceCapabilities(soap, data, "-tev:GetServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__GetServiceCapabilities
#define soap_PATCH___tev__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetServiceCapabilities(soap, data), 0) || soap_put___tev__GetServiceCapabilities(soap, data, "-tev:GetServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__GetServiceCapabilities
#define soap_POST_send___tev__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__GetServiceCapabilities(soap, data), 0) || soap_put___tev__GetServiceCapabilities(soap, data, "-tev:GetServiceCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__GetServiceCapabilities * SOAP_FMAC4 soap_get___tev__GetServiceCapabilities(struct soap*, struct __tev__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read___tev__GetServiceCapabilities
#define soap_read___tev__GetServiceCapabilities(soap, data) ( ((data) ? (soap_default___tev__GetServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__GetServiceCapabilities
#define soap_GET___tev__GetServiceCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__GetServiceCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__GetServiceCapabilities
#define soap_POST_recv___tev__GetServiceCapabilities(soap, data) ( soap_read___tev__GetServiceCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__Unsubscribe_DEFINED
#define SOAP_TYPE___tev__Unsubscribe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__Unsubscribe(struct soap*, struct __tev__Unsubscribe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__Unsubscribe(struct soap*, const struct __tev__Unsubscribe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__Unsubscribe(struct soap*, const char*, int, const struct __tev__Unsubscribe *, const char*);
SOAP_FMAC3 struct __tev__Unsubscribe * SOAP_FMAC4 soap_in___tev__Unsubscribe(struct soap*, const char*, struct __tev__Unsubscribe *, const char*);

SOAP_FMAC3 struct __tev__Unsubscribe * SOAP_FMAC4 soap_new___tev__Unsubscribe(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__Unsubscribe(struct soap*, const struct __tev__Unsubscribe *, const char*, const char*);

#ifndef soap_write___tev__Unsubscribe
#define soap_write___tev__Unsubscribe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__Unsubscribe(soap, data), 0) || soap_put___tev__Unsubscribe(soap, data, "-tev:Unsubscribe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__Unsubscribe
#define soap_PUT___tev__Unsubscribe(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Unsubscribe(soap, data), 0) || soap_put___tev__Unsubscribe(soap, data, "-tev:Unsubscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__Unsubscribe
#define soap_PATCH___tev__Unsubscribe(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Unsubscribe(soap, data), 0) || soap_put___tev__Unsubscribe(soap, data, "-tev:Unsubscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__Unsubscribe
#define soap_POST_send___tev__Unsubscribe(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Unsubscribe(soap, data), 0) || soap_put___tev__Unsubscribe(soap, data, "-tev:Unsubscribe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__Unsubscribe * SOAP_FMAC4 soap_get___tev__Unsubscribe(struct soap*, struct __tev__Unsubscribe *, const char*, const char*);

#ifndef soap_read___tev__Unsubscribe
#define soap_read___tev__Unsubscribe(soap, data) ( ((data) ? (soap_default___tev__Unsubscribe(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__Unsubscribe(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__Unsubscribe
#define soap_GET___tev__Unsubscribe(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__Unsubscribe(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__Unsubscribe
#define soap_POST_recv___tev__Unsubscribe(soap, data) ( soap_read___tev__Unsubscribe(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__SetSynchronizationPoint_DEFINED
#define SOAP_TYPE___tev__SetSynchronizationPoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__SetSynchronizationPoint(struct soap*, struct __tev__SetSynchronizationPoint *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__SetSynchronizationPoint(struct soap*, const struct __tev__SetSynchronizationPoint *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__SetSynchronizationPoint(struct soap*, const char*, int, const struct __tev__SetSynchronizationPoint *, const char*);
SOAP_FMAC3 struct __tev__SetSynchronizationPoint * SOAP_FMAC4 soap_in___tev__SetSynchronizationPoint(struct soap*, const char*, struct __tev__SetSynchronizationPoint *, const char*);

SOAP_FMAC3 struct __tev__SetSynchronizationPoint * SOAP_FMAC4 soap_new___tev__SetSynchronizationPoint(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__SetSynchronizationPoint(struct soap*, const struct __tev__SetSynchronizationPoint *, const char*, const char*);

#ifndef soap_write___tev__SetSynchronizationPoint
#define soap_write___tev__SetSynchronizationPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__SetSynchronizationPoint(soap, data), 0) || soap_put___tev__SetSynchronizationPoint(soap, data, "-tev:SetSynchronizationPoint", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__SetSynchronizationPoint
#define soap_PUT___tev__SetSynchronizationPoint(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__SetSynchronizationPoint(soap, data), 0) || soap_put___tev__SetSynchronizationPoint(soap, data, "-tev:SetSynchronizationPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__SetSynchronizationPoint
#define soap_PATCH___tev__SetSynchronizationPoint(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__SetSynchronizationPoint(soap, data), 0) || soap_put___tev__SetSynchronizationPoint(soap, data, "-tev:SetSynchronizationPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__SetSynchronizationPoint
#define soap_POST_send___tev__SetSynchronizationPoint(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__SetSynchronizationPoint(soap, data), 0) || soap_put___tev__SetSynchronizationPoint(soap, data, "-tev:SetSynchronizationPoint", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__SetSynchronizationPoint * SOAP_FMAC4 soap_get___tev__SetSynchronizationPoint(struct soap*, struct __tev__SetSynchronizationPoint *, const char*, const char*);

#ifndef soap_read___tev__SetSynchronizationPoint
#define soap_read___tev__SetSynchronizationPoint(soap, data) ( ((data) ? (soap_default___tev__SetSynchronizationPoint(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__SetSynchronizationPoint(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__SetSynchronizationPoint
#define soap_GET___tev__SetSynchronizationPoint(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__SetSynchronizationPoint(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__SetSynchronizationPoint
#define soap_POST_recv___tev__SetSynchronizationPoint(soap, data) ( soap_read___tev__SetSynchronizationPoint(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__Seek_DEFINED
#define SOAP_TYPE___tev__Seek_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__Seek(struct soap*, struct __tev__Seek *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__Seek(struct soap*, const struct __tev__Seek *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__Seek(struct soap*, const char*, int, const struct __tev__Seek *, const char*);
SOAP_FMAC3 struct __tev__Seek * SOAP_FMAC4 soap_in___tev__Seek(struct soap*, const char*, struct __tev__Seek *, const char*);

SOAP_FMAC3 struct __tev__Seek * SOAP_FMAC4 soap_new___tev__Seek(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__Seek(struct soap*, const struct __tev__Seek *, const char*, const char*);

#ifndef soap_write___tev__Seek
#define soap_write___tev__Seek(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__Seek(soap, data), 0) || soap_put___tev__Seek(soap, data, "-tev:Seek", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__Seek
#define soap_PUT___tev__Seek(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Seek(soap, data), 0) || soap_put___tev__Seek(soap, data, "-tev:Seek", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__Seek
#define soap_PATCH___tev__Seek(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Seek(soap, data), 0) || soap_put___tev__Seek(soap, data, "-tev:Seek", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__Seek
#define soap_POST_send___tev__Seek(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__Seek(soap, data), 0) || soap_put___tev__Seek(soap, data, "-tev:Seek", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__Seek * SOAP_FMAC4 soap_get___tev__Seek(struct soap*, struct __tev__Seek *, const char*, const char*);

#ifndef soap_read___tev__Seek
#define soap_read___tev__Seek(soap, data) ( ((data) ? (soap_default___tev__Seek(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__Seek(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__Seek
#define soap_GET___tev__Seek(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__Seek(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__Seek
#define soap_POST_recv___tev__Seek(soap, data) ( soap_read___tev__Seek(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tev__PullMessages_DEFINED
#define SOAP_TYPE___tev__PullMessages_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tev__PullMessages(struct soap*, struct __tev__PullMessages *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tev__PullMessages(struct soap*, const struct __tev__PullMessages *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tev__PullMessages(struct soap*, const char*, int, const struct __tev__PullMessages *, const char*);
SOAP_FMAC3 struct __tev__PullMessages * SOAP_FMAC4 soap_in___tev__PullMessages(struct soap*, const char*, struct __tev__PullMessages *, const char*);

SOAP_FMAC3 struct __tev__PullMessages * SOAP_FMAC4 soap_new___tev__PullMessages(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tev__PullMessages(struct soap*, const struct __tev__PullMessages *, const char*, const char*);

#ifndef soap_write___tev__PullMessages
#define soap_write___tev__PullMessages(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tev__PullMessages(soap, data), 0) || soap_put___tev__PullMessages(soap, data, "-tev:PullMessages", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tev__PullMessages
#define soap_PUT___tev__PullMessages(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__PullMessages(soap, data), 0) || soap_put___tev__PullMessages(soap, data, "-tev:PullMessages", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tev__PullMessages
#define soap_PATCH___tev__PullMessages(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__PullMessages(soap, data), 0) || soap_put___tev__PullMessages(soap, data, "-tev:PullMessages", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tev__PullMessages
#define soap_POST_send___tev__PullMessages(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tev__PullMessages(soap, data), 0) || soap_put___tev__PullMessages(soap, data, "-tev:PullMessages", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tev__PullMessages * SOAP_FMAC4 soap_get___tev__PullMessages(struct soap*, struct __tev__PullMessages *, const char*, const char*);

#ifndef soap_read___tev__PullMessages
#define soap_read___tev__PullMessages(soap, data) ( ((data) ? (soap_default___tev__PullMessages(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tev__PullMessages(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tev__PullMessages
#define soap_GET___tev__PullMessages(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tev__PullMessages(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tev__PullMessages
#define soap_POST_recv___tev__PullMessages(soap, data) ( soap_read___tev__PullMessages(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wstop__TopicType_DEFINED
#define SOAP_TYPE_wstop__TopicType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wstop__TopicType(struct soap*, struct wstop__TopicType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__TopicType(struct soap*, const struct wstop__TopicType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__TopicType(struct soap*, const char*, int, const struct wstop__TopicType *, const char*);
SOAP_FMAC3 struct wstop__TopicType * SOAP_FMAC4 soap_in_wstop__TopicType(struct soap*, const char*, struct wstop__TopicType *, const char*);

SOAP_FMAC3 struct wstop__TopicType * SOAP_FMAC4 soap_new_wstop__TopicType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__TopicType(struct soap*, const struct wstop__TopicType *, const char*, const char*);

#ifndef soap_write_wstop__TopicType
#define soap_write_wstop__TopicType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__TopicType(soap, data), 0) || soap_put_wstop__TopicType(soap, data, "wstop:TopicType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__TopicType
#define soap_PUT_wstop__TopicType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicType(soap, data), 0) || soap_put_wstop__TopicType(soap, data, "wstop:TopicType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__TopicType
#define soap_PATCH_wstop__TopicType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicType(soap, data), 0) || soap_put_wstop__TopicType(soap, data, "wstop:TopicType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__TopicType
#define soap_POST_send_wstop__TopicType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicType(soap, data), 0) || soap_put_wstop__TopicType(soap, data, "wstop:TopicType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wstop__TopicType * SOAP_FMAC4 soap_get_wstop__TopicType(struct soap*, struct wstop__TopicType *, const char*, const char*);

#ifndef soap_read_wstop__TopicType
#define soap_read_wstop__TopicType(soap, data) ( ((data) ? (soap_default_wstop__TopicType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__TopicType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__TopicType
#define soap_GET_wstop__TopicType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__TopicType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__TopicType
#define soap_POST_recv_wstop__TopicType(soap, data) ( soap_read_wstop__TopicType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wstop__TopicNamespaceType_Topic_DEFINED
#define SOAP_TYPE__wstop__TopicNamespaceType_Topic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wstop__TopicNamespaceType_Topic(struct soap*, struct _wstop__TopicNamespaceType_Topic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wstop__TopicNamespaceType_Topic(struct soap*, const struct _wstop__TopicNamespaceType_Topic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wstop__TopicNamespaceType_Topic(struct soap*, const char*, int, const struct _wstop__TopicNamespaceType_Topic *, const char*);
SOAP_FMAC3 struct _wstop__TopicNamespaceType_Topic * SOAP_FMAC4 soap_in__wstop__TopicNamespaceType_Topic(struct soap*, const char*, struct _wstop__TopicNamespaceType_Topic *, const char*);

SOAP_FMAC3 struct _wstop__TopicNamespaceType_Topic * SOAP_FMAC4 soap_new__wstop__TopicNamespaceType_Topic(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wstop__TopicNamespaceType_Topic(struct soap*, const struct _wstop__TopicNamespaceType_Topic *, const char*, const char*);

#ifndef soap_write__wstop__TopicNamespaceType_Topic
#define soap_write__wstop__TopicNamespaceType_Topic(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wstop__TopicNamespaceType_Topic(soap, data), 0) || soap_put__wstop__TopicNamespaceType_Topic(soap, data, "wstop:TopicNamespaceType-Topic", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wstop__TopicNamespaceType_Topic
#define soap_PUT__wstop__TopicNamespaceType_Topic(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wstop__TopicNamespaceType_Topic(soap, data), 0) || soap_put__wstop__TopicNamespaceType_Topic(soap, data, "wstop:TopicNamespaceType-Topic", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wstop__TopicNamespaceType_Topic
#define soap_PATCH__wstop__TopicNamespaceType_Topic(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wstop__TopicNamespaceType_Topic(soap, data), 0) || soap_put__wstop__TopicNamespaceType_Topic(soap, data, "wstop:TopicNamespaceType-Topic", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wstop__TopicNamespaceType_Topic
#define soap_POST_send__wstop__TopicNamespaceType_Topic(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wstop__TopicNamespaceType_Topic(soap, data), 0) || soap_put__wstop__TopicNamespaceType_Topic(soap, data, "wstop:TopicNamespaceType-Topic", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wstop__TopicNamespaceType_Topic * SOAP_FMAC4 soap_get__wstop__TopicNamespaceType_Topic(struct soap*, struct _wstop__TopicNamespaceType_Topic *, const char*, const char*);

#ifndef soap_read__wstop__TopicNamespaceType_Topic
#define soap_read__wstop__TopicNamespaceType_Topic(soap, data) ( ((data) ? (soap_default__wstop__TopicNamespaceType_Topic(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wstop__TopicNamespaceType_Topic(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wstop__TopicNamespaceType_Topic
#define soap_GET__wstop__TopicNamespaceType_Topic(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wstop__TopicNamespaceType_Topic(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wstop__TopicNamespaceType_Topic
#define soap_POST_recv__wstop__TopicNamespaceType_Topic(soap, data) ( soap_read__wstop__TopicNamespaceType_Topic(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wstop__TopicNamespaceType_DEFINED
#define SOAP_TYPE_wstop__TopicNamespaceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wstop__TopicNamespaceType(struct soap*, struct wstop__TopicNamespaceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__TopicNamespaceType(struct soap*, const struct wstop__TopicNamespaceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__TopicNamespaceType(struct soap*, const char*, int, const struct wstop__TopicNamespaceType *, const char*);
SOAP_FMAC3 struct wstop__TopicNamespaceType * SOAP_FMAC4 soap_in_wstop__TopicNamespaceType(struct soap*, const char*, struct wstop__TopicNamespaceType *, const char*);

SOAP_FMAC3 struct wstop__TopicNamespaceType * SOAP_FMAC4 soap_new_wstop__TopicNamespaceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__TopicNamespaceType(struct soap*, const struct wstop__TopicNamespaceType *, const char*, const char*);

#ifndef soap_write_wstop__TopicNamespaceType
#define soap_write_wstop__TopicNamespaceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__TopicNamespaceType(soap, data), 0) || soap_put_wstop__TopicNamespaceType(soap, data, "wstop:TopicNamespaceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__TopicNamespaceType
#define soap_PUT_wstop__TopicNamespaceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicNamespaceType(soap, data), 0) || soap_put_wstop__TopicNamespaceType(soap, data, "wstop:TopicNamespaceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__TopicNamespaceType
#define soap_PATCH_wstop__TopicNamespaceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicNamespaceType(soap, data), 0) || soap_put_wstop__TopicNamespaceType(soap, data, "wstop:TopicNamespaceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__TopicNamespaceType
#define soap_POST_send_wstop__TopicNamespaceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicNamespaceType(soap, data), 0) || soap_put_wstop__TopicNamespaceType(soap, data, "wstop:TopicNamespaceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wstop__TopicNamespaceType * SOAP_FMAC4 soap_get_wstop__TopicNamespaceType(struct soap*, struct wstop__TopicNamespaceType *, const char*, const char*);

#ifndef soap_read_wstop__TopicNamespaceType
#define soap_read_wstop__TopicNamespaceType(soap, data) ( ((data) ? (soap_default_wstop__TopicNamespaceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__TopicNamespaceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__TopicNamespaceType
#define soap_GET_wstop__TopicNamespaceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__TopicNamespaceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__TopicNamespaceType
#define soap_POST_recv_wstop__TopicNamespaceType(soap, data) ( soap_read_wstop__TopicNamespaceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__ResumeFailedFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__ResumeFailedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, struct _wsnt__ResumeFailedFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, const struct _wsnt__ResumeFailedFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__ResumeFailedFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__ResumeFailedFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__ResumeFailedFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, const struct _wsnt__ResumeFailedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__ResumeFailedFaultType_FaultCause
#define soap_write__wsnt__ResumeFailedFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__ResumeFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_FaultCause(soap, data, "wsnt:ResumeFailedFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__ResumeFailedFaultType_FaultCause
#define soap_PUT__wsnt__ResumeFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_FaultCause(soap, data, "wsnt:ResumeFailedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__ResumeFailedFaultType_FaultCause
#define soap_PATCH__wsnt__ResumeFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_FaultCause(soap, data, "wsnt:ResumeFailedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__ResumeFailedFaultType_FaultCause
#define soap_POST_send__wsnt__ResumeFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_FaultCause(soap, data, "wsnt:ResumeFailedFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, struct _wsnt__ResumeFailedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeFailedFaultType_FaultCause
#define soap_read__wsnt__ResumeFailedFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__ResumeFailedFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__ResumeFailedFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__ResumeFailedFaultType_FaultCause
#define soap_GET__wsnt__ResumeFailedFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__ResumeFailedFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__ResumeFailedFaultType_FaultCause
#define soap_POST_recv__wsnt__ResumeFailedFaultType_FaultCause(soap, data) ( soap_read__wsnt__ResumeFailedFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__ResumeFailedFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__ResumeFailedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__ResumeFailedFaultType_Description(struct soap*, struct _wsnt__ResumeFailedFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__ResumeFailedFaultType_Description(struct soap*, const struct _wsnt__ResumeFailedFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeFailedFaultType_Description(struct soap*, const char*, int, const struct _wsnt__ResumeFailedFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_Description * SOAP_FMAC4 soap_in__wsnt__ResumeFailedFaultType_Description(struct soap*, const char*, struct _wsnt__ResumeFailedFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_Description * SOAP_FMAC4 soap_new__wsnt__ResumeFailedFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__ResumeFailedFaultType_Description(struct soap*, const struct _wsnt__ResumeFailedFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__ResumeFailedFaultType_Description
#define soap_write__wsnt__ResumeFailedFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__ResumeFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_Description(soap, data, "wsnt:ResumeFailedFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__ResumeFailedFaultType_Description
#define soap_PUT__wsnt__ResumeFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_Description(soap, data, "wsnt:ResumeFailedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__ResumeFailedFaultType_Description
#define soap_PATCH__wsnt__ResumeFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_Description(soap, data, "wsnt:ResumeFailedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__ResumeFailedFaultType_Description
#define soap_POST_send__wsnt__ResumeFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_Description(soap, data, "wsnt:ResumeFailedFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_Description * SOAP_FMAC4 soap_get__wsnt__ResumeFailedFaultType_Description(struct soap*, struct _wsnt__ResumeFailedFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeFailedFaultType_Description
#define soap_read__wsnt__ResumeFailedFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__ResumeFailedFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__ResumeFailedFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__ResumeFailedFaultType_Description
#define soap_GET__wsnt__ResumeFailedFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__ResumeFailedFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__ResumeFailedFaultType_Description
#define soap_POST_recv__wsnt__ResumeFailedFaultType_Description(soap, data) ( soap_read__wsnt__ResumeFailedFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__ResumeFailedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__ResumeFailedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, struct _wsnt__ResumeFailedFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, const struct _wsnt__ResumeFailedFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__ResumeFailedFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__ResumeFailedFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__ResumeFailedFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, const struct _wsnt__ResumeFailedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_write__wsnt__ResumeFailedFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__ResumeFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_ErrorCode(soap, data, "wsnt:ResumeFailedFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_PUT__wsnt__ResumeFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_ErrorCode(soap, data, "wsnt:ResumeFailedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_PATCH__wsnt__ResumeFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_ErrorCode(soap, data, "wsnt:ResumeFailedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_POST_send__wsnt__ResumeFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_ErrorCode(soap, data, "wsnt:ResumeFailedFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, struct _wsnt__ResumeFailedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_read__wsnt__ResumeFailedFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__ResumeFailedFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__ResumeFailedFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_GET__wsnt__ResumeFailedFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__ResumeFailedFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_POST_recv__wsnt__ResumeFailedFaultType_ErrorCode(soap, data) ( soap_read__wsnt__ResumeFailedFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__ResumeFailedFaultType_DEFINED
#define SOAP_TYPE_wsnt__ResumeFailedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__ResumeFailedFaultType(struct soap*, struct wsnt__ResumeFailedFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__ResumeFailedFaultType(struct soap*, const struct wsnt__ResumeFailedFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__ResumeFailedFaultType(struct soap*, const char*, int, const struct wsnt__ResumeFailedFaultType *, const char*);
SOAP_FMAC3 struct wsnt__ResumeFailedFaultType * SOAP_FMAC4 soap_in_wsnt__ResumeFailedFaultType(struct soap*, const char*, struct wsnt__ResumeFailedFaultType *, const char*);

SOAP_FMAC3 struct wsnt__ResumeFailedFaultType * SOAP_FMAC4 soap_new_wsnt__ResumeFailedFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__ResumeFailedFaultType(struct soap*, const struct wsnt__ResumeFailedFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__ResumeFailedFaultType
#define soap_write_wsnt__ResumeFailedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__ResumeFailedFaultType(soap, data), 0) || soap_put_wsnt__ResumeFailedFaultType(soap, data, "wsnt:ResumeFailedFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__ResumeFailedFaultType
#define soap_PUT_wsnt__ResumeFailedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__ResumeFailedFaultType(soap, data), 0) || soap_put_wsnt__ResumeFailedFaultType(soap, data, "wsnt:ResumeFailedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__ResumeFailedFaultType
#define soap_PATCH_wsnt__ResumeFailedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__ResumeFailedFaultType(soap, data), 0) || soap_put_wsnt__ResumeFailedFaultType(soap, data, "wsnt:ResumeFailedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__ResumeFailedFaultType
#define soap_POST_send_wsnt__ResumeFailedFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__ResumeFailedFaultType(soap, data), 0) || soap_put_wsnt__ResumeFailedFaultType(soap, data, "wsnt:ResumeFailedFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__ResumeFailedFaultType * SOAP_FMAC4 soap_get_wsnt__ResumeFailedFaultType(struct soap*, struct wsnt__ResumeFailedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__ResumeFailedFaultType
#define soap_read_wsnt__ResumeFailedFaultType(soap, data) ( ((data) ? (soap_default_wsnt__ResumeFailedFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__ResumeFailedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__ResumeFailedFaultType
#define soap_GET_wsnt__ResumeFailedFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__ResumeFailedFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__ResumeFailedFaultType
#define soap_POST_recv_wsnt__ResumeFailedFaultType(soap, data) ( soap_read_wsnt__ResumeFailedFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__PauseFailedFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__PauseFailedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__PauseFailedFaultType_FaultCause(struct soap*, struct _wsnt__PauseFailedFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__PauseFailedFaultType_FaultCause(struct soap*, const struct _wsnt__PauseFailedFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseFailedFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__PauseFailedFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__PauseFailedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__PauseFailedFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__PauseFailedFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__PauseFailedFaultType_FaultCause(struct soap*, const struct _wsnt__PauseFailedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__PauseFailedFaultType_FaultCause
#define soap_write__wsnt__PauseFailedFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__PauseFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_FaultCause(soap, data, "wsnt:PauseFailedFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__PauseFailedFaultType_FaultCause
#define soap_PUT__wsnt__PauseFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_FaultCause(soap, data, "wsnt:PauseFailedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__PauseFailedFaultType_FaultCause
#define soap_PATCH__wsnt__PauseFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_FaultCause(soap, data, "wsnt:PauseFailedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__PauseFailedFaultType_FaultCause
#define soap_POST_send__wsnt__PauseFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_FaultCause(soap, data, "wsnt:PauseFailedFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__PauseFailedFaultType_FaultCause(struct soap*, struct _wsnt__PauseFailedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__PauseFailedFaultType_FaultCause
#define soap_read__wsnt__PauseFailedFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__PauseFailedFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__PauseFailedFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__PauseFailedFaultType_FaultCause
#define soap_GET__wsnt__PauseFailedFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__PauseFailedFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__PauseFailedFaultType_FaultCause
#define soap_POST_recv__wsnt__PauseFailedFaultType_FaultCause(soap, data) ( soap_read__wsnt__PauseFailedFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__PauseFailedFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__PauseFailedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__PauseFailedFaultType_Description(struct soap*, struct _wsnt__PauseFailedFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__PauseFailedFaultType_Description(struct soap*, const struct _wsnt__PauseFailedFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseFailedFaultType_Description(struct soap*, const char*, int, const struct _wsnt__PauseFailedFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_Description * SOAP_FMAC4 soap_in__wsnt__PauseFailedFaultType_Description(struct soap*, const char*, struct _wsnt__PauseFailedFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_Description * SOAP_FMAC4 soap_new__wsnt__PauseFailedFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__PauseFailedFaultType_Description(struct soap*, const struct _wsnt__PauseFailedFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__PauseFailedFaultType_Description
#define soap_write__wsnt__PauseFailedFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__PauseFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_Description(soap, data, "wsnt:PauseFailedFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__PauseFailedFaultType_Description
#define soap_PUT__wsnt__PauseFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_Description(soap, data, "wsnt:PauseFailedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__PauseFailedFaultType_Description
#define soap_PATCH__wsnt__PauseFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_Description(soap, data, "wsnt:PauseFailedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__PauseFailedFaultType_Description
#define soap_POST_send__wsnt__PauseFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_Description(soap, data, "wsnt:PauseFailedFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_Description * SOAP_FMAC4 soap_get__wsnt__PauseFailedFaultType_Description(struct soap*, struct _wsnt__PauseFailedFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__PauseFailedFaultType_Description
#define soap_read__wsnt__PauseFailedFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__PauseFailedFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__PauseFailedFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__PauseFailedFaultType_Description
#define soap_GET__wsnt__PauseFailedFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__PauseFailedFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__PauseFailedFaultType_Description
#define soap_POST_recv__wsnt__PauseFailedFaultType_Description(soap, data) ( soap_read__wsnt__PauseFailedFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__PauseFailedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__PauseFailedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, struct _wsnt__PauseFailedFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, const struct _wsnt__PauseFailedFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__PauseFailedFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__PauseFailedFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__PauseFailedFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, const struct _wsnt__PauseFailedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__PauseFailedFaultType_ErrorCode
#define soap_write__wsnt__PauseFailedFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__PauseFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_ErrorCode(soap, data, "wsnt:PauseFailedFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__PauseFailedFaultType_ErrorCode
#define soap_PUT__wsnt__PauseFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_ErrorCode(soap, data, "wsnt:PauseFailedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__PauseFailedFaultType_ErrorCode
#define soap_PATCH__wsnt__PauseFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_ErrorCode(soap, data, "wsnt:PauseFailedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__PauseFailedFaultType_ErrorCode
#define soap_POST_send__wsnt__PauseFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_ErrorCode(soap, data, "wsnt:PauseFailedFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, struct _wsnt__PauseFailedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__PauseFailedFaultType_ErrorCode
#define soap_read__wsnt__PauseFailedFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__PauseFailedFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__PauseFailedFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__PauseFailedFaultType_ErrorCode
#define soap_GET__wsnt__PauseFailedFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__PauseFailedFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__PauseFailedFaultType_ErrorCode
#define soap_POST_recv__wsnt__PauseFailedFaultType_ErrorCode(soap, data) ( soap_read__wsnt__PauseFailedFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__PauseFailedFaultType_DEFINED
#define SOAP_TYPE_wsnt__PauseFailedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__PauseFailedFaultType(struct soap*, struct wsnt__PauseFailedFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__PauseFailedFaultType(struct soap*, const struct wsnt__PauseFailedFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__PauseFailedFaultType(struct soap*, const char*, int, const struct wsnt__PauseFailedFaultType *, const char*);
SOAP_FMAC3 struct wsnt__PauseFailedFaultType * SOAP_FMAC4 soap_in_wsnt__PauseFailedFaultType(struct soap*, const char*, struct wsnt__PauseFailedFaultType *, const char*);

SOAP_FMAC3 struct wsnt__PauseFailedFaultType * SOAP_FMAC4 soap_new_wsnt__PauseFailedFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__PauseFailedFaultType(struct soap*, const struct wsnt__PauseFailedFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__PauseFailedFaultType
#define soap_write_wsnt__PauseFailedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__PauseFailedFaultType(soap, data), 0) || soap_put_wsnt__PauseFailedFaultType(soap, data, "wsnt:PauseFailedFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__PauseFailedFaultType
#define soap_PUT_wsnt__PauseFailedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__PauseFailedFaultType(soap, data), 0) || soap_put_wsnt__PauseFailedFaultType(soap, data, "wsnt:PauseFailedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__PauseFailedFaultType
#define soap_PATCH_wsnt__PauseFailedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__PauseFailedFaultType(soap, data), 0) || soap_put_wsnt__PauseFailedFaultType(soap, data, "wsnt:PauseFailedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__PauseFailedFaultType
#define soap_POST_send_wsnt__PauseFailedFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__PauseFailedFaultType(soap, data), 0) || soap_put_wsnt__PauseFailedFaultType(soap, data, "wsnt:PauseFailedFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__PauseFailedFaultType * SOAP_FMAC4 soap_get_wsnt__PauseFailedFaultType(struct soap*, struct wsnt__PauseFailedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__PauseFailedFaultType
#define soap_read_wsnt__PauseFailedFaultType(soap, data) ( ((data) ? (soap_default_wsnt__PauseFailedFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__PauseFailedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__PauseFailedFaultType
#define soap_GET_wsnt__PauseFailedFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__PauseFailedFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__PauseFailedFaultType
#define soap_POST_recv_wsnt__PauseFailedFaultType(soap, data) ( soap_read_wsnt__PauseFailedFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToDestroySubscriptionFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnableToDestroySubscriptionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_write__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_PUT__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_PATCH__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_POST_send__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_read__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_GET__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_POST_recv__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToDestroySubscriptionFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnableToDestroySubscriptionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, const struct _wsnt__UnableToDestroySubscriptionFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnableToDestroySubscriptionFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, const struct _wsnt__UnableToDestroySubscriptionFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_write__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_PUT__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_PATCH__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_POST_send__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_read__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_GET__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_POST_recv__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data) ( soap_read__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_write__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_PUT__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_PATCH__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_POST_send__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_read__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_GET__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnableToDestroySubscriptionFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnableToDestroySubscriptionFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, struct wsnt__UnableToDestroySubscriptionFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, const struct wsnt__UnableToDestroySubscriptionFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, const char*, int, const struct wsnt__UnableToDestroySubscriptionFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnableToDestroySubscriptionFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, const char*, struct wsnt__UnableToDestroySubscriptionFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnableToDestroySubscriptionFaultType * SOAP_FMAC4 soap_new_wsnt__UnableToDestroySubscriptionFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, const struct wsnt__UnableToDestroySubscriptionFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnableToDestroySubscriptionFaultType
#define soap_write_wsnt__UnableToDestroySubscriptionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnableToDestroySubscriptionFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroySubscriptionFaultType(soap, data, "wsnt:UnableToDestroySubscriptionFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnableToDestroySubscriptionFaultType
#define soap_PUT_wsnt__UnableToDestroySubscriptionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToDestroySubscriptionFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroySubscriptionFaultType(soap, data, "wsnt:UnableToDestroySubscriptionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnableToDestroySubscriptionFaultType
#define soap_PATCH_wsnt__UnableToDestroySubscriptionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToDestroySubscriptionFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroySubscriptionFaultType(soap, data, "wsnt:UnableToDestroySubscriptionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnableToDestroySubscriptionFaultType
#define soap_POST_send_wsnt__UnableToDestroySubscriptionFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToDestroySubscriptionFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroySubscriptionFaultType(soap, data, "wsnt:UnableToDestroySubscriptionFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnableToDestroySubscriptionFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, struct wsnt__UnableToDestroySubscriptionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToDestroySubscriptionFaultType
#define soap_read_wsnt__UnableToDestroySubscriptionFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnableToDestroySubscriptionFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnableToDestroySubscriptionFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnableToDestroySubscriptionFaultType
#define soap_GET_wsnt__UnableToDestroySubscriptionFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnableToDestroySubscriptionFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnableToDestroySubscriptionFaultType
#define soap_POST_recv_wsnt__UnableToDestroySubscriptionFaultType(soap, data) ( soap_read_wsnt__UnableToDestroySubscriptionFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnacceptableTerminationTimeFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnacceptableTerminationTimeFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, const struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, const struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_write__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_PUT__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_PATCH__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_POST_send__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_read__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_GET__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_POST_recv__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnacceptableTerminationTimeFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnacceptableTerminationTimeFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, const struct _wsnt__UnacceptableTerminationTimeFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnacceptableTerminationTimeFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, const char*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, const struct _wsnt__UnacceptableTerminationTimeFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_write__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_PUT__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_PATCH__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_POST_send__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_read__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_GET__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_POST_recv__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data) ( soap_read__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, const struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, const struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_write__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_PUT__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_PATCH__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_POST_send__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_read__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_GET__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnacceptableTerminationTimeFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnacceptableTerminationTimeFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableTerminationTimeFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, const struct wsnt__UnacceptableTerminationTimeFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, const char*, int, const struct wsnt__UnacceptableTerminationTimeFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnacceptableTerminationTimeFaultType * SOAP_FMAC4 soap_in_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, const char*, struct wsnt__UnacceptableTerminationTimeFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnacceptableTerminationTimeFaultType * SOAP_FMAC4 soap_new_wsnt__UnacceptableTerminationTimeFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, const struct wsnt__UnacceptableTerminationTimeFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnacceptableTerminationTimeFaultType
#define soap_write_wsnt__UnacceptableTerminationTimeFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnacceptableTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableTerminationTimeFaultType(soap, data, "wsnt:UnacceptableTerminationTimeFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnacceptableTerminationTimeFaultType
#define soap_PUT_wsnt__UnacceptableTerminationTimeFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnacceptableTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableTerminationTimeFaultType(soap, data, "wsnt:UnacceptableTerminationTimeFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnacceptableTerminationTimeFaultType
#define soap_PATCH_wsnt__UnacceptableTerminationTimeFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnacceptableTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableTerminationTimeFaultType(soap, data, "wsnt:UnacceptableTerminationTimeFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnacceptableTerminationTimeFaultType
#define soap_POST_send_wsnt__UnacceptableTerminationTimeFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnacceptableTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableTerminationTimeFaultType(soap, data, "wsnt:UnacceptableTerminationTimeFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnacceptableTerminationTimeFaultType * SOAP_FMAC4 soap_get_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableTerminationTimeFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnacceptableTerminationTimeFaultType
#define soap_read_wsnt__UnacceptableTerminationTimeFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnacceptableTerminationTimeFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnacceptableTerminationTimeFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnacceptableTerminationTimeFaultType
#define soap_GET_wsnt__UnacceptableTerminationTimeFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnacceptableTerminationTimeFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnacceptableTerminationTimeFaultType
#define soap_POST_recv_wsnt__UnacceptableTerminationTimeFaultType(soap, data) ( soap_read_wsnt__UnacceptableTerminationTimeFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToCreatePullPointFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnableToCreatePullPointFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_write__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data, "wsnt:UnableToCreatePullPointFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_PUT__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data, "wsnt:UnableToCreatePullPointFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_PATCH__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data, "wsnt:UnableToCreatePullPointFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_POST_send__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data, "wsnt:UnableToCreatePullPointFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_read__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_GET__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_POST_recv__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToCreatePullPointFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnableToCreatePullPointFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, const struct _wsnt__UnableToCreatePullPointFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnableToCreatePullPointFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToCreatePullPointFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnableToCreatePullPointFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, const struct _wsnt__UnableToCreatePullPointFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_write__wsnt__UnableToCreatePullPointFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_Description(soap, data, "wsnt:UnableToCreatePullPointFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_PUT__wsnt__UnableToCreatePullPointFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_Description(soap, data, "wsnt:UnableToCreatePullPointFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_PATCH__wsnt__UnableToCreatePullPointFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_Description(soap, data, "wsnt:UnableToCreatePullPointFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_POST_send__wsnt__UnableToCreatePullPointFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_Description(soap, data, "wsnt:UnableToCreatePullPointFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_read__wsnt__UnableToCreatePullPointFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnableToCreatePullPointFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToCreatePullPointFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_GET__wsnt__UnableToCreatePullPointFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToCreatePullPointFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_POST_recv__wsnt__UnableToCreatePullPointFaultType_Description(soap, data) ( soap_read__wsnt__UnableToCreatePullPointFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToCreatePullPointFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnableToCreatePullPointFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_write__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToCreatePullPointFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_PUT__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToCreatePullPointFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_PATCH__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToCreatePullPointFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_POST_send__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToCreatePullPointFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_read__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_GET__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnableToCreatePullPointFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnableToCreatePullPointFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnableToCreatePullPointFaultType(struct soap*, struct wsnt__UnableToCreatePullPointFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnableToCreatePullPointFaultType(struct soap*, const struct wsnt__UnableToCreatePullPointFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToCreatePullPointFaultType(struct soap*, const char*, int, const struct wsnt__UnableToCreatePullPointFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnableToCreatePullPointFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToCreatePullPointFaultType(struct soap*, const char*, struct wsnt__UnableToCreatePullPointFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnableToCreatePullPointFaultType * SOAP_FMAC4 soap_new_wsnt__UnableToCreatePullPointFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnableToCreatePullPointFaultType(struct soap*, const struct wsnt__UnableToCreatePullPointFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnableToCreatePullPointFaultType
#define soap_write_wsnt__UnableToCreatePullPointFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnableToCreatePullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToCreatePullPointFaultType(soap, data, "wsnt:UnableToCreatePullPointFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnableToCreatePullPointFaultType
#define soap_PUT_wsnt__UnableToCreatePullPointFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToCreatePullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToCreatePullPointFaultType(soap, data, "wsnt:UnableToCreatePullPointFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnableToCreatePullPointFaultType
#define soap_PATCH_wsnt__UnableToCreatePullPointFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToCreatePullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToCreatePullPointFaultType(soap, data, "wsnt:UnableToCreatePullPointFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnableToCreatePullPointFaultType
#define soap_POST_send_wsnt__UnableToCreatePullPointFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToCreatePullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToCreatePullPointFaultType(soap, data, "wsnt:UnableToCreatePullPointFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnableToCreatePullPointFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToCreatePullPointFaultType(struct soap*, struct wsnt__UnableToCreatePullPointFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToCreatePullPointFaultType
#define soap_read_wsnt__UnableToCreatePullPointFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnableToCreatePullPointFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnableToCreatePullPointFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnableToCreatePullPointFaultType
#define soap_GET_wsnt__UnableToCreatePullPointFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnableToCreatePullPointFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnableToCreatePullPointFaultType
#define soap_POST_recv_wsnt__UnableToCreatePullPointFaultType(soap, data) ( soap_read_wsnt__UnableToCreatePullPointFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToDestroyPullPointFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnableToDestroyPullPointFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_write__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data, "wsnt:UnableToDestroyPullPointFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_PUT__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data, "wsnt:UnableToDestroyPullPointFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_PATCH__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data, "wsnt:UnableToDestroyPullPointFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_POST_send__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data, "wsnt:UnableToDestroyPullPointFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_read__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_GET__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_POST_recv__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToDestroyPullPointFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnableToDestroyPullPointFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, const struct _wsnt__UnableToDestroyPullPointFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnableToDestroyPullPointFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToDestroyPullPointFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, const struct _wsnt__UnableToDestroyPullPointFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_write__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data, "wsnt:UnableToDestroyPullPointFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_PUT__wsnt__UnableToDestroyPullPointFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data, "wsnt:UnableToDestroyPullPointFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_PATCH__wsnt__UnableToDestroyPullPointFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data, "wsnt:UnableToDestroyPullPointFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_POST_send__wsnt__UnableToDestroyPullPointFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data, "wsnt:UnableToDestroyPullPointFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_read__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnableToDestroyPullPointFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToDestroyPullPointFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_GET__wsnt__UnableToDestroyPullPointFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToDestroyPullPointFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_POST_recv__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data) ( soap_read__wsnt__UnableToDestroyPullPointFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToDestroyPullPointFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnableToDestroyPullPointFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_write__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroyPullPointFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_PUT__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroyPullPointFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_PATCH__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroyPullPointFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_POST_send__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroyPullPointFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_read__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_GET__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnableToDestroyPullPointFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnableToDestroyPullPointFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnableToDestroyPullPointFaultType(struct soap*, struct wsnt__UnableToDestroyPullPointFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnableToDestroyPullPointFaultType(struct soap*, const struct wsnt__UnableToDestroyPullPointFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToDestroyPullPointFaultType(struct soap*, const char*, int, const struct wsnt__UnableToDestroyPullPointFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnableToDestroyPullPointFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToDestroyPullPointFaultType(struct soap*, const char*, struct wsnt__UnableToDestroyPullPointFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnableToDestroyPullPointFaultType * SOAP_FMAC4 soap_new_wsnt__UnableToDestroyPullPointFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnableToDestroyPullPointFaultType(struct soap*, const struct wsnt__UnableToDestroyPullPointFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnableToDestroyPullPointFaultType
#define soap_write_wsnt__UnableToDestroyPullPointFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnableToDestroyPullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroyPullPointFaultType(soap, data, "wsnt:UnableToDestroyPullPointFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnableToDestroyPullPointFaultType
#define soap_PUT_wsnt__UnableToDestroyPullPointFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToDestroyPullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroyPullPointFaultType(soap, data, "wsnt:UnableToDestroyPullPointFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnableToDestroyPullPointFaultType
#define soap_PATCH_wsnt__UnableToDestroyPullPointFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToDestroyPullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroyPullPointFaultType(soap, data, "wsnt:UnableToDestroyPullPointFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnableToDestroyPullPointFaultType
#define soap_POST_send_wsnt__UnableToDestroyPullPointFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToDestroyPullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroyPullPointFaultType(soap, data, "wsnt:UnableToDestroyPullPointFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnableToDestroyPullPointFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToDestroyPullPointFaultType(struct soap*, struct wsnt__UnableToDestroyPullPointFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToDestroyPullPointFaultType
#define soap_read_wsnt__UnableToDestroyPullPointFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnableToDestroyPullPointFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnableToDestroyPullPointFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnableToDestroyPullPointFaultType
#define soap_GET_wsnt__UnableToDestroyPullPointFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnableToDestroyPullPointFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnableToDestroyPullPointFaultType
#define soap_POST_recv_wsnt__UnableToDestroyPullPointFaultType(soap, data) ( soap_read_wsnt__UnableToDestroyPullPointFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToGetMessagesFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnableToGetMessagesFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToGetMessagesFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnableToGetMessagesFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToGetMessagesFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_write__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data, "wsnt:UnableToGetMessagesFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_PUT__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data, "wsnt:UnableToGetMessagesFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_PATCH__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data, "wsnt:UnableToGetMessagesFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_POST_send__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data, "wsnt:UnableToGetMessagesFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_read__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_GET__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_POST_recv__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToGetMessagesFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnableToGetMessagesFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, const struct _wsnt__UnableToGetMessagesFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnableToGetMessagesFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToGetMessagesFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnableToGetMessagesFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, const struct _wsnt__UnableToGetMessagesFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToGetMessagesFaultType_Description
#define soap_write__wsnt__UnableToGetMessagesFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToGetMessagesFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_Description(soap, data, "wsnt:UnableToGetMessagesFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToGetMessagesFaultType_Description
#define soap_PUT__wsnt__UnableToGetMessagesFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_Description(soap, data, "wsnt:UnableToGetMessagesFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToGetMessagesFaultType_Description
#define soap_PATCH__wsnt__UnableToGetMessagesFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_Description(soap, data, "wsnt:UnableToGetMessagesFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToGetMessagesFaultType_Description
#define soap_POST_send__wsnt__UnableToGetMessagesFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_Description(soap, data, "wsnt:UnableToGetMessagesFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToGetMessagesFaultType_Description
#define soap_read__wsnt__UnableToGetMessagesFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnableToGetMessagesFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToGetMessagesFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToGetMessagesFaultType_Description
#define soap_GET__wsnt__UnableToGetMessagesFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToGetMessagesFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToGetMessagesFaultType_Description
#define soap_POST_recv__wsnt__UnableToGetMessagesFaultType_Description(soap, data) ( soap_read__wsnt__UnableToGetMessagesFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToGetMessagesFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnableToGetMessagesFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_write__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data, "wsnt:UnableToGetMessagesFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_PUT__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data, "wsnt:UnableToGetMessagesFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_PATCH__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data, "wsnt:UnableToGetMessagesFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_POST_send__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data, "wsnt:UnableToGetMessagesFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_read__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_GET__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnableToGetMessagesFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnableToGetMessagesFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnableToGetMessagesFaultType(struct soap*, struct wsnt__UnableToGetMessagesFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnableToGetMessagesFaultType(struct soap*, const struct wsnt__UnableToGetMessagesFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToGetMessagesFaultType(struct soap*, const char*, int, const struct wsnt__UnableToGetMessagesFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnableToGetMessagesFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToGetMessagesFaultType(struct soap*, const char*, struct wsnt__UnableToGetMessagesFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnableToGetMessagesFaultType * SOAP_FMAC4 soap_new_wsnt__UnableToGetMessagesFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnableToGetMessagesFaultType(struct soap*, const struct wsnt__UnableToGetMessagesFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnableToGetMessagesFaultType
#define soap_write_wsnt__UnableToGetMessagesFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnableToGetMessagesFaultType(soap, data), 0) || soap_put_wsnt__UnableToGetMessagesFaultType(soap, data, "wsnt:UnableToGetMessagesFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnableToGetMessagesFaultType
#define soap_PUT_wsnt__UnableToGetMessagesFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToGetMessagesFaultType(soap, data), 0) || soap_put_wsnt__UnableToGetMessagesFaultType(soap, data, "wsnt:UnableToGetMessagesFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnableToGetMessagesFaultType
#define soap_PATCH_wsnt__UnableToGetMessagesFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToGetMessagesFaultType(soap, data), 0) || soap_put_wsnt__UnableToGetMessagesFaultType(soap, data, "wsnt:UnableToGetMessagesFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnableToGetMessagesFaultType
#define soap_POST_send_wsnt__UnableToGetMessagesFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToGetMessagesFaultType(soap, data), 0) || soap_put_wsnt__UnableToGetMessagesFaultType(soap, data, "wsnt:UnableToGetMessagesFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnableToGetMessagesFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToGetMessagesFaultType(struct soap*, struct wsnt__UnableToGetMessagesFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToGetMessagesFaultType
#define soap_read_wsnt__UnableToGetMessagesFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnableToGetMessagesFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnableToGetMessagesFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnableToGetMessagesFaultType
#define soap_GET_wsnt__UnableToGetMessagesFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnableToGetMessagesFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnableToGetMessagesFaultType
#define soap_POST_recv_wsnt__UnableToGetMessagesFaultType(soap, data) ( soap_read_wsnt__UnableToGetMessagesFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, const struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, const char*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, const struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_write__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_PUT__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_PATCH__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_POST_send__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_read__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_GET__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_POST_recv__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data) ( soap_read__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NoCurrentMessageOnTopicFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__NoCurrentMessageOnTopicFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, const struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, const char*, int, const struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_Description * SOAP_FMAC4 soap_in__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, const char*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_Description * SOAP_FMAC4 soap_new__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, const struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_write__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_PUT__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_PATCH__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_POST_send__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_Description * SOAP_FMAC4 soap_get__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_read__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_GET__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_POST_recv__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data) ( soap_read__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, const struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, const struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_write__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_PUT__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_PATCH__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_POST_send__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_read__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_GET__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_POST_recv__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data) ( soap_read__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__NoCurrentMessageOnTopicFaultType_DEFINED
#define SOAP_TYPE_wsnt__NoCurrentMessageOnTopicFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, struct wsnt__NoCurrentMessageOnTopicFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const struct wsnt__NoCurrentMessageOnTopicFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const char*, int, const struct wsnt__NoCurrentMessageOnTopicFaultType *, const char*);
SOAP_FMAC3 struct wsnt__NoCurrentMessageOnTopicFaultType * SOAP_FMAC4 soap_in_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const char*, struct wsnt__NoCurrentMessageOnTopicFaultType *, const char*);

SOAP_FMAC3 struct wsnt__NoCurrentMessageOnTopicFaultType * SOAP_FMAC4 soap_new_wsnt__NoCurrentMessageOnTopicFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const struct wsnt__NoCurrentMessageOnTopicFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_write_wsnt__NoCurrentMessageOnTopicFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__NoCurrentMessageOnTopicFaultType(soap, data), 0) || soap_put_wsnt__NoCurrentMessageOnTopicFaultType(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_PUT_wsnt__NoCurrentMessageOnTopicFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NoCurrentMessageOnTopicFaultType(soap, data), 0) || soap_put_wsnt__NoCurrentMessageOnTopicFaultType(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_PATCH_wsnt__NoCurrentMessageOnTopicFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NoCurrentMessageOnTopicFaultType(soap, data), 0) || soap_put_wsnt__NoCurrentMessageOnTopicFaultType(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_POST_send_wsnt__NoCurrentMessageOnTopicFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NoCurrentMessageOnTopicFaultType(soap, data), 0) || soap_put_wsnt__NoCurrentMessageOnTopicFaultType(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__NoCurrentMessageOnTopicFaultType * SOAP_FMAC4 soap_get_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, struct wsnt__NoCurrentMessageOnTopicFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_read_wsnt__NoCurrentMessageOnTopicFaultType(soap, data) ( ((data) ? (soap_default_wsnt__NoCurrentMessageOnTopicFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__NoCurrentMessageOnTopicFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_GET_wsnt__NoCurrentMessageOnTopicFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__NoCurrentMessageOnTopicFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_POST_recv_wsnt__NoCurrentMessageOnTopicFaultType(soap, data) ( soap_read_wsnt__NoCurrentMessageOnTopicFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_PUT__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_PATCH__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_POST_send__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_GET__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_POST_recv__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnacceptableInitialTerminationTimeFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnacceptableInitialTerminationTimeFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, const char*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_PUT__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_PATCH__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_POST_send__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_GET__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_POST_recv__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data) ( soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_PUT__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_PATCH__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_POST_send__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_GET__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnacceptableInitialTerminationTimeFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnacceptableInitialTerminationTimeFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableInitialTerminationTimeFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const struct wsnt__UnacceptableInitialTerminationTimeFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const char*, int, const struct wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnacceptableInitialTerminationTimeFaultType * SOAP_FMAC4 soap_in_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const char*, struct wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnacceptableInitialTerminationTimeFaultType * SOAP_FMAC4 soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const struct wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_PUT_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_PATCH_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_POST_send_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnacceptableInitialTerminationTimeFaultType * SOAP_FMAC4 soap_get_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_GET_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_POST_recv_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data) ( soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NotifyMessageNotSupportedFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__NotifyMessageNotSupportedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, const struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, const struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_write__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_PUT__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_PATCH__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_POST_send__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_read__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_GET__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_POST_recv__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data) ( soap_read__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NotifyMessageNotSupportedFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__NotifyMessageNotSupportedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, const struct _wsnt__NotifyMessageNotSupportedFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, const char*, int, const struct _wsnt__NotifyMessageNotSupportedFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_Description * SOAP_FMAC4 soap_in__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, const char*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_Description * SOAP_FMAC4 soap_new__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, const struct _wsnt__NotifyMessageNotSupportedFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_write__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_PUT__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_PATCH__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_POST_send__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_Description * SOAP_FMAC4 soap_get__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_read__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_GET__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_POST_recv__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data) ( soap_read__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, const struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, const struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_write__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_PUT__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_PATCH__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_POST_send__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_read__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_GET__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_POST_recv__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data) ( soap_read__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__NotifyMessageNotSupportedFaultType_DEFINED
#define SOAP_TYPE_wsnt__NotifyMessageNotSupportedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, struct wsnt__NotifyMessageNotSupportedFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, const struct wsnt__NotifyMessageNotSupportedFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, const char*, int, const struct wsnt__NotifyMessageNotSupportedFaultType *, const char*);
SOAP_FMAC3 struct wsnt__NotifyMessageNotSupportedFaultType * SOAP_FMAC4 soap_in_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, const char*, struct wsnt__NotifyMessageNotSupportedFaultType *, const char*);

SOAP_FMAC3 struct wsnt__NotifyMessageNotSupportedFaultType * SOAP_FMAC4 soap_new_wsnt__NotifyMessageNotSupportedFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, const struct wsnt__NotifyMessageNotSupportedFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__NotifyMessageNotSupportedFaultType
#define soap_write_wsnt__NotifyMessageNotSupportedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__NotifyMessageNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__NotifyMessageNotSupportedFaultType(soap, data, "wsnt:NotifyMessageNotSupportedFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__NotifyMessageNotSupportedFaultType
#define soap_PUT_wsnt__NotifyMessageNotSupportedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NotifyMessageNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__NotifyMessageNotSupportedFaultType(soap, data, "wsnt:NotifyMessageNotSupportedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__NotifyMessageNotSupportedFaultType
#define soap_PATCH_wsnt__NotifyMessageNotSupportedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NotifyMessageNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__NotifyMessageNotSupportedFaultType(soap, data, "wsnt:NotifyMessageNotSupportedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__NotifyMessageNotSupportedFaultType
#define soap_POST_send_wsnt__NotifyMessageNotSupportedFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NotifyMessageNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__NotifyMessageNotSupportedFaultType(soap, data, "wsnt:NotifyMessageNotSupportedFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__NotifyMessageNotSupportedFaultType * SOAP_FMAC4 soap_get_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, struct wsnt__NotifyMessageNotSupportedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__NotifyMessageNotSupportedFaultType
#define soap_read_wsnt__NotifyMessageNotSupportedFaultType(soap, data) ( ((data) ? (soap_default_wsnt__NotifyMessageNotSupportedFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__NotifyMessageNotSupportedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__NotifyMessageNotSupportedFaultType
#define soap_GET_wsnt__NotifyMessageNotSupportedFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__NotifyMessageNotSupportedFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__NotifyMessageNotSupportedFaultType
#define soap_POST_recv_wsnt__NotifyMessageNotSupportedFaultType(soap, data) ( soap_read_wsnt__NotifyMessageNotSupportedFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnsupportedPolicyRequestFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnsupportedPolicyRequestFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, const struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, const struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_write__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_PUT__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_PATCH__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_POST_send__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_read__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_GET__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_POST_recv__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnsupportedPolicyRequestFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnsupportedPolicyRequestFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, const struct _wsnt__UnsupportedPolicyRequestFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnsupportedPolicyRequestFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, const char*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, const struct _wsnt__UnsupportedPolicyRequestFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_write__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_PUT__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_PATCH__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_POST_send__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_read__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_GET__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_POST_recv__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data) ( soap_read__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, const struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, const struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_write__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_PUT__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_PATCH__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_POST_send__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_read__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_GET__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnsupportedPolicyRequestFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnsupportedPolicyRequestFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, struct wsnt__UnsupportedPolicyRequestFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, const struct wsnt__UnsupportedPolicyRequestFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, const char*, int, const struct wsnt__UnsupportedPolicyRequestFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnsupportedPolicyRequestFaultType * SOAP_FMAC4 soap_in_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, const char*, struct wsnt__UnsupportedPolicyRequestFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnsupportedPolicyRequestFaultType * SOAP_FMAC4 soap_new_wsnt__UnsupportedPolicyRequestFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, const struct wsnt__UnsupportedPolicyRequestFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnsupportedPolicyRequestFaultType
#define soap_write_wsnt__UnsupportedPolicyRequestFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnsupportedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnsupportedPolicyRequestFaultType(soap, data, "wsnt:UnsupportedPolicyRequestFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnsupportedPolicyRequestFaultType
#define soap_PUT_wsnt__UnsupportedPolicyRequestFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnsupportedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnsupportedPolicyRequestFaultType(soap, data, "wsnt:UnsupportedPolicyRequestFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnsupportedPolicyRequestFaultType
#define soap_PATCH_wsnt__UnsupportedPolicyRequestFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnsupportedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnsupportedPolicyRequestFaultType(soap, data, "wsnt:UnsupportedPolicyRequestFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnsupportedPolicyRequestFaultType
#define soap_POST_send_wsnt__UnsupportedPolicyRequestFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnsupportedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnsupportedPolicyRequestFaultType(soap, data, "wsnt:UnsupportedPolicyRequestFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnsupportedPolicyRequestFaultType * SOAP_FMAC4 soap_get_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, struct wsnt__UnsupportedPolicyRequestFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnsupportedPolicyRequestFaultType
#define soap_read_wsnt__UnsupportedPolicyRequestFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnsupportedPolicyRequestFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnsupportedPolicyRequestFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnsupportedPolicyRequestFaultType
#define soap_GET_wsnt__UnsupportedPolicyRequestFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnsupportedPolicyRequestFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnsupportedPolicyRequestFaultType
#define soap_POST_recv_wsnt__UnsupportedPolicyRequestFaultType(soap, data) ( soap_read_wsnt__UnsupportedPolicyRequestFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, const struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, const struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_write__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_PUT__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_PATCH__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_POST_send__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_read__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_GET__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_POST_recv__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnrecognizedPolicyRequestFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnrecognizedPolicyRequestFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, const struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, const char*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, const struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_write__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_PUT__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_PATCH__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_POST_send__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_read__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_GET__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_POST_recv__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data) ( soap_read__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, const struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, const struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_write__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_PUT__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_PATCH__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_POST_send__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_read__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_GET__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnrecognizedPolicyRequestFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnrecognizedPolicyRequestFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, struct wsnt__UnrecognizedPolicyRequestFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const struct wsnt__UnrecognizedPolicyRequestFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const char*, int, const struct wsnt__UnrecognizedPolicyRequestFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnrecognizedPolicyRequestFaultType * SOAP_FMAC4 soap_in_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const char*, struct wsnt__UnrecognizedPolicyRequestFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnrecognizedPolicyRequestFaultType * SOAP_FMAC4 soap_new_wsnt__UnrecognizedPolicyRequestFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const struct wsnt__UnrecognizedPolicyRequestFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_write_wsnt__UnrecognizedPolicyRequestFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnrecognizedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnrecognizedPolicyRequestFaultType(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_PUT_wsnt__UnrecognizedPolicyRequestFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnrecognizedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnrecognizedPolicyRequestFaultType(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_PATCH_wsnt__UnrecognizedPolicyRequestFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnrecognizedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnrecognizedPolicyRequestFaultType(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_POST_send_wsnt__UnrecognizedPolicyRequestFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnrecognizedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnrecognizedPolicyRequestFaultType(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnrecognizedPolicyRequestFaultType * SOAP_FMAC4 soap_get_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, struct wsnt__UnrecognizedPolicyRequestFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_read_wsnt__UnrecognizedPolicyRequestFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnrecognizedPolicyRequestFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnrecognizedPolicyRequestFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_GET_wsnt__UnrecognizedPolicyRequestFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnrecognizedPolicyRequestFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_POST_recv_wsnt__UnrecognizedPolicyRequestFaultType(soap, data) ( soap_read_wsnt__UnrecognizedPolicyRequestFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidMessageContentExpressionFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__InvalidMessageContentExpressionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_write__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_PUT__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_PATCH__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_POST_send__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_read__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_GET__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_POST_recv__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data) ( soap_read__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidMessageContentExpressionFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__InvalidMessageContentExpressionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, const struct _wsnt__InvalidMessageContentExpressionFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, const char*, int, const struct _wsnt__InvalidMessageContentExpressionFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_Description * SOAP_FMAC4 soap_in__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_Description * SOAP_FMAC4 soap_new__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, const struct _wsnt__InvalidMessageContentExpressionFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_write__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_PUT__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_PATCH__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_POST_send__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_Description * SOAP_FMAC4 soap_get__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_read__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_GET__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_POST_recv__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data) ( soap_read__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_write__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_PUT__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_PATCH__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_POST_send__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_read__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_GET__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_POST_recv__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data) ( soap_read__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__InvalidMessageContentExpressionFaultType_DEFINED
#define SOAP_TYPE_wsnt__InvalidMessageContentExpressionFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, struct wsnt__InvalidMessageContentExpressionFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, const struct wsnt__InvalidMessageContentExpressionFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, const char*, int, const struct wsnt__InvalidMessageContentExpressionFaultType *, const char*);
SOAP_FMAC3 struct wsnt__InvalidMessageContentExpressionFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, const char*, struct wsnt__InvalidMessageContentExpressionFaultType *, const char*);

SOAP_FMAC3 struct wsnt__InvalidMessageContentExpressionFaultType * SOAP_FMAC4 soap_new_wsnt__InvalidMessageContentExpressionFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, const struct wsnt__InvalidMessageContentExpressionFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__InvalidMessageContentExpressionFaultType
#define soap_write_wsnt__InvalidMessageContentExpressionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__InvalidMessageContentExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidMessageContentExpressionFaultType(soap, data, "wsnt:InvalidMessageContentExpressionFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__InvalidMessageContentExpressionFaultType
#define soap_PUT_wsnt__InvalidMessageContentExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidMessageContentExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidMessageContentExpressionFaultType(soap, data, "wsnt:InvalidMessageContentExpressionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__InvalidMessageContentExpressionFaultType
#define soap_PATCH_wsnt__InvalidMessageContentExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidMessageContentExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidMessageContentExpressionFaultType(soap, data, "wsnt:InvalidMessageContentExpressionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__InvalidMessageContentExpressionFaultType
#define soap_POST_send_wsnt__InvalidMessageContentExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidMessageContentExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidMessageContentExpressionFaultType(soap, data, "wsnt:InvalidMessageContentExpressionFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__InvalidMessageContentExpressionFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, struct wsnt__InvalidMessageContentExpressionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidMessageContentExpressionFaultType
#define soap_read_wsnt__InvalidMessageContentExpressionFaultType(soap, data) ( ((data) ? (soap_default_wsnt__InvalidMessageContentExpressionFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__InvalidMessageContentExpressionFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__InvalidMessageContentExpressionFaultType
#define soap_GET_wsnt__InvalidMessageContentExpressionFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__InvalidMessageContentExpressionFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__InvalidMessageContentExpressionFaultType
#define soap_POST_recv_wsnt__InvalidMessageContentExpressionFaultType(soap, data) ( soap_read_wsnt__InvalidMessageContentExpressionFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_PUT__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_PATCH__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_POST_send__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_GET__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_POST_recv__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data) ( soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidProducerPropertiesExpressionFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__InvalidProducerPropertiesExpressionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, const char*, int, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description * SOAP_FMAC4 soap_in__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description * SOAP_FMAC4 soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_PUT__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_PATCH__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_POST_send__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description * SOAP_FMAC4 soap_get__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_GET__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_POST_recv__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data) ( soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_PUT__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_PATCH__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_POST_send__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_GET__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_POST_recv__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data) ( soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__InvalidProducerPropertiesExpressionFaultType_DEFINED
#define SOAP_TYPE_wsnt__InvalidProducerPropertiesExpressionFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, struct wsnt__InvalidProducerPropertiesExpressionFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const struct wsnt__InvalidProducerPropertiesExpressionFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const char*, int, const struct wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*);
SOAP_FMAC3 struct wsnt__InvalidProducerPropertiesExpressionFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const char*, struct wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*);

SOAP_FMAC3 struct wsnt__InvalidProducerPropertiesExpressionFaultType * SOAP_FMAC4 soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const struct wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_PUT_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_PATCH_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_POST_send_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__InvalidProducerPropertiesExpressionFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, struct wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data) ( ((data) ? (soap_default_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_GET_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_POST_recv_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data) ( soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, const struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, const struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_write__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_PUT__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_PATCH__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_POST_send__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_read__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_GET__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_POST_recv__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data) ( soap_read__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__MultipleTopicsSpecifiedFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__MultipleTopicsSpecifiedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, const struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, const char*, int, const struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_Description * SOAP_FMAC4 soap_in__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, const char*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_Description * SOAP_FMAC4 soap_new__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, const struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_write__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_PUT__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_PATCH__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_POST_send__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_Description * SOAP_FMAC4 soap_get__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_read__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_GET__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_POST_recv__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data) ( soap_read__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, const struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, const struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_write__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_PUT__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_PATCH__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_POST_send__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_read__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_GET__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_POST_recv__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data) ( soap_read__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__MultipleTopicsSpecifiedFaultType_DEFINED
#define SOAP_TYPE_wsnt__MultipleTopicsSpecifiedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, struct wsnt__MultipleTopicsSpecifiedFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const struct wsnt__MultipleTopicsSpecifiedFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const char*, int, const struct wsnt__MultipleTopicsSpecifiedFaultType *, const char*);
SOAP_FMAC3 struct wsnt__MultipleTopicsSpecifiedFaultType * SOAP_FMAC4 soap_in_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const char*, struct wsnt__MultipleTopicsSpecifiedFaultType *, const char*);

SOAP_FMAC3 struct wsnt__MultipleTopicsSpecifiedFaultType * SOAP_FMAC4 soap_new_wsnt__MultipleTopicsSpecifiedFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const struct wsnt__MultipleTopicsSpecifiedFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_write_wsnt__MultipleTopicsSpecifiedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__MultipleTopicsSpecifiedFaultType(soap, data), 0) || soap_put_wsnt__MultipleTopicsSpecifiedFaultType(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_PUT_wsnt__MultipleTopicsSpecifiedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__MultipleTopicsSpecifiedFaultType(soap, data), 0) || soap_put_wsnt__MultipleTopicsSpecifiedFaultType(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_PATCH_wsnt__MultipleTopicsSpecifiedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__MultipleTopicsSpecifiedFaultType(soap, data), 0) || soap_put_wsnt__MultipleTopicsSpecifiedFaultType(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_POST_send_wsnt__MultipleTopicsSpecifiedFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__MultipleTopicsSpecifiedFaultType(soap, data), 0) || soap_put_wsnt__MultipleTopicsSpecifiedFaultType(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__MultipleTopicsSpecifiedFaultType * SOAP_FMAC4 soap_get_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, struct wsnt__MultipleTopicsSpecifiedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_read_wsnt__MultipleTopicsSpecifiedFaultType(soap, data) ( ((data) ? (soap_default_wsnt__MultipleTopicsSpecifiedFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__MultipleTopicsSpecifiedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_GET_wsnt__MultipleTopicsSpecifiedFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__MultipleTopicsSpecifiedFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_POST_recv_wsnt__MultipleTopicsSpecifiedFaultType(soap, data) ( soap_read_wsnt__MultipleTopicsSpecifiedFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__TopicNotSupportedFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__TopicNotSupportedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__TopicNotSupportedFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, const struct _wsnt__TopicNotSupportedFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__TopicNotSupportedFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__TopicNotSupportedFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, const struct _wsnt__TopicNotSupportedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_write__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data, "wsnt:TopicNotSupportedFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_PUT__wsnt__TopicNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data, "wsnt:TopicNotSupportedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_PATCH__wsnt__TopicNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data, "wsnt:TopicNotSupportedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_POST_send__wsnt__TopicNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data, "wsnt:TopicNotSupportedFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__TopicNotSupportedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_read__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__TopicNotSupportedFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__TopicNotSupportedFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_GET__wsnt__TopicNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__TopicNotSupportedFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_POST_recv__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data) ( soap_read__wsnt__TopicNotSupportedFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__TopicNotSupportedFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__TopicNotSupportedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__TopicNotSupportedFaultType_Description(struct soap*, struct _wsnt__TopicNotSupportedFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__TopicNotSupportedFaultType_Description(struct soap*, const struct _wsnt__TopicNotSupportedFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__TopicNotSupportedFaultType_Description(struct soap*, const char*, int, const struct _wsnt__TopicNotSupportedFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_Description * SOAP_FMAC4 soap_in__wsnt__TopicNotSupportedFaultType_Description(struct soap*, const char*, struct _wsnt__TopicNotSupportedFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_Description * SOAP_FMAC4 soap_new__wsnt__TopicNotSupportedFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__TopicNotSupportedFaultType_Description(struct soap*, const struct _wsnt__TopicNotSupportedFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__TopicNotSupportedFaultType_Description
#define soap_write__wsnt__TopicNotSupportedFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__TopicNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_Description(soap, data, "wsnt:TopicNotSupportedFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__TopicNotSupportedFaultType_Description
#define soap_PUT__wsnt__TopicNotSupportedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_Description(soap, data, "wsnt:TopicNotSupportedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__TopicNotSupportedFaultType_Description
#define soap_PATCH__wsnt__TopicNotSupportedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_Description(soap, data, "wsnt:TopicNotSupportedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__TopicNotSupportedFaultType_Description
#define soap_POST_send__wsnt__TopicNotSupportedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_Description(soap, data, "wsnt:TopicNotSupportedFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_Description * SOAP_FMAC4 soap_get__wsnt__TopicNotSupportedFaultType_Description(struct soap*, struct _wsnt__TopicNotSupportedFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__TopicNotSupportedFaultType_Description
#define soap_read__wsnt__TopicNotSupportedFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__TopicNotSupportedFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__TopicNotSupportedFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__TopicNotSupportedFaultType_Description
#define soap_GET__wsnt__TopicNotSupportedFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__TopicNotSupportedFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__TopicNotSupportedFaultType_Description
#define soap_POST_recv__wsnt__TopicNotSupportedFaultType_Description(soap, data) ( soap_read__wsnt__TopicNotSupportedFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__TopicNotSupportedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__TopicNotSupportedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, const struct _wsnt__TopicNotSupportedFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__TopicNotSupportedFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, const struct _wsnt__TopicNotSupportedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_write__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data, "wsnt:TopicNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_PUT__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data, "wsnt:TopicNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_PATCH__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data, "wsnt:TopicNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_POST_send__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data, "wsnt:TopicNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_read__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_GET__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_POST_recv__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data) ( soap_read__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__TopicNotSupportedFaultType_DEFINED
#define SOAP_TYPE_wsnt__TopicNotSupportedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__TopicNotSupportedFaultType(struct soap*, struct wsnt__TopicNotSupportedFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__TopicNotSupportedFaultType(struct soap*, const struct wsnt__TopicNotSupportedFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__TopicNotSupportedFaultType(struct soap*, const char*, int, const struct wsnt__TopicNotSupportedFaultType *, const char*);
SOAP_FMAC3 struct wsnt__TopicNotSupportedFaultType * SOAP_FMAC4 soap_in_wsnt__TopicNotSupportedFaultType(struct soap*, const char*, struct wsnt__TopicNotSupportedFaultType *, const char*);

SOAP_FMAC3 struct wsnt__TopicNotSupportedFaultType * SOAP_FMAC4 soap_new_wsnt__TopicNotSupportedFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__TopicNotSupportedFaultType(struct soap*, const struct wsnt__TopicNotSupportedFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__TopicNotSupportedFaultType
#define soap_write_wsnt__TopicNotSupportedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__TopicNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__TopicNotSupportedFaultType(soap, data, "wsnt:TopicNotSupportedFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__TopicNotSupportedFaultType
#define soap_PUT_wsnt__TopicNotSupportedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__TopicNotSupportedFaultType(soap, data, "wsnt:TopicNotSupportedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__TopicNotSupportedFaultType
#define soap_PATCH_wsnt__TopicNotSupportedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__TopicNotSupportedFaultType(soap, data, "wsnt:TopicNotSupportedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__TopicNotSupportedFaultType
#define soap_POST_send_wsnt__TopicNotSupportedFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__TopicNotSupportedFaultType(soap, data, "wsnt:TopicNotSupportedFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__TopicNotSupportedFaultType * SOAP_FMAC4 soap_get_wsnt__TopicNotSupportedFaultType(struct soap*, struct wsnt__TopicNotSupportedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__TopicNotSupportedFaultType
#define soap_read_wsnt__TopicNotSupportedFaultType(soap, data) ( ((data) ? (soap_default_wsnt__TopicNotSupportedFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__TopicNotSupportedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__TopicNotSupportedFaultType
#define soap_GET_wsnt__TopicNotSupportedFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__TopicNotSupportedFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__TopicNotSupportedFaultType
#define soap_POST_recv_wsnt__TopicNotSupportedFaultType(soap, data) ( soap_read_wsnt__TopicNotSupportedFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidTopicExpressionFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__InvalidTopicExpressionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_write__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidTopicExpressionFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_PUT__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidTopicExpressionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_PATCH__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidTopicExpressionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_POST_send__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidTopicExpressionFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_read__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_GET__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_POST_recv__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data) ( soap_read__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidTopicExpressionFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__InvalidTopicExpressionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, const struct _wsnt__InvalidTopicExpressionFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, const char*, int, const struct _wsnt__InvalidTopicExpressionFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_Description * SOAP_FMAC4 soap_in__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidTopicExpressionFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_Description * SOAP_FMAC4 soap_new__wsnt__InvalidTopicExpressionFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, const struct _wsnt__InvalidTopicExpressionFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_write__wsnt__InvalidTopicExpressionFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_Description(soap, data, "wsnt:InvalidTopicExpressionFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_PUT__wsnt__InvalidTopicExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_Description(soap, data, "wsnt:InvalidTopicExpressionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_PATCH__wsnt__InvalidTopicExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_Description(soap, data, "wsnt:InvalidTopicExpressionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_POST_send__wsnt__InvalidTopicExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_Description(soap, data, "wsnt:InvalidTopicExpressionFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_Description * SOAP_FMAC4 soap_get__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_read__wsnt__InvalidTopicExpressionFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__InvalidTopicExpressionFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidTopicExpressionFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_GET__wsnt__InvalidTopicExpressionFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidTopicExpressionFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_POST_recv__wsnt__InvalidTopicExpressionFaultType_Description(soap, data) ( soap_read__wsnt__InvalidTopicExpressionFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidTopicExpressionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__InvalidTopicExpressionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_write__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidTopicExpressionFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_PUT__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidTopicExpressionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_PATCH__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidTopicExpressionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_POST_send__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidTopicExpressionFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_read__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_GET__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_POST_recv__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data) ( soap_read__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__InvalidTopicExpressionFaultType_DEFINED
#define SOAP_TYPE_wsnt__InvalidTopicExpressionFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__InvalidTopicExpressionFaultType(struct soap*, struct wsnt__InvalidTopicExpressionFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__InvalidTopicExpressionFaultType(struct soap*, const struct wsnt__InvalidTopicExpressionFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidTopicExpressionFaultType(struct soap*, const char*, int, const struct wsnt__InvalidTopicExpressionFaultType *, const char*);
SOAP_FMAC3 struct wsnt__InvalidTopicExpressionFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidTopicExpressionFaultType(struct soap*, const char*, struct wsnt__InvalidTopicExpressionFaultType *, const char*);

SOAP_FMAC3 struct wsnt__InvalidTopicExpressionFaultType * SOAP_FMAC4 soap_new_wsnt__InvalidTopicExpressionFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__InvalidTopicExpressionFaultType(struct soap*, const struct wsnt__InvalidTopicExpressionFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__InvalidTopicExpressionFaultType
#define soap_write_wsnt__InvalidTopicExpressionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__InvalidTopicExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidTopicExpressionFaultType(soap, data, "wsnt:InvalidTopicExpressionFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__InvalidTopicExpressionFaultType
#define soap_PUT_wsnt__InvalidTopicExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidTopicExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidTopicExpressionFaultType(soap, data, "wsnt:InvalidTopicExpressionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__InvalidTopicExpressionFaultType
#define soap_PATCH_wsnt__InvalidTopicExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidTopicExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidTopicExpressionFaultType(soap, data, "wsnt:InvalidTopicExpressionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__InvalidTopicExpressionFaultType
#define soap_POST_send_wsnt__InvalidTopicExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidTopicExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidTopicExpressionFaultType(soap, data, "wsnt:InvalidTopicExpressionFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__InvalidTopicExpressionFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidTopicExpressionFaultType(struct soap*, struct wsnt__InvalidTopicExpressionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidTopicExpressionFaultType
#define soap_read_wsnt__InvalidTopicExpressionFaultType(soap, data) ( ((data) ? (soap_default_wsnt__InvalidTopicExpressionFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__InvalidTopicExpressionFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__InvalidTopicExpressionFaultType
#define soap_GET_wsnt__InvalidTopicExpressionFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__InvalidTopicExpressionFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__InvalidTopicExpressionFaultType
#define soap_POST_recv_wsnt__InvalidTopicExpressionFaultType(soap, data) ( soap_read_wsnt__InvalidTopicExpressionFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, const struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, const char*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, const struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_write__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_PUT__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_PATCH__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_POST_send__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_read__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_GET__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_POST_recv__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data) ( soap_read__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__TopicExpressionDialectUnknownFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__TopicExpressionDialectUnknownFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, const struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, const char*, int, const struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_Description * SOAP_FMAC4 soap_in__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, const char*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_Description * SOAP_FMAC4 soap_new__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, const struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_write__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_PUT__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_PATCH__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_POST_send__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_Description * SOAP_FMAC4 soap_get__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_read__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_GET__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_POST_recv__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data) ( soap_read__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, const struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, const struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_write__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_PUT__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_PATCH__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_POST_send__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_read__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_GET__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_POST_recv__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data) ( soap_read__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__TopicExpressionDialectUnknownFaultType_DEFINED
#define SOAP_TYPE_wsnt__TopicExpressionDialectUnknownFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, struct wsnt__TopicExpressionDialectUnknownFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const struct wsnt__TopicExpressionDialectUnknownFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const char*, int, const struct wsnt__TopicExpressionDialectUnknownFaultType *, const char*);
SOAP_FMAC3 struct wsnt__TopicExpressionDialectUnknownFaultType * SOAP_FMAC4 soap_in_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const char*, struct wsnt__TopicExpressionDialectUnknownFaultType *, const char*);

SOAP_FMAC3 struct wsnt__TopicExpressionDialectUnknownFaultType * SOAP_FMAC4 soap_new_wsnt__TopicExpressionDialectUnknownFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const struct wsnt__TopicExpressionDialectUnknownFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_write_wsnt__TopicExpressionDialectUnknownFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__TopicExpressionDialectUnknownFaultType(soap, data), 0) || soap_put_wsnt__TopicExpressionDialectUnknownFaultType(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_PUT_wsnt__TopicExpressionDialectUnknownFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicExpressionDialectUnknownFaultType(soap, data), 0) || soap_put_wsnt__TopicExpressionDialectUnknownFaultType(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_PATCH_wsnt__TopicExpressionDialectUnknownFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicExpressionDialectUnknownFaultType(soap, data), 0) || soap_put_wsnt__TopicExpressionDialectUnknownFaultType(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_POST_send_wsnt__TopicExpressionDialectUnknownFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicExpressionDialectUnknownFaultType(soap, data), 0) || soap_put_wsnt__TopicExpressionDialectUnknownFaultType(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__TopicExpressionDialectUnknownFaultType * SOAP_FMAC4 soap_get_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, struct wsnt__TopicExpressionDialectUnknownFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_read_wsnt__TopicExpressionDialectUnknownFaultType(soap, data) ( ((data) ? (soap_default_wsnt__TopicExpressionDialectUnknownFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__TopicExpressionDialectUnknownFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_GET_wsnt__TopicExpressionDialectUnknownFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__TopicExpressionDialectUnknownFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_POST_recv_wsnt__TopicExpressionDialectUnknownFaultType(soap, data) ( soap_read_wsnt__TopicExpressionDialectUnknownFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidFilterFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__InvalidFilterFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, struct _wsnt__InvalidFilterFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidFilterFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__InvalidFilterFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidFilterFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__InvalidFilterFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidFilterFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidFilterFaultType_FaultCause
#define soap_write__wsnt__InvalidFilterFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidFilterFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_FaultCause(soap, data, "wsnt:InvalidFilterFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidFilterFaultType_FaultCause
#define soap_PUT__wsnt__InvalidFilterFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_FaultCause(soap, data, "wsnt:InvalidFilterFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidFilterFaultType_FaultCause
#define soap_PATCH__wsnt__InvalidFilterFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_FaultCause(soap, data, "wsnt:InvalidFilterFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidFilterFaultType_FaultCause
#define soap_POST_send__wsnt__InvalidFilterFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_FaultCause(soap, data, "wsnt:InvalidFilterFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, struct _wsnt__InvalidFilterFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidFilterFaultType_FaultCause
#define soap_read__wsnt__InvalidFilterFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__InvalidFilterFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidFilterFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidFilterFaultType_FaultCause
#define soap_GET__wsnt__InvalidFilterFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidFilterFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidFilterFaultType_FaultCause
#define soap_POST_recv__wsnt__InvalidFilterFaultType_FaultCause(soap, data) ( soap_read__wsnt__InvalidFilterFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidFilterFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__InvalidFilterFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidFilterFaultType_Description(struct soap*, struct _wsnt__InvalidFilterFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidFilterFaultType_Description(struct soap*, const struct _wsnt__InvalidFilterFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidFilterFaultType_Description(struct soap*, const char*, int, const struct _wsnt__InvalidFilterFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_Description * SOAP_FMAC4 soap_in__wsnt__InvalidFilterFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidFilterFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_Description * SOAP_FMAC4 soap_new__wsnt__InvalidFilterFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidFilterFaultType_Description(struct soap*, const struct _wsnt__InvalidFilterFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidFilterFaultType_Description
#define soap_write__wsnt__InvalidFilterFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidFilterFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_Description(soap, data, "wsnt:InvalidFilterFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidFilterFaultType_Description
#define soap_PUT__wsnt__InvalidFilterFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_Description(soap, data, "wsnt:InvalidFilterFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidFilterFaultType_Description
#define soap_PATCH__wsnt__InvalidFilterFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_Description(soap, data, "wsnt:InvalidFilterFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidFilterFaultType_Description
#define soap_POST_send__wsnt__InvalidFilterFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_Description(soap, data, "wsnt:InvalidFilterFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_Description * SOAP_FMAC4 soap_get__wsnt__InvalidFilterFaultType_Description(struct soap*, struct _wsnt__InvalidFilterFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidFilterFaultType_Description
#define soap_read__wsnt__InvalidFilterFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__InvalidFilterFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidFilterFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidFilterFaultType_Description
#define soap_GET__wsnt__InvalidFilterFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidFilterFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidFilterFaultType_Description
#define soap_POST_recv__wsnt__InvalidFilterFaultType_Description(soap, data) ( soap_read__wsnt__InvalidFilterFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidFilterFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__InvalidFilterFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidFilterFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidFilterFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__InvalidFilterFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidFilterFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__InvalidFilterFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidFilterFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_write__wsnt__InvalidFilterFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidFilterFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_ErrorCode(soap, data, "wsnt:InvalidFilterFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_PUT__wsnt__InvalidFilterFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_ErrorCode(soap, data, "wsnt:InvalidFilterFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_PATCH__wsnt__InvalidFilterFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_ErrorCode(soap, data, "wsnt:InvalidFilterFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_POST_send__wsnt__InvalidFilterFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_ErrorCode(soap, data, "wsnt:InvalidFilterFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidFilterFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_read__wsnt__InvalidFilterFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__InvalidFilterFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidFilterFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_GET__wsnt__InvalidFilterFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidFilterFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_POST_recv__wsnt__InvalidFilterFaultType_ErrorCode(soap, data) ( soap_read__wsnt__InvalidFilterFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__InvalidFilterFaultType_DEFINED
#define SOAP_TYPE_wsnt__InvalidFilterFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__InvalidFilterFaultType(struct soap*, struct wsnt__InvalidFilterFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__InvalidFilterFaultType(struct soap*, const struct wsnt__InvalidFilterFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidFilterFaultType(struct soap*, const char*, int, const struct wsnt__InvalidFilterFaultType *, const char*);
SOAP_FMAC3 struct wsnt__InvalidFilterFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidFilterFaultType(struct soap*, const char*, struct wsnt__InvalidFilterFaultType *, const char*);

SOAP_FMAC3 struct wsnt__InvalidFilterFaultType * SOAP_FMAC4 soap_new_wsnt__InvalidFilterFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__InvalidFilterFaultType(struct soap*, const struct wsnt__InvalidFilterFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__InvalidFilterFaultType
#define soap_write_wsnt__InvalidFilterFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__InvalidFilterFaultType(soap, data), 0) || soap_put_wsnt__InvalidFilterFaultType(soap, data, "wsnt:InvalidFilterFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__InvalidFilterFaultType
#define soap_PUT_wsnt__InvalidFilterFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidFilterFaultType(soap, data), 0) || soap_put_wsnt__InvalidFilterFaultType(soap, data, "wsnt:InvalidFilterFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__InvalidFilterFaultType
#define soap_PATCH_wsnt__InvalidFilterFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidFilterFaultType(soap, data), 0) || soap_put_wsnt__InvalidFilterFaultType(soap, data, "wsnt:InvalidFilterFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__InvalidFilterFaultType
#define soap_POST_send_wsnt__InvalidFilterFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidFilterFaultType(soap, data), 0) || soap_put_wsnt__InvalidFilterFaultType(soap, data, "wsnt:InvalidFilterFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__InvalidFilterFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidFilterFaultType(struct soap*, struct wsnt__InvalidFilterFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidFilterFaultType
#define soap_read_wsnt__InvalidFilterFaultType(soap, data) ( ((data) ? (soap_default_wsnt__InvalidFilterFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__InvalidFilterFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__InvalidFilterFaultType
#define soap_GET_wsnt__InvalidFilterFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__InvalidFilterFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__InvalidFilterFaultType
#define soap_POST_recv_wsnt__InvalidFilterFaultType(soap, data) ( soap_read_wsnt__InvalidFilterFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__SubscribeCreationFailedFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__SubscribeCreationFailedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, const struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, const struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_write__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data, "wsnt:SubscribeCreationFailedFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_PUT__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data, "wsnt:SubscribeCreationFailedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_PATCH__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data, "wsnt:SubscribeCreationFailedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_POST_send__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data, "wsnt:SubscribeCreationFailedFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_read__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_GET__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_POST_recv__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data) ( soap_read__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__SubscribeCreationFailedFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__SubscribeCreationFailedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, const struct _wsnt__SubscribeCreationFailedFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, const char*, int, const struct _wsnt__SubscribeCreationFailedFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_Description * SOAP_FMAC4 soap_in__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, const char*, struct _wsnt__SubscribeCreationFailedFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_Description * SOAP_FMAC4 soap_new__wsnt__SubscribeCreationFailedFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, const struct _wsnt__SubscribeCreationFailedFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_write__wsnt__SubscribeCreationFailedFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_Description(soap, data, "wsnt:SubscribeCreationFailedFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_PUT__wsnt__SubscribeCreationFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_Description(soap, data, "wsnt:SubscribeCreationFailedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_PATCH__wsnt__SubscribeCreationFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_Description(soap, data, "wsnt:SubscribeCreationFailedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_POST_send__wsnt__SubscribeCreationFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_Description(soap, data, "wsnt:SubscribeCreationFailedFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_Description * SOAP_FMAC4 soap_get__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_read__wsnt__SubscribeCreationFailedFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__SubscribeCreationFailedFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__SubscribeCreationFailedFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_GET__wsnt__SubscribeCreationFailedFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__SubscribeCreationFailedFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_POST_recv__wsnt__SubscribeCreationFailedFaultType_Description(soap, data) ( soap_read__wsnt__SubscribeCreationFailedFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__SubscribeCreationFailedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__SubscribeCreationFailedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, const struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, const struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_write__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data, "wsnt:SubscribeCreationFailedFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_PUT__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data, "wsnt:SubscribeCreationFailedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_PATCH__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data, "wsnt:SubscribeCreationFailedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_POST_send__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data, "wsnt:SubscribeCreationFailedFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_read__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_GET__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_POST_recv__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data) ( soap_read__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__SubscribeCreationFailedFaultType_DEFINED
#define SOAP_TYPE_wsnt__SubscribeCreationFailedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__SubscribeCreationFailedFaultType(struct soap*, struct wsnt__SubscribeCreationFailedFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__SubscribeCreationFailedFaultType(struct soap*, const struct wsnt__SubscribeCreationFailedFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__SubscribeCreationFailedFaultType(struct soap*, const char*, int, const struct wsnt__SubscribeCreationFailedFaultType *, const char*);
SOAP_FMAC3 struct wsnt__SubscribeCreationFailedFaultType * SOAP_FMAC4 soap_in_wsnt__SubscribeCreationFailedFaultType(struct soap*, const char*, struct wsnt__SubscribeCreationFailedFaultType *, const char*);

SOAP_FMAC3 struct wsnt__SubscribeCreationFailedFaultType * SOAP_FMAC4 soap_new_wsnt__SubscribeCreationFailedFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__SubscribeCreationFailedFaultType(struct soap*, const struct wsnt__SubscribeCreationFailedFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__SubscribeCreationFailedFaultType
#define soap_write_wsnt__SubscribeCreationFailedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__SubscribeCreationFailedFaultType(soap, data), 0) || soap_put_wsnt__SubscribeCreationFailedFaultType(soap, data, "wsnt:SubscribeCreationFailedFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__SubscribeCreationFailedFaultType
#define soap_PUT_wsnt__SubscribeCreationFailedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__SubscribeCreationFailedFaultType(soap, data), 0) || soap_put_wsnt__SubscribeCreationFailedFaultType(soap, data, "wsnt:SubscribeCreationFailedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__SubscribeCreationFailedFaultType
#define soap_PATCH_wsnt__SubscribeCreationFailedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__SubscribeCreationFailedFaultType(soap, data), 0) || soap_put_wsnt__SubscribeCreationFailedFaultType(soap, data, "wsnt:SubscribeCreationFailedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__SubscribeCreationFailedFaultType
#define soap_POST_send_wsnt__SubscribeCreationFailedFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__SubscribeCreationFailedFaultType(soap, data), 0) || soap_put_wsnt__SubscribeCreationFailedFaultType(soap, data, "wsnt:SubscribeCreationFailedFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__SubscribeCreationFailedFaultType * SOAP_FMAC4 soap_get_wsnt__SubscribeCreationFailedFaultType(struct soap*, struct wsnt__SubscribeCreationFailedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__SubscribeCreationFailedFaultType
#define soap_read_wsnt__SubscribeCreationFailedFaultType(soap, data) ( ((data) ? (soap_default_wsnt__SubscribeCreationFailedFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__SubscribeCreationFailedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__SubscribeCreationFailedFaultType
#define soap_GET_wsnt__SubscribeCreationFailedFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__SubscribeCreationFailedFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__SubscribeCreationFailedFaultType
#define soap_POST_recv_wsnt__SubscribeCreationFailedFaultType(soap, data) ( soap_read_wsnt__SubscribeCreationFailedFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsrfr__ResourceUnavailableFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsrfr__ResourceUnavailableFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, const struct _wsrfr__ResourceUnavailableFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, const char*, int, const struct _wsrfr__ResourceUnavailableFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_FaultCause * SOAP_FMAC4 soap_in__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, const char*, struct _wsrfr__ResourceUnavailableFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_FaultCause * SOAP_FMAC4 soap_new__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, const struct _wsrfr__ResourceUnavailableFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsrfr__ResourceUnavailableFaultType_FaultCause
#define soap_write__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, data), 0) || soap_put__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, data, "wsrfr:ResourceUnavailableFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsrfr__ResourceUnavailableFaultType_FaultCause
#define soap_PUT__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, data), 0) || soap_put__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, data, "wsrfr:ResourceUnavailableFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsrfr__ResourceUnavailableFaultType_FaultCause
#define soap_PATCH__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, data), 0) || soap_put__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, data, "wsrfr:ResourceUnavailableFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsrfr__ResourceUnavailableFaultType_FaultCause
#define soap_POST_send__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, data), 0) || soap_put__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, data, "wsrfr:ResourceUnavailableFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_FaultCause * SOAP_FMAC4 soap_get__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsrfr__ResourceUnavailableFaultType_FaultCause
#define soap_read__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsrfr__ResourceUnavailableFaultType_FaultCause
#define soap_GET__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsrfr__ResourceUnavailableFaultType_FaultCause
#define soap_POST_recv__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, data) ( soap_read__wsrfr__ResourceUnavailableFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsrfr__ResourceUnavailableFaultType_Description_DEFINED
#define SOAP_TYPE__wsrfr__ResourceUnavailableFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, const struct _wsrfr__ResourceUnavailableFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, const char*, int, const struct _wsrfr__ResourceUnavailableFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_Description * SOAP_FMAC4 soap_in__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, const char*, struct _wsrfr__ResourceUnavailableFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_Description * SOAP_FMAC4 soap_new__wsrfr__ResourceUnavailableFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, const struct _wsrfr__ResourceUnavailableFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsrfr__ResourceUnavailableFaultType_Description
#define soap_write__wsrfr__ResourceUnavailableFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsrfr__ResourceUnavailableFaultType_Description(soap, data), 0) || soap_put__wsrfr__ResourceUnavailableFaultType_Description(soap, data, "wsrfr:ResourceUnavailableFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsrfr__ResourceUnavailableFaultType_Description
#define soap_PUT__wsrfr__ResourceUnavailableFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnavailableFaultType_Description(soap, data), 0) || soap_put__wsrfr__ResourceUnavailableFaultType_Description(soap, data, "wsrfr:ResourceUnavailableFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsrfr__ResourceUnavailableFaultType_Description
#define soap_PATCH__wsrfr__ResourceUnavailableFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnavailableFaultType_Description(soap, data), 0) || soap_put__wsrfr__ResourceUnavailableFaultType_Description(soap, data, "wsrfr:ResourceUnavailableFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsrfr__ResourceUnavailableFaultType_Description
#define soap_POST_send__wsrfr__ResourceUnavailableFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnavailableFaultType_Description(soap, data), 0) || soap_put__wsrfr__ResourceUnavailableFaultType_Description(soap, data, "wsrfr:ResourceUnavailableFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_Description * SOAP_FMAC4 soap_get__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsrfr__ResourceUnavailableFaultType_Description
#define soap_read__wsrfr__ResourceUnavailableFaultType_Description(soap, data) ( ((data) ? (soap_default__wsrfr__ResourceUnavailableFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfr__ResourceUnavailableFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsrfr__ResourceUnavailableFaultType_Description
#define soap_GET__wsrfr__ResourceUnavailableFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsrfr__ResourceUnavailableFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsrfr__ResourceUnavailableFaultType_Description
#define soap_POST_recv__wsrfr__ResourceUnavailableFaultType_Description(soap, data) ( soap_read__wsrfr__ResourceUnavailableFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsrfr__ResourceUnavailableFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsrfr__ResourceUnavailableFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, const struct _wsrfr__ResourceUnavailableFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsrfr__ResourceUnavailableFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, const char*, struct _wsrfr__ResourceUnavailableFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, const struct _wsrfr__ResourceUnavailableFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsrfr__ResourceUnavailableFaultType_ErrorCode
#define soap_write__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, data, "wsrfr:ResourceUnavailableFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsrfr__ResourceUnavailableFaultType_ErrorCode
#define soap_PUT__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, data, "wsrfr:ResourceUnavailableFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsrfr__ResourceUnavailableFaultType_ErrorCode
#define soap_PATCH__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, data, "wsrfr:ResourceUnavailableFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsrfr__ResourceUnavailableFaultType_ErrorCode
#define soap_POST_send__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, data, "wsrfr:ResourceUnavailableFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsrfr__ResourceUnavailableFaultType_ErrorCode
#define soap_read__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsrfr__ResourceUnavailableFaultType_ErrorCode
#define soap_GET__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsrfr__ResourceUnavailableFaultType_ErrorCode
#define soap_POST_recv__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, data) ( soap_read__wsrfr__ResourceUnavailableFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsrfr__ResourceUnavailableFaultType_DEFINED
#define SOAP_TYPE_wsrfr__ResourceUnavailableFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsrfr__ResourceUnavailableFaultType(struct soap*, struct wsrfr__ResourceUnavailableFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsrfr__ResourceUnavailableFaultType(struct soap*, const struct wsrfr__ResourceUnavailableFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsrfr__ResourceUnavailableFaultType(struct soap*, const char*, int, const struct wsrfr__ResourceUnavailableFaultType *, const char*);
SOAP_FMAC3 struct wsrfr__ResourceUnavailableFaultType * SOAP_FMAC4 soap_in_wsrfr__ResourceUnavailableFaultType(struct soap*, const char*, struct wsrfr__ResourceUnavailableFaultType *, const char*);

SOAP_FMAC3 struct wsrfr__ResourceUnavailableFaultType * SOAP_FMAC4 soap_new_wsrfr__ResourceUnavailableFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsrfr__ResourceUnavailableFaultType(struct soap*, const struct wsrfr__ResourceUnavailableFaultType *, const char*, const char*);

#ifndef soap_write_wsrfr__ResourceUnavailableFaultType
#define soap_write_wsrfr__ResourceUnavailableFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsrfr__ResourceUnavailableFaultType(soap, data), 0) || soap_put_wsrfr__ResourceUnavailableFaultType(soap, data, "wsrfr:ResourceUnavailableFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsrfr__ResourceUnavailableFaultType
#define soap_PUT_wsrfr__ResourceUnavailableFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsrfr__ResourceUnavailableFaultType(soap, data), 0) || soap_put_wsrfr__ResourceUnavailableFaultType(soap, data, "wsrfr:ResourceUnavailableFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsrfr__ResourceUnavailableFaultType
#define soap_PATCH_wsrfr__ResourceUnavailableFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsrfr__ResourceUnavailableFaultType(soap, data), 0) || soap_put_wsrfr__ResourceUnavailableFaultType(soap, data, "wsrfr:ResourceUnavailableFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsrfr__ResourceUnavailableFaultType
#define soap_POST_send_wsrfr__ResourceUnavailableFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsrfr__ResourceUnavailableFaultType(soap, data), 0) || soap_put_wsrfr__ResourceUnavailableFaultType(soap, data, "wsrfr:ResourceUnavailableFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsrfr__ResourceUnavailableFaultType * SOAP_FMAC4 soap_get_wsrfr__ResourceUnavailableFaultType(struct soap*, struct wsrfr__ResourceUnavailableFaultType *, const char*, const char*);

#ifndef soap_read_wsrfr__ResourceUnavailableFaultType
#define soap_read_wsrfr__ResourceUnavailableFaultType(soap, data) ( ((data) ? (soap_default_wsrfr__ResourceUnavailableFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsrfr__ResourceUnavailableFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsrfr__ResourceUnavailableFaultType
#define soap_GET_wsrfr__ResourceUnavailableFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsrfr__ResourceUnavailableFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsrfr__ResourceUnavailableFaultType
#define soap_POST_recv_wsrfr__ResourceUnavailableFaultType(soap, data) ( soap_read_wsrfr__ResourceUnavailableFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsrfr__ResourceUnknownFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsrfr__ResourceUnknownFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, struct _wsrfr__ResourceUnknownFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, const struct _wsrfr__ResourceUnknownFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, const char*, int, const struct _wsrfr__ResourceUnknownFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_FaultCause * SOAP_FMAC4 soap_in__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, const char*, struct _wsrfr__ResourceUnknownFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_FaultCause * SOAP_FMAC4 soap_new__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, const struct _wsrfr__ResourceUnknownFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsrfr__ResourceUnknownFaultType_FaultCause
#define soap_write__wsrfr__ResourceUnknownFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsrfr__ResourceUnknownFaultType_FaultCause(soap, data), 0) || soap_put__wsrfr__ResourceUnknownFaultType_FaultCause(soap, data, "wsrfr:ResourceUnknownFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsrfr__ResourceUnknownFaultType_FaultCause
#define soap_PUT__wsrfr__ResourceUnknownFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnknownFaultType_FaultCause(soap, data), 0) || soap_put__wsrfr__ResourceUnknownFaultType_FaultCause(soap, data, "wsrfr:ResourceUnknownFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsrfr__ResourceUnknownFaultType_FaultCause
#define soap_PATCH__wsrfr__ResourceUnknownFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnknownFaultType_FaultCause(soap, data), 0) || soap_put__wsrfr__ResourceUnknownFaultType_FaultCause(soap, data, "wsrfr:ResourceUnknownFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsrfr__ResourceUnknownFaultType_FaultCause
#define soap_POST_send__wsrfr__ResourceUnknownFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnknownFaultType_FaultCause(soap, data), 0) || soap_put__wsrfr__ResourceUnknownFaultType_FaultCause(soap, data, "wsrfr:ResourceUnknownFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_FaultCause * SOAP_FMAC4 soap_get__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, struct _wsrfr__ResourceUnknownFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsrfr__ResourceUnknownFaultType_FaultCause
#define soap_read__wsrfr__ResourceUnknownFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsrfr__ResourceUnknownFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfr__ResourceUnknownFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsrfr__ResourceUnknownFaultType_FaultCause
#define soap_GET__wsrfr__ResourceUnknownFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsrfr__ResourceUnknownFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsrfr__ResourceUnknownFaultType_FaultCause
#define soap_POST_recv__wsrfr__ResourceUnknownFaultType_FaultCause(soap, data) ( soap_read__wsrfr__ResourceUnknownFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsrfr__ResourceUnknownFaultType_Description_DEFINED
#define SOAP_TYPE__wsrfr__ResourceUnknownFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsrfr__ResourceUnknownFaultType_Description(struct soap*, struct _wsrfr__ResourceUnknownFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsrfr__ResourceUnknownFaultType_Description(struct soap*, const struct _wsrfr__ResourceUnknownFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfr__ResourceUnknownFaultType_Description(struct soap*, const char*, int, const struct _wsrfr__ResourceUnknownFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_Description * SOAP_FMAC4 soap_in__wsrfr__ResourceUnknownFaultType_Description(struct soap*, const char*, struct _wsrfr__ResourceUnknownFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_Description * SOAP_FMAC4 soap_new__wsrfr__ResourceUnknownFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsrfr__ResourceUnknownFaultType_Description(struct soap*, const struct _wsrfr__ResourceUnknownFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsrfr__ResourceUnknownFaultType_Description
#define soap_write__wsrfr__ResourceUnknownFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsrfr__ResourceUnknownFaultType_Description(soap, data), 0) || soap_put__wsrfr__ResourceUnknownFaultType_Description(soap, data, "wsrfr:ResourceUnknownFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsrfr__ResourceUnknownFaultType_Description
#define soap_PUT__wsrfr__ResourceUnknownFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnknownFaultType_Description(soap, data), 0) || soap_put__wsrfr__ResourceUnknownFaultType_Description(soap, data, "wsrfr:ResourceUnknownFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsrfr__ResourceUnknownFaultType_Description
#define soap_PATCH__wsrfr__ResourceUnknownFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnknownFaultType_Description(soap, data), 0) || soap_put__wsrfr__ResourceUnknownFaultType_Description(soap, data, "wsrfr:ResourceUnknownFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsrfr__ResourceUnknownFaultType_Description
#define soap_POST_send__wsrfr__ResourceUnknownFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnknownFaultType_Description(soap, data), 0) || soap_put__wsrfr__ResourceUnknownFaultType_Description(soap, data, "wsrfr:ResourceUnknownFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_Description * SOAP_FMAC4 soap_get__wsrfr__ResourceUnknownFaultType_Description(struct soap*, struct _wsrfr__ResourceUnknownFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsrfr__ResourceUnknownFaultType_Description
#define soap_read__wsrfr__ResourceUnknownFaultType_Description(soap, data) ( ((data) ? (soap_default__wsrfr__ResourceUnknownFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfr__ResourceUnknownFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsrfr__ResourceUnknownFaultType_Description
#define soap_GET__wsrfr__ResourceUnknownFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsrfr__ResourceUnknownFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsrfr__ResourceUnknownFaultType_Description
#define soap_POST_recv__wsrfr__ResourceUnknownFaultType_Description(soap, data) ( soap_read__wsrfr__ResourceUnknownFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsrfr__ResourceUnknownFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsrfr__ResourceUnknownFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, struct _wsrfr__ResourceUnknownFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, const struct _wsrfr__ResourceUnknownFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsrfr__ResourceUnknownFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, const char*, struct _wsrfr__ResourceUnknownFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, const struct _wsrfr__ResourceUnknownFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsrfr__ResourceUnknownFaultType_ErrorCode
#define soap_write__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, data, "wsrfr:ResourceUnknownFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsrfr__ResourceUnknownFaultType_ErrorCode
#define soap_PUT__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, data, "wsrfr:ResourceUnknownFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsrfr__ResourceUnknownFaultType_ErrorCode
#define soap_PATCH__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, data, "wsrfr:ResourceUnknownFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsrfr__ResourceUnknownFaultType_ErrorCode
#define soap_POST_send__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, data, "wsrfr:ResourceUnknownFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, struct _wsrfr__ResourceUnknownFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsrfr__ResourceUnknownFaultType_ErrorCode
#define soap_read__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsrfr__ResourceUnknownFaultType_ErrorCode
#define soap_GET__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsrfr__ResourceUnknownFaultType_ErrorCode
#define soap_POST_recv__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, data) ( soap_read__wsrfr__ResourceUnknownFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsrfr__ResourceUnknownFaultType_DEFINED
#define SOAP_TYPE_wsrfr__ResourceUnknownFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsrfr__ResourceUnknownFaultType(struct soap*, struct wsrfr__ResourceUnknownFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsrfr__ResourceUnknownFaultType(struct soap*, const struct wsrfr__ResourceUnknownFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsrfr__ResourceUnknownFaultType(struct soap*, const char*, int, const struct wsrfr__ResourceUnknownFaultType *, const char*);
SOAP_FMAC3 struct wsrfr__ResourceUnknownFaultType * SOAP_FMAC4 soap_in_wsrfr__ResourceUnknownFaultType(struct soap*, const char*, struct wsrfr__ResourceUnknownFaultType *, const char*);

SOAP_FMAC3 struct wsrfr__ResourceUnknownFaultType * SOAP_FMAC4 soap_new_wsrfr__ResourceUnknownFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsrfr__ResourceUnknownFaultType(struct soap*, const struct wsrfr__ResourceUnknownFaultType *, const char*, const char*);

#ifndef soap_write_wsrfr__ResourceUnknownFaultType
#define soap_write_wsrfr__ResourceUnknownFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsrfr__ResourceUnknownFaultType(soap, data), 0) || soap_put_wsrfr__ResourceUnknownFaultType(soap, data, "wsrfr:ResourceUnknownFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsrfr__ResourceUnknownFaultType
#define soap_PUT_wsrfr__ResourceUnknownFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsrfr__ResourceUnknownFaultType(soap, data), 0) || soap_put_wsrfr__ResourceUnknownFaultType(soap, data, "wsrfr:ResourceUnknownFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsrfr__ResourceUnknownFaultType
#define soap_PATCH_wsrfr__ResourceUnknownFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsrfr__ResourceUnknownFaultType(soap, data), 0) || soap_put_wsrfr__ResourceUnknownFaultType(soap, data, "wsrfr:ResourceUnknownFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsrfr__ResourceUnknownFaultType
#define soap_POST_send_wsrfr__ResourceUnknownFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsrfr__ResourceUnknownFaultType(soap, data), 0) || soap_put_wsrfr__ResourceUnknownFaultType(soap, data, "wsrfr:ResourceUnknownFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsrfr__ResourceUnknownFaultType * SOAP_FMAC4 soap_get_wsrfr__ResourceUnknownFaultType(struct soap*, struct wsrfr__ResourceUnknownFaultType *, const char*, const char*);

#ifndef soap_read_wsrfr__ResourceUnknownFaultType
#define soap_read_wsrfr__ResourceUnknownFaultType(soap, data) ( ((data) ? (soap_default_wsrfr__ResourceUnknownFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsrfr__ResourceUnknownFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsrfr__ResourceUnknownFaultType
#define soap_GET_wsrfr__ResourceUnknownFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsrfr__ResourceUnknownFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsrfr__ResourceUnknownFaultType
#define soap_POST_recv_wsrfr__ResourceUnknownFaultType(soap, data) ( soap_read_wsrfr__ResourceUnknownFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wstop__QueryExpressionType_DEFINED
#define SOAP_TYPE_wstop__QueryExpressionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wstop__QueryExpressionType(struct soap*, struct wstop__QueryExpressionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__QueryExpressionType(struct soap*, const struct wstop__QueryExpressionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__QueryExpressionType(struct soap*, const char*, int, const struct wstop__QueryExpressionType *, const char*);
SOAP_FMAC3 struct wstop__QueryExpressionType * SOAP_FMAC4 soap_in_wstop__QueryExpressionType(struct soap*, const char*, struct wstop__QueryExpressionType *, const char*);

SOAP_FMAC3 struct wstop__QueryExpressionType * SOAP_FMAC4 soap_new_wstop__QueryExpressionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__QueryExpressionType(struct soap*, const struct wstop__QueryExpressionType *, const char*, const char*);

#ifndef soap_write_wstop__QueryExpressionType
#define soap_write_wstop__QueryExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__QueryExpressionType(soap, data), 0) || soap_put_wstop__QueryExpressionType(soap, data, "wstop:QueryExpressionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__QueryExpressionType
#define soap_PUT_wstop__QueryExpressionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__QueryExpressionType(soap, data), 0) || soap_put_wstop__QueryExpressionType(soap, data, "wstop:QueryExpressionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__QueryExpressionType
#define soap_PATCH_wstop__QueryExpressionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__QueryExpressionType(soap, data), 0) || soap_put_wstop__QueryExpressionType(soap, data, "wstop:QueryExpressionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__QueryExpressionType
#define soap_POST_send_wstop__QueryExpressionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__QueryExpressionType(soap, data), 0) || soap_put_wstop__QueryExpressionType(soap, data, "wstop:QueryExpressionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wstop__QueryExpressionType * SOAP_FMAC4 soap_get_wstop__QueryExpressionType(struct soap*, struct wstop__QueryExpressionType *, const char*, const char*);

#ifndef soap_read_wstop__QueryExpressionType
#define soap_read_wstop__QueryExpressionType(soap, data) ( ((data) ? (soap_default_wstop__QueryExpressionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__QueryExpressionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__QueryExpressionType
#define soap_GET_wstop__QueryExpressionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__QueryExpressionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__QueryExpressionType
#define soap_POST_recv_wstop__QueryExpressionType(soap, data) ( soap_read_wstop__QueryExpressionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wstop__ExtensibleDocumented_DEFINED
#define SOAP_TYPE_wstop__ExtensibleDocumented_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wstop__ExtensibleDocumented(struct soap*, struct wstop__ExtensibleDocumented *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__ExtensibleDocumented(struct soap*, const struct wstop__ExtensibleDocumented *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__ExtensibleDocumented(struct soap*, const char*, int, const struct wstop__ExtensibleDocumented *, const char*);
SOAP_FMAC3 struct wstop__ExtensibleDocumented * SOAP_FMAC4 soap_in_wstop__ExtensibleDocumented(struct soap*, const char*, struct wstop__ExtensibleDocumented *, const char*);

SOAP_FMAC3 struct wstop__ExtensibleDocumented * SOAP_FMAC4 soap_new_wstop__ExtensibleDocumented(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__ExtensibleDocumented(struct soap*, const struct wstop__ExtensibleDocumented *, const char*, const char*);

#ifndef soap_write_wstop__ExtensibleDocumented
#define soap_write_wstop__ExtensibleDocumented(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__ExtensibleDocumented(soap, data), 0) || soap_put_wstop__ExtensibleDocumented(soap, data, "wstop:ExtensibleDocumented", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__ExtensibleDocumented
#define soap_PUT_wstop__ExtensibleDocumented(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__ExtensibleDocumented(soap, data), 0) || soap_put_wstop__ExtensibleDocumented(soap, data, "wstop:ExtensibleDocumented", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__ExtensibleDocumented
#define soap_PATCH_wstop__ExtensibleDocumented(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__ExtensibleDocumented(soap, data), 0) || soap_put_wstop__ExtensibleDocumented(soap, data, "wstop:ExtensibleDocumented", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__ExtensibleDocumented
#define soap_POST_send_wstop__ExtensibleDocumented(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__ExtensibleDocumented(soap, data), 0) || soap_put_wstop__ExtensibleDocumented(soap, data, "wstop:ExtensibleDocumented", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wstop__ExtensibleDocumented * SOAP_FMAC4 soap_get_wstop__ExtensibleDocumented(struct soap*, struct wstop__ExtensibleDocumented *, const char*, const char*);

#ifndef soap_read_wstop__ExtensibleDocumented
#define soap_read_wstop__ExtensibleDocumented(soap, data) ( ((data) ? (soap_default_wstop__ExtensibleDocumented(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__ExtensibleDocumented(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__ExtensibleDocumented
#define soap_GET_wstop__ExtensibleDocumented(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__ExtensibleDocumented(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__ExtensibleDocumented
#define soap_POST_recv_wstop__ExtensibleDocumented(soap, data) ( soap_read_wstop__ExtensibleDocumented(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wstop__Documentation_DEFINED
#define SOAP_TYPE_wstop__Documentation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wstop__Documentation(struct soap*, struct wstop__Documentation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__Documentation(struct soap*, const struct wstop__Documentation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__Documentation(struct soap*, const char*, int, const struct wstop__Documentation *, const char*);
SOAP_FMAC3 struct wstop__Documentation * SOAP_FMAC4 soap_in_wstop__Documentation(struct soap*, const char*, struct wstop__Documentation *, const char*);

SOAP_FMAC3 struct wstop__Documentation * SOAP_FMAC4 soap_new_wstop__Documentation(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__Documentation(struct soap*, const struct wstop__Documentation *, const char*, const char*);

#ifndef soap_write_wstop__Documentation
#define soap_write_wstop__Documentation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__Documentation(soap, data), 0) || soap_put_wstop__Documentation(soap, data, "wstop:Documentation", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__Documentation
#define soap_PUT_wstop__Documentation(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__Documentation(soap, data), 0) || soap_put_wstop__Documentation(soap, data, "wstop:Documentation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__Documentation
#define soap_PATCH_wstop__Documentation(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__Documentation(soap, data), 0) || soap_put_wstop__Documentation(soap, data, "wstop:Documentation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__Documentation
#define soap_POST_send_wstop__Documentation(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__Documentation(soap, data), 0) || soap_put_wstop__Documentation(soap, data, "wstop:Documentation", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wstop__Documentation * SOAP_FMAC4 soap_get_wstop__Documentation(struct soap*, struct wstop__Documentation *, const char*, const char*);

#ifndef soap_read_wstop__Documentation
#define soap_read_wstop__Documentation(soap, data) ( ((data) ? (soap_default_wstop__Documentation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__Documentation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__Documentation
#define soap_GET_wstop__Documentation(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__Documentation(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__Documentation
#define soap_POST_recv_wstop__Documentation(soap, data) ( soap_read_wstop__Documentation(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__ResumeSubscriptionResponse_DEFINED
#define SOAP_TYPE__wsnt__ResumeSubscriptionResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__ResumeSubscriptionResponse(struct soap*, const struct _wsnt__ResumeSubscriptionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeSubscriptionResponse(struct soap*, const char*, int, const struct _wsnt__ResumeSubscriptionResponse *, const char*);
SOAP_FMAC3 struct _wsnt__ResumeSubscriptionResponse * SOAP_FMAC4 soap_in__wsnt__ResumeSubscriptionResponse(struct soap*, const char*, struct _wsnt__ResumeSubscriptionResponse *, const char*);

SOAP_FMAC3 struct _wsnt__ResumeSubscriptionResponse * SOAP_FMAC4 soap_new__wsnt__ResumeSubscriptionResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__ResumeSubscriptionResponse(struct soap*, const struct _wsnt__ResumeSubscriptionResponse *, const char*, const char*);

#ifndef soap_write__wsnt__ResumeSubscriptionResponse
#define soap_write__wsnt__ResumeSubscriptionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__ResumeSubscriptionResponse(soap, data), 0) || soap_put__wsnt__ResumeSubscriptionResponse(soap, data, "wsnt:ResumeSubscriptionResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__ResumeSubscriptionResponse
#define soap_PUT__wsnt__ResumeSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeSubscriptionResponse(soap, data), 0) || soap_put__wsnt__ResumeSubscriptionResponse(soap, data, "wsnt:ResumeSubscriptionResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__ResumeSubscriptionResponse
#define soap_PATCH__wsnt__ResumeSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeSubscriptionResponse(soap, data), 0) || soap_put__wsnt__ResumeSubscriptionResponse(soap, data, "wsnt:ResumeSubscriptionResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__ResumeSubscriptionResponse
#define soap_POST_send__wsnt__ResumeSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeSubscriptionResponse(soap, data), 0) || soap_put__wsnt__ResumeSubscriptionResponse(soap, data, "wsnt:ResumeSubscriptionResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__ResumeSubscriptionResponse * SOAP_FMAC4 soap_get__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeSubscriptionResponse
#define soap_read__wsnt__ResumeSubscriptionResponse(soap, data) ( ((data) ? (soap_default__wsnt__ResumeSubscriptionResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__ResumeSubscriptionResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__ResumeSubscriptionResponse
#define soap_GET__wsnt__ResumeSubscriptionResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__ResumeSubscriptionResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__ResumeSubscriptionResponse
#define soap_POST_recv__wsnt__ResumeSubscriptionResponse(soap, data) ( soap_read__wsnt__ResumeSubscriptionResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__ResumeSubscription_DEFINED
#define SOAP_TYPE__wsnt__ResumeSubscription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__ResumeSubscription(struct soap*, const struct _wsnt__ResumeSubscription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeSubscription(struct soap*, const char*, int, const struct _wsnt__ResumeSubscription *, const char*);
SOAP_FMAC3 struct _wsnt__ResumeSubscription * SOAP_FMAC4 soap_in__wsnt__ResumeSubscription(struct soap*, const char*, struct _wsnt__ResumeSubscription *, const char*);

SOAP_FMAC3 struct _wsnt__ResumeSubscription * SOAP_FMAC4 soap_new__wsnt__ResumeSubscription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__ResumeSubscription(struct soap*, const struct _wsnt__ResumeSubscription *, const char*, const char*);

#ifndef soap_write__wsnt__ResumeSubscription
#define soap_write__wsnt__ResumeSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__ResumeSubscription(soap, data), 0) || soap_put__wsnt__ResumeSubscription(soap, data, "wsnt:ResumeSubscription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__ResumeSubscription
#define soap_PUT__wsnt__ResumeSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeSubscription(soap, data), 0) || soap_put__wsnt__ResumeSubscription(soap, data, "wsnt:ResumeSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__ResumeSubscription
#define soap_PATCH__wsnt__ResumeSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeSubscription(soap, data), 0) || soap_put__wsnt__ResumeSubscription(soap, data, "wsnt:ResumeSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__ResumeSubscription
#define soap_POST_send__wsnt__ResumeSubscription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeSubscription(soap, data), 0) || soap_put__wsnt__ResumeSubscription(soap, data, "wsnt:ResumeSubscription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__ResumeSubscription * SOAP_FMAC4 soap_get__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeSubscription
#define soap_read__wsnt__ResumeSubscription(soap, data) ( ((data) ? (soap_default__wsnt__ResumeSubscription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__ResumeSubscription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__ResumeSubscription
#define soap_GET__wsnt__ResumeSubscription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__ResumeSubscription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__ResumeSubscription
#define soap_POST_recv__wsnt__ResumeSubscription(soap, data) ( soap_read__wsnt__ResumeSubscription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__PauseSubscriptionResponse_DEFINED
#define SOAP_TYPE__wsnt__PauseSubscriptionResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__PauseSubscriptionResponse(struct soap*, const struct _wsnt__PauseSubscriptionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseSubscriptionResponse(struct soap*, const char*, int, const struct _wsnt__PauseSubscriptionResponse *, const char*);
SOAP_FMAC3 struct _wsnt__PauseSubscriptionResponse * SOAP_FMAC4 soap_in__wsnt__PauseSubscriptionResponse(struct soap*, const char*, struct _wsnt__PauseSubscriptionResponse *, const char*);

SOAP_FMAC3 struct _wsnt__PauseSubscriptionResponse * SOAP_FMAC4 soap_new__wsnt__PauseSubscriptionResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__PauseSubscriptionResponse(struct soap*, const struct _wsnt__PauseSubscriptionResponse *, const char*, const char*);

#ifndef soap_write__wsnt__PauseSubscriptionResponse
#define soap_write__wsnt__PauseSubscriptionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__PauseSubscriptionResponse(soap, data), 0) || soap_put__wsnt__PauseSubscriptionResponse(soap, data, "wsnt:PauseSubscriptionResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__PauseSubscriptionResponse
#define soap_PUT__wsnt__PauseSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseSubscriptionResponse(soap, data), 0) || soap_put__wsnt__PauseSubscriptionResponse(soap, data, "wsnt:PauseSubscriptionResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__PauseSubscriptionResponse
#define soap_PATCH__wsnt__PauseSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseSubscriptionResponse(soap, data), 0) || soap_put__wsnt__PauseSubscriptionResponse(soap, data, "wsnt:PauseSubscriptionResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__PauseSubscriptionResponse
#define soap_POST_send__wsnt__PauseSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseSubscriptionResponse(soap, data), 0) || soap_put__wsnt__PauseSubscriptionResponse(soap, data, "wsnt:PauseSubscriptionResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__PauseSubscriptionResponse * SOAP_FMAC4 soap_get__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse *, const char*, const char*);

#ifndef soap_read__wsnt__PauseSubscriptionResponse
#define soap_read__wsnt__PauseSubscriptionResponse(soap, data) ( ((data) ? (soap_default__wsnt__PauseSubscriptionResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__PauseSubscriptionResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__PauseSubscriptionResponse
#define soap_GET__wsnt__PauseSubscriptionResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__PauseSubscriptionResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__PauseSubscriptionResponse
#define soap_POST_recv__wsnt__PauseSubscriptionResponse(soap, data) ( soap_read__wsnt__PauseSubscriptionResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__PauseSubscription_DEFINED
#define SOAP_TYPE__wsnt__PauseSubscription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__PauseSubscription(struct soap*, const struct _wsnt__PauseSubscription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseSubscription(struct soap*, const char*, int, const struct _wsnt__PauseSubscription *, const char*);
SOAP_FMAC3 struct _wsnt__PauseSubscription * SOAP_FMAC4 soap_in__wsnt__PauseSubscription(struct soap*, const char*, struct _wsnt__PauseSubscription *, const char*);

SOAP_FMAC3 struct _wsnt__PauseSubscription * SOAP_FMAC4 soap_new__wsnt__PauseSubscription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__PauseSubscription(struct soap*, const struct _wsnt__PauseSubscription *, const char*, const char*);

#ifndef soap_write__wsnt__PauseSubscription
#define soap_write__wsnt__PauseSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__PauseSubscription(soap, data), 0) || soap_put__wsnt__PauseSubscription(soap, data, "wsnt:PauseSubscription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__PauseSubscription
#define soap_PUT__wsnt__PauseSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseSubscription(soap, data), 0) || soap_put__wsnt__PauseSubscription(soap, data, "wsnt:PauseSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__PauseSubscription
#define soap_PATCH__wsnt__PauseSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseSubscription(soap, data), 0) || soap_put__wsnt__PauseSubscription(soap, data, "wsnt:PauseSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__PauseSubscription
#define soap_POST_send__wsnt__PauseSubscription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseSubscription(soap, data), 0) || soap_put__wsnt__PauseSubscription(soap, data, "wsnt:PauseSubscription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__PauseSubscription * SOAP_FMAC4 soap_get__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription *, const char*, const char*);

#ifndef soap_read__wsnt__PauseSubscription
#define soap_read__wsnt__PauseSubscription(soap, data) ( ((data) ? (soap_default__wsnt__PauseSubscription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__PauseSubscription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__PauseSubscription
#define soap_GET__wsnt__PauseSubscription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__PauseSubscription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__PauseSubscription
#define soap_POST_recv__wsnt__PauseSubscription(soap, data) ( soap_read__wsnt__PauseSubscription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnsubscribeResponse_DEFINED
#define SOAP_TYPE__wsnt__UnsubscribeResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnsubscribeResponse(struct soap*, const struct _wsnt__UnsubscribeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnsubscribeResponse(struct soap*, const char*, int, const struct _wsnt__UnsubscribeResponse *, const char*);
SOAP_FMAC3 struct _wsnt__UnsubscribeResponse * SOAP_FMAC4 soap_in__wsnt__UnsubscribeResponse(struct soap*, const char*, struct _wsnt__UnsubscribeResponse *, const char*);

SOAP_FMAC3 struct _wsnt__UnsubscribeResponse * SOAP_FMAC4 soap_new__wsnt__UnsubscribeResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnsubscribeResponse(struct soap*, const struct _wsnt__UnsubscribeResponse *, const char*, const char*);

#ifndef soap_write__wsnt__UnsubscribeResponse
#define soap_write__wsnt__UnsubscribeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnsubscribeResponse(soap, data), 0) || soap_put__wsnt__UnsubscribeResponse(soap, data, "wsnt:UnsubscribeResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnsubscribeResponse
#define soap_PUT__wsnt__UnsubscribeResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsubscribeResponse(soap, data), 0) || soap_put__wsnt__UnsubscribeResponse(soap, data, "wsnt:UnsubscribeResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnsubscribeResponse
#define soap_PATCH__wsnt__UnsubscribeResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsubscribeResponse(soap, data), 0) || soap_put__wsnt__UnsubscribeResponse(soap, data, "wsnt:UnsubscribeResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnsubscribeResponse
#define soap_POST_send__wsnt__UnsubscribeResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsubscribeResponse(soap, data), 0) || soap_put__wsnt__UnsubscribeResponse(soap, data, "wsnt:UnsubscribeResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnsubscribeResponse * SOAP_FMAC4 soap_get__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse *, const char*, const char*);

#ifndef soap_read__wsnt__UnsubscribeResponse
#define soap_read__wsnt__UnsubscribeResponse(soap, data) ( ((data) ? (soap_default__wsnt__UnsubscribeResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnsubscribeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnsubscribeResponse
#define soap_GET__wsnt__UnsubscribeResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnsubscribeResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnsubscribeResponse
#define soap_POST_recv__wsnt__UnsubscribeResponse(soap, data) ( soap_read__wsnt__UnsubscribeResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__Unsubscribe_DEFINED
#define SOAP_TYPE__wsnt__Unsubscribe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__Unsubscribe(struct soap*, const struct _wsnt__Unsubscribe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Unsubscribe(struct soap*, const char*, int, const struct _wsnt__Unsubscribe *, const char*);
SOAP_FMAC3 struct _wsnt__Unsubscribe * SOAP_FMAC4 soap_in__wsnt__Unsubscribe(struct soap*, const char*, struct _wsnt__Unsubscribe *, const char*);

SOAP_FMAC3 struct _wsnt__Unsubscribe * SOAP_FMAC4 soap_new__wsnt__Unsubscribe(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__Unsubscribe(struct soap*, const struct _wsnt__Unsubscribe *, const char*, const char*);

#ifndef soap_write__wsnt__Unsubscribe
#define soap_write__wsnt__Unsubscribe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__Unsubscribe(soap, data), 0) || soap_put__wsnt__Unsubscribe(soap, data, "wsnt:Unsubscribe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__Unsubscribe
#define soap_PUT__wsnt__Unsubscribe(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Unsubscribe(soap, data), 0) || soap_put__wsnt__Unsubscribe(soap, data, "wsnt:Unsubscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__Unsubscribe
#define soap_PATCH__wsnt__Unsubscribe(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Unsubscribe(soap, data), 0) || soap_put__wsnt__Unsubscribe(soap, data, "wsnt:Unsubscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__Unsubscribe
#define soap_POST_send__wsnt__Unsubscribe(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Unsubscribe(soap, data), 0) || soap_put__wsnt__Unsubscribe(soap, data, "wsnt:Unsubscribe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__Unsubscribe * SOAP_FMAC4 soap_get__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe *, const char*, const char*);

#ifndef soap_read__wsnt__Unsubscribe
#define soap_read__wsnt__Unsubscribe(soap, data) ( ((data) ? (soap_default__wsnt__Unsubscribe(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Unsubscribe(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__Unsubscribe
#define soap_GET__wsnt__Unsubscribe(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__Unsubscribe(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__Unsubscribe
#define soap_POST_recv__wsnt__Unsubscribe(soap, data) ( soap_read__wsnt__Unsubscribe(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__RenewResponse_DEFINED
#define SOAP_TYPE__wsnt__RenewResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__RenewResponse(struct soap*, const struct _wsnt__RenewResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__RenewResponse(struct soap*, const char*, int, const struct _wsnt__RenewResponse *, const char*);
SOAP_FMAC3 struct _wsnt__RenewResponse * SOAP_FMAC4 soap_in__wsnt__RenewResponse(struct soap*, const char*, struct _wsnt__RenewResponse *, const char*);

SOAP_FMAC3 struct _wsnt__RenewResponse * SOAP_FMAC4 soap_new__wsnt__RenewResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__RenewResponse(struct soap*, const struct _wsnt__RenewResponse *, const char*, const char*);

#ifndef soap_write__wsnt__RenewResponse
#define soap_write__wsnt__RenewResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__RenewResponse(soap, data), 0) || soap_put__wsnt__RenewResponse(soap, data, "wsnt:RenewResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__RenewResponse
#define soap_PUT__wsnt__RenewResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__RenewResponse(soap, data), 0) || soap_put__wsnt__RenewResponse(soap, data, "wsnt:RenewResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__RenewResponse
#define soap_PATCH__wsnt__RenewResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__RenewResponse(soap, data), 0) || soap_put__wsnt__RenewResponse(soap, data, "wsnt:RenewResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__RenewResponse
#define soap_POST_send__wsnt__RenewResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__RenewResponse(soap, data), 0) || soap_put__wsnt__RenewResponse(soap, data, "wsnt:RenewResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__RenewResponse * SOAP_FMAC4 soap_get__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse *, const char*, const char*);

#ifndef soap_read__wsnt__RenewResponse
#define soap_read__wsnt__RenewResponse(soap, data) ( ((data) ? (soap_default__wsnt__RenewResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__RenewResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__RenewResponse
#define soap_GET__wsnt__RenewResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__RenewResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__RenewResponse
#define soap_POST_recv__wsnt__RenewResponse(soap, data) ( soap_read__wsnt__RenewResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__Renew_DEFINED
#define SOAP_TYPE__wsnt__Renew_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__Renew(struct soap*, struct _wsnt__Renew *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__Renew(struct soap*, const struct _wsnt__Renew *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Renew(struct soap*, const char*, int, const struct _wsnt__Renew *, const char*);
SOAP_FMAC3 struct _wsnt__Renew * SOAP_FMAC4 soap_in__wsnt__Renew(struct soap*, const char*, struct _wsnt__Renew *, const char*);

SOAP_FMAC3 struct _wsnt__Renew * SOAP_FMAC4 soap_new__wsnt__Renew(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__Renew(struct soap*, const struct _wsnt__Renew *, const char*, const char*);

#ifndef soap_write__wsnt__Renew
#define soap_write__wsnt__Renew(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__Renew(soap, data), 0) || soap_put__wsnt__Renew(soap, data, "wsnt:Renew", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__Renew
#define soap_PUT__wsnt__Renew(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Renew(soap, data), 0) || soap_put__wsnt__Renew(soap, data, "wsnt:Renew", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__Renew
#define soap_PATCH__wsnt__Renew(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Renew(soap, data), 0) || soap_put__wsnt__Renew(soap, data, "wsnt:Renew", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__Renew
#define soap_POST_send__wsnt__Renew(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Renew(soap, data), 0) || soap_put__wsnt__Renew(soap, data, "wsnt:Renew", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__Renew * SOAP_FMAC4 soap_get__wsnt__Renew(struct soap*, struct _wsnt__Renew *, const char*, const char*);

#ifndef soap_read__wsnt__Renew
#define soap_read__wsnt__Renew(soap, data) ( ((data) ? (soap_default__wsnt__Renew(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Renew(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__Renew
#define soap_GET__wsnt__Renew(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__Renew(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__Renew
#define soap_POST_recv__wsnt__Renew(soap, data) ( soap_read__wsnt__Renew(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__CreatePullPointResponse_DEFINED
#define SOAP_TYPE__wsnt__CreatePullPointResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__CreatePullPointResponse(struct soap*, const struct _wsnt__CreatePullPointResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__CreatePullPointResponse(struct soap*, const char*, int, const struct _wsnt__CreatePullPointResponse *, const char*);
SOAP_FMAC3 struct _wsnt__CreatePullPointResponse * SOAP_FMAC4 soap_in__wsnt__CreatePullPointResponse(struct soap*, const char*, struct _wsnt__CreatePullPointResponse *, const char*);

SOAP_FMAC3 struct _wsnt__CreatePullPointResponse * SOAP_FMAC4 soap_new__wsnt__CreatePullPointResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__CreatePullPointResponse(struct soap*, const struct _wsnt__CreatePullPointResponse *, const char*, const char*);

#ifndef soap_write__wsnt__CreatePullPointResponse
#define soap_write__wsnt__CreatePullPointResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__CreatePullPointResponse(soap, data), 0) || soap_put__wsnt__CreatePullPointResponse(soap, data, "wsnt:CreatePullPointResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__CreatePullPointResponse
#define soap_PUT__wsnt__CreatePullPointResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__CreatePullPointResponse(soap, data), 0) || soap_put__wsnt__CreatePullPointResponse(soap, data, "wsnt:CreatePullPointResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__CreatePullPointResponse
#define soap_PATCH__wsnt__CreatePullPointResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__CreatePullPointResponse(soap, data), 0) || soap_put__wsnt__CreatePullPointResponse(soap, data, "wsnt:CreatePullPointResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__CreatePullPointResponse
#define soap_POST_send__wsnt__CreatePullPointResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__CreatePullPointResponse(soap, data), 0) || soap_put__wsnt__CreatePullPointResponse(soap, data, "wsnt:CreatePullPointResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__CreatePullPointResponse * SOAP_FMAC4 soap_get__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse *, const char*, const char*);

#ifndef soap_read__wsnt__CreatePullPointResponse
#define soap_read__wsnt__CreatePullPointResponse(soap, data) ( ((data) ? (soap_default__wsnt__CreatePullPointResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__CreatePullPointResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__CreatePullPointResponse
#define soap_GET__wsnt__CreatePullPointResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__CreatePullPointResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__CreatePullPointResponse
#define soap_POST_recv__wsnt__CreatePullPointResponse(soap, data) ( soap_read__wsnt__CreatePullPointResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__CreatePullPoint_DEFINED
#define SOAP_TYPE__wsnt__CreatePullPoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__CreatePullPoint(struct soap*, const struct _wsnt__CreatePullPoint *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__CreatePullPoint(struct soap*, const char*, int, const struct _wsnt__CreatePullPoint *, const char*);
SOAP_FMAC3 struct _wsnt__CreatePullPoint * SOAP_FMAC4 soap_in__wsnt__CreatePullPoint(struct soap*, const char*, struct _wsnt__CreatePullPoint *, const char*);

SOAP_FMAC3 struct _wsnt__CreatePullPoint * SOAP_FMAC4 soap_new__wsnt__CreatePullPoint(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__CreatePullPoint(struct soap*, const struct _wsnt__CreatePullPoint *, const char*, const char*);

#ifndef soap_write__wsnt__CreatePullPoint
#define soap_write__wsnt__CreatePullPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__CreatePullPoint(soap, data), 0) || soap_put__wsnt__CreatePullPoint(soap, data, "wsnt:CreatePullPoint", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__CreatePullPoint
#define soap_PUT__wsnt__CreatePullPoint(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__CreatePullPoint(soap, data), 0) || soap_put__wsnt__CreatePullPoint(soap, data, "wsnt:CreatePullPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__CreatePullPoint
#define soap_PATCH__wsnt__CreatePullPoint(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__CreatePullPoint(soap, data), 0) || soap_put__wsnt__CreatePullPoint(soap, data, "wsnt:CreatePullPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__CreatePullPoint
#define soap_POST_send__wsnt__CreatePullPoint(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__CreatePullPoint(soap, data), 0) || soap_put__wsnt__CreatePullPoint(soap, data, "wsnt:CreatePullPoint", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__CreatePullPoint * SOAP_FMAC4 soap_get__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint *, const char*, const char*);

#ifndef soap_read__wsnt__CreatePullPoint
#define soap_read__wsnt__CreatePullPoint(soap, data) ( ((data) ? (soap_default__wsnt__CreatePullPoint(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__CreatePullPoint(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__CreatePullPoint
#define soap_GET__wsnt__CreatePullPoint(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__CreatePullPoint(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__CreatePullPoint
#define soap_POST_recv__wsnt__CreatePullPoint(soap, data) ( soap_read__wsnt__CreatePullPoint(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__DestroyPullPointResponse_DEFINED
#define SOAP_TYPE__wsnt__DestroyPullPointResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__DestroyPullPointResponse(struct soap*, const struct _wsnt__DestroyPullPointResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__DestroyPullPointResponse(struct soap*, const char*, int, const struct _wsnt__DestroyPullPointResponse *, const char*);
SOAP_FMAC3 struct _wsnt__DestroyPullPointResponse * SOAP_FMAC4 soap_in__wsnt__DestroyPullPointResponse(struct soap*, const char*, struct _wsnt__DestroyPullPointResponse *, const char*);

SOAP_FMAC3 struct _wsnt__DestroyPullPointResponse * SOAP_FMAC4 soap_new__wsnt__DestroyPullPointResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__DestroyPullPointResponse(struct soap*, const struct _wsnt__DestroyPullPointResponse *, const char*, const char*);

#ifndef soap_write__wsnt__DestroyPullPointResponse
#define soap_write__wsnt__DestroyPullPointResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__DestroyPullPointResponse(soap, data), 0) || soap_put__wsnt__DestroyPullPointResponse(soap, data, "wsnt:DestroyPullPointResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__DestroyPullPointResponse
#define soap_PUT__wsnt__DestroyPullPointResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__DestroyPullPointResponse(soap, data), 0) || soap_put__wsnt__DestroyPullPointResponse(soap, data, "wsnt:DestroyPullPointResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__DestroyPullPointResponse
#define soap_PATCH__wsnt__DestroyPullPointResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__DestroyPullPointResponse(soap, data), 0) || soap_put__wsnt__DestroyPullPointResponse(soap, data, "wsnt:DestroyPullPointResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__DestroyPullPointResponse
#define soap_POST_send__wsnt__DestroyPullPointResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__DestroyPullPointResponse(soap, data), 0) || soap_put__wsnt__DestroyPullPointResponse(soap, data, "wsnt:DestroyPullPointResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__DestroyPullPointResponse * SOAP_FMAC4 soap_get__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse *, const char*, const char*);

#ifndef soap_read__wsnt__DestroyPullPointResponse
#define soap_read__wsnt__DestroyPullPointResponse(soap, data) ( ((data) ? (soap_default__wsnt__DestroyPullPointResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__DestroyPullPointResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__DestroyPullPointResponse
#define soap_GET__wsnt__DestroyPullPointResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__DestroyPullPointResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__DestroyPullPointResponse
#define soap_POST_recv__wsnt__DestroyPullPointResponse(soap, data) ( soap_read__wsnt__DestroyPullPointResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__DestroyPullPoint_DEFINED
#define SOAP_TYPE__wsnt__DestroyPullPoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__DestroyPullPoint(struct soap*, const struct _wsnt__DestroyPullPoint *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__DestroyPullPoint(struct soap*, const char*, int, const struct _wsnt__DestroyPullPoint *, const char*);
SOAP_FMAC3 struct _wsnt__DestroyPullPoint * SOAP_FMAC4 soap_in__wsnt__DestroyPullPoint(struct soap*, const char*, struct _wsnt__DestroyPullPoint *, const char*);

SOAP_FMAC3 struct _wsnt__DestroyPullPoint * SOAP_FMAC4 soap_new__wsnt__DestroyPullPoint(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__DestroyPullPoint(struct soap*, const struct _wsnt__DestroyPullPoint *, const char*, const char*);

#ifndef soap_write__wsnt__DestroyPullPoint
#define soap_write__wsnt__DestroyPullPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__DestroyPullPoint(soap, data), 0) || soap_put__wsnt__DestroyPullPoint(soap, data, "wsnt:DestroyPullPoint", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__DestroyPullPoint
#define soap_PUT__wsnt__DestroyPullPoint(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__DestroyPullPoint(soap, data), 0) || soap_put__wsnt__DestroyPullPoint(soap, data, "wsnt:DestroyPullPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__DestroyPullPoint
#define soap_PATCH__wsnt__DestroyPullPoint(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__DestroyPullPoint(soap, data), 0) || soap_put__wsnt__DestroyPullPoint(soap, data, "wsnt:DestroyPullPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__DestroyPullPoint
#define soap_POST_send__wsnt__DestroyPullPoint(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__DestroyPullPoint(soap, data), 0) || soap_put__wsnt__DestroyPullPoint(soap, data, "wsnt:DestroyPullPoint", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__DestroyPullPoint * SOAP_FMAC4 soap_get__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint *, const char*, const char*);

#ifndef soap_read__wsnt__DestroyPullPoint
#define soap_read__wsnt__DestroyPullPoint(soap, data) ( ((data) ? (soap_default__wsnt__DestroyPullPoint(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__DestroyPullPoint(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__DestroyPullPoint
#define soap_GET__wsnt__DestroyPullPoint(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__DestroyPullPoint(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__DestroyPullPoint
#define soap_POST_recv__wsnt__DestroyPullPoint(soap, data) ( soap_read__wsnt__DestroyPullPoint(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__GetMessagesResponse_DEFINED
#define SOAP_TYPE__wsnt__GetMessagesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__GetMessagesResponse(struct soap*, const struct _wsnt__GetMessagesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetMessagesResponse(struct soap*, const char*, int, const struct _wsnt__GetMessagesResponse *, const char*);
SOAP_FMAC3 struct _wsnt__GetMessagesResponse * SOAP_FMAC4 soap_in__wsnt__GetMessagesResponse(struct soap*, const char*, struct _wsnt__GetMessagesResponse *, const char*);

SOAP_FMAC3 struct _wsnt__GetMessagesResponse * SOAP_FMAC4 soap_new__wsnt__GetMessagesResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__GetMessagesResponse(struct soap*, const struct _wsnt__GetMessagesResponse *, const char*, const char*);

#ifndef soap_write__wsnt__GetMessagesResponse
#define soap_write__wsnt__GetMessagesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__GetMessagesResponse(soap, data), 0) || soap_put__wsnt__GetMessagesResponse(soap, data, "wsnt:GetMessagesResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__GetMessagesResponse
#define soap_PUT__wsnt__GetMessagesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetMessagesResponse(soap, data), 0) || soap_put__wsnt__GetMessagesResponse(soap, data, "wsnt:GetMessagesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__GetMessagesResponse
#define soap_PATCH__wsnt__GetMessagesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetMessagesResponse(soap, data), 0) || soap_put__wsnt__GetMessagesResponse(soap, data, "wsnt:GetMessagesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__GetMessagesResponse
#define soap_POST_send__wsnt__GetMessagesResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetMessagesResponse(soap, data), 0) || soap_put__wsnt__GetMessagesResponse(soap, data, "wsnt:GetMessagesResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__GetMessagesResponse * SOAP_FMAC4 soap_get__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse *, const char*, const char*);

#ifndef soap_read__wsnt__GetMessagesResponse
#define soap_read__wsnt__GetMessagesResponse(soap, data) ( ((data) ? (soap_default__wsnt__GetMessagesResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__GetMessagesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__GetMessagesResponse
#define soap_GET__wsnt__GetMessagesResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__GetMessagesResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__GetMessagesResponse
#define soap_POST_recv__wsnt__GetMessagesResponse(soap, data) ( soap_read__wsnt__GetMessagesResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__GetMessages_DEFINED
#define SOAP_TYPE__wsnt__GetMessages_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__GetMessages(struct soap*, const struct _wsnt__GetMessages *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetMessages(struct soap*, const char*, int, const struct _wsnt__GetMessages *, const char*);
SOAP_FMAC3 struct _wsnt__GetMessages * SOAP_FMAC4 soap_in__wsnt__GetMessages(struct soap*, const char*, struct _wsnt__GetMessages *, const char*);

SOAP_FMAC3 struct _wsnt__GetMessages * SOAP_FMAC4 soap_new__wsnt__GetMessages(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__GetMessages(struct soap*, const struct _wsnt__GetMessages *, const char*, const char*);

#ifndef soap_write__wsnt__GetMessages
#define soap_write__wsnt__GetMessages(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__GetMessages(soap, data), 0) || soap_put__wsnt__GetMessages(soap, data, "wsnt:GetMessages", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__GetMessages
#define soap_PUT__wsnt__GetMessages(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetMessages(soap, data), 0) || soap_put__wsnt__GetMessages(soap, data, "wsnt:GetMessages", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__GetMessages
#define soap_PATCH__wsnt__GetMessages(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetMessages(soap, data), 0) || soap_put__wsnt__GetMessages(soap, data, "wsnt:GetMessages", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__GetMessages
#define soap_POST_send__wsnt__GetMessages(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetMessages(soap, data), 0) || soap_put__wsnt__GetMessages(soap, data, "wsnt:GetMessages", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__GetMessages * SOAP_FMAC4 soap_get__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages *, const char*, const char*);

#ifndef soap_read__wsnt__GetMessages
#define soap_read__wsnt__GetMessages(soap, data) ( ((data) ? (soap_default__wsnt__GetMessages(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__GetMessages(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__GetMessages
#define soap_GET__wsnt__GetMessages(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__GetMessages(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__GetMessages
#define soap_POST_recv__wsnt__GetMessages(soap, data) ( soap_read__wsnt__GetMessages(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__GetCurrentMessageResponse_DEFINED
#define SOAP_TYPE__wsnt__GetCurrentMessageResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__GetCurrentMessageResponse(struct soap*, const struct _wsnt__GetCurrentMessageResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetCurrentMessageResponse(struct soap*, const char*, int, const struct _wsnt__GetCurrentMessageResponse *, const char*);
SOAP_FMAC3 struct _wsnt__GetCurrentMessageResponse * SOAP_FMAC4 soap_in__wsnt__GetCurrentMessageResponse(struct soap*, const char*, struct _wsnt__GetCurrentMessageResponse *, const char*);

SOAP_FMAC3 struct _wsnt__GetCurrentMessageResponse * SOAP_FMAC4 soap_new__wsnt__GetCurrentMessageResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__GetCurrentMessageResponse(struct soap*, const struct _wsnt__GetCurrentMessageResponse *, const char*, const char*);

#ifndef soap_write__wsnt__GetCurrentMessageResponse
#define soap_write__wsnt__GetCurrentMessageResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__GetCurrentMessageResponse(soap, data), 0) || soap_put__wsnt__GetCurrentMessageResponse(soap, data, "wsnt:GetCurrentMessageResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__GetCurrentMessageResponse
#define soap_PUT__wsnt__GetCurrentMessageResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetCurrentMessageResponse(soap, data), 0) || soap_put__wsnt__GetCurrentMessageResponse(soap, data, "wsnt:GetCurrentMessageResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__GetCurrentMessageResponse
#define soap_PATCH__wsnt__GetCurrentMessageResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetCurrentMessageResponse(soap, data), 0) || soap_put__wsnt__GetCurrentMessageResponse(soap, data, "wsnt:GetCurrentMessageResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__GetCurrentMessageResponse
#define soap_POST_send__wsnt__GetCurrentMessageResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetCurrentMessageResponse(soap, data), 0) || soap_put__wsnt__GetCurrentMessageResponse(soap, data, "wsnt:GetCurrentMessageResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__GetCurrentMessageResponse * SOAP_FMAC4 soap_get__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse *, const char*, const char*);

#ifndef soap_read__wsnt__GetCurrentMessageResponse
#define soap_read__wsnt__GetCurrentMessageResponse(soap, data) ( ((data) ? (soap_default__wsnt__GetCurrentMessageResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__GetCurrentMessageResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__GetCurrentMessageResponse
#define soap_GET__wsnt__GetCurrentMessageResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__GetCurrentMessageResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__GetCurrentMessageResponse
#define soap_POST_recv__wsnt__GetCurrentMessageResponse(soap, data) ( soap_read__wsnt__GetCurrentMessageResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__GetCurrentMessage_DEFINED
#define SOAP_TYPE__wsnt__GetCurrentMessage_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__GetCurrentMessage(struct soap*, const struct _wsnt__GetCurrentMessage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetCurrentMessage(struct soap*, const char*, int, const struct _wsnt__GetCurrentMessage *, const char*);
SOAP_FMAC3 struct _wsnt__GetCurrentMessage * SOAP_FMAC4 soap_in__wsnt__GetCurrentMessage(struct soap*, const char*, struct _wsnt__GetCurrentMessage *, const char*);

SOAP_FMAC3 struct _wsnt__GetCurrentMessage * SOAP_FMAC4 soap_new__wsnt__GetCurrentMessage(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__GetCurrentMessage(struct soap*, const struct _wsnt__GetCurrentMessage *, const char*, const char*);

#ifndef soap_write__wsnt__GetCurrentMessage
#define soap_write__wsnt__GetCurrentMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__GetCurrentMessage(soap, data), 0) || soap_put__wsnt__GetCurrentMessage(soap, data, "wsnt:GetCurrentMessage", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__GetCurrentMessage
#define soap_PUT__wsnt__GetCurrentMessage(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetCurrentMessage(soap, data), 0) || soap_put__wsnt__GetCurrentMessage(soap, data, "wsnt:GetCurrentMessage", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__GetCurrentMessage
#define soap_PATCH__wsnt__GetCurrentMessage(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetCurrentMessage(soap, data), 0) || soap_put__wsnt__GetCurrentMessage(soap, data, "wsnt:GetCurrentMessage", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__GetCurrentMessage
#define soap_POST_send__wsnt__GetCurrentMessage(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetCurrentMessage(soap, data), 0) || soap_put__wsnt__GetCurrentMessage(soap, data, "wsnt:GetCurrentMessage", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__GetCurrentMessage * SOAP_FMAC4 soap_get__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage *, const char*, const char*);

#ifndef soap_read__wsnt__GetCurrentMessage
#define soap_read__wsnt__GetCurrentMessage(soap, data) ( ((data) ? (soap_default__wsnt__GetCurrentMessage(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__GetCurrentMessage(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__GetCurrentMessage
#define soap_GET__wsnt__GetCurrentMessage(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__GetCurrentMessage(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__GetCurrentMessage
#define soap_POST_recv__wsnt__GetCurrentMessage(soap, data) ( soap_read__wsnt__GetCurrentMessage(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__SubscribeResponse_DEFINED
#define SOAP_TYPE__wsnt__SubscribeResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__SubscribeResponse(struct soap*, const struct _wsnt__SubscribeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscribeResponse(struct soap*, const char*, int, const struct _wsnt__SubscribeResponse *, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeResponse * SOAP_FMAC4 soap_in__wsnt__SubscribeResponse(struct soap*, const char*, struct _wsnt__SubscribeResponse *, const char*);

SOAP_FMAC3 struct _wsnt__SubscribeResponse * SOAP_FMAC4 soap_new__wsnt__SubscribeResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__SubscribeResponse(struct soap*, const struct _wsnt__SubscribeResponse *, const char*, const char*);

#ifndef soap_write__wsnt__SubscribeResponse
#define soap_write__wsnt__SubscribeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__SubscribeResponse(soap, data), 0) || soap_put__wsnt__SubscribeResponse(soap, data, "wsnt:SubscribeResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__SubscribeResponse
#define soap_PUT__wsnt__SubscribeResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeResponse(soap, data), 0) || soap_put__wsnt__SubscribeResponse(soap, data, "wsnt:SubscribeResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__SubscribeResponse
#define soap_PATCH__wsnt__SubscribeResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeResponse(soap, data), 0) || soap_put__wsnt__SubscribeResponse(soap, data, "wsnt:SubscribeResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__SubscribeResponse
#define soap_POST_send__wsnt__SubscribeResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeResponse(soap, data), 0) || soap_put__wsnt__SubscribeResponse(soap, data, "wsnt:SubscribeResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__SubscribeResponse * SOAP_FMAC4 soap_get__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse *, const char*, const char*);

#ifndef soap_read__wsnt__SubscribeResponse
#define soap_read__wsnt__SubscribeResponse(soap, data) ( ((data) ? (soap_default__wsnt__SubscribeResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__SubscribeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__SubscribeResponse
#define soap_GET__wsnt__SubscribeResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__SubscribeResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__SubscribeResponse
#define soap_POST_recv__wsnt__SubscribeResponse(soap, data) ( soap_read__wsnt__SubscribeResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__Subscribe_SubscriptionPolicy_DEFINED
#define SOAP_TYPE__wsnt__Subscribe_SubscriptionPolicy_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__Subscribe_SubscriptionPolicy(struct soap*, struct _wsnt__Subscribe_SubscriptionPolicy *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__Subscribe_SubscriptionPolicy(struct soap*, const struct _wsnt__Subscribe_SubscriptionPolicy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char*, int, const struct _wsnt__Subscribe_SubscriptionPolicy *, const char*);
SOAP_FMAC3 struct _wsnt__Subscribe_SubscriptionPolicy * SOAP_FMAC4 soap_in__wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char*, struct _wsnt__Subscribe_SubscriptionPolicy *, const char*);

SOAP_FMAC3 struct _wsnt__Subscribe_SubscriptionPolicy * SOAP_FMAC4 soap_new__wsnt__Subscribe_SubscriptionPolicy(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__Subscribe_SubscriptionPolicy(struct soap*, const struct _wsnt__Subscribe_SubscriptionPolicy *, const char*, const char*);

#ifndef soap_write__wsnt__Subscribe_SubscriptionPolicy
#define soap_write__wsnt__Subscribe_SubscriptionPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__Subscribe_SubscriptionPolicy(soap, data), 0) || soap_put__wsnt__Subscribe_SubscriptionPolicy(soap, data, "wsnt:Subscribe-SubscriptionPolicy", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__Subscribe_SubscriptionPolicy
#define soap_PUT__wsnt__Subscribe_SubscriptionPolicy(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Subscribe_SubscriptionPolicy(soap, data), 0) || soap_put__wsnt__Subscribe_SubscriptionPolicy(soap, data, "wsnt:Subscribe-SubscriptionPolicy", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__Subscribe_SubscriptionPolicy
#define soap_PATCH__wsnt__Subscribe_SubscriptionPolicy(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Subscribe_SubscriptionPolicy(soap, data), 0) || soap_put__wsnt__Subscribe_SubscriptionPolicy(soap, data, "wsnt:Subscribe-SubscriptionPolicy", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__Subscribe_SubscriptionPolicy
#define soap_POST_send__wsnt__Subscribe_SubscriptionPolicy(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Subscribe_SubscriptionPolicy(soap, data), 0) || soap_put__wsnt__Subscribe_SubscriptionPolicy(soap, data, "wsnt:Subscribe-SubscriptionPolicy", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__Subscribe_SubscriptionPolicy * SOAP_FMAC4 soap_get__wsnt__Subscribe_SubscriptionPolicy(struct soap*, struct _wsnt__Subscribe_SubscriptionPolicy *, const char*, const char*);

#ifndef soap_read__wsnt__Subscribe_SubscriptionPolicy
#define soap_read__wsnt__Subscribe_SubscriptionPolicy(soap, data) ( ((data) ? (soap_default__wsnt__Subscribe_SubscriptionPolicy(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Subscribe_SubscriptionPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__Subscribe_SubscriptionPolicy
#define soap_GET__wsnt__Subscribe_SubscriptionPolicy(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__Subscribe_SubscriptionPolicy(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__Subscribe_SubscriptionPolicy
#define soap_POST_recv__wsnt__Subscribe_SubscriptionPolicy(soap, data) ( soap_read__wsnt__Subscribe_SubscriptionPolicy(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__Subscribe_DEFINED
#define SOAP_TYPE__wsnt__Subscribe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__Subscribe(struct soap*, const struct _wsnt__Subscribe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Subscribe(struct soap*, const char*, int, const struct _wsnt__Subscribe *, const char*);
SOAP_FMAC3 struct _wsnt__Subscribe * SOAP_FMAC4 soap_in__wsnt__Subscribe(struct soap*, const char*, struct _wsnt__Subscribe *, const char*);

SOAP_FMAC3 struct _wsnt__Subscribe * SOAP_FMAC4 soap_new__wsnt__Subscribe(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__Subscribe(struct soap*, const struct _wsnt__Subscribe *, const char*, const char*);

#ifndef soap_write__wsnt__Subscribe
#define soap_write__wsnt__Subscribe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__Subscribe(soap, data), 0) || soap_put__wsnt__Subscribe(soap, data, "wsnt:Subscribe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__Subscribe
#define soap_PUT__wsnt__Subscribe(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Subscribe(soap, data), 0) || soap_put__wsnt__Subscribe(soap, data, "wsnt:Subscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__Subscribe
#define soap_PATCH__wsnt__Subscribe(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Subscribe(soap, data), 0) || soap_put__wsnt__Subscribe(soap, data, "wsnt:Subscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__Subscribe
#define soap_POST_send__wsnt__Subscribe(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Subscribe(soap, data), 0) || soap_put__wsnt__Subscribe(soap, data, "wsnt:Subscribe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__Subscribe * SOAP_FMAC4 soap_get__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe *, const char*, const char*);

#ifndef soap_read__wsnt__Subscribe
#define soap_read__wsnt__Subscribe(soap, data) ( ((data) ? (soap_default__wsnt__Subscribe(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Subscribe(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__Subscribe
#define soap_GET__wsnt__Subscribe(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__Subscribe(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__Subscribe
#define soap_POST_recv__wsnt__Subscribe(soap, data) ( soap_read__wsnt__Subscribe(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UseRaw_DEFINED
#define SOAP_TYPE__wsnt__UseRaw_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UseRaw(struct soap*, const struct _wsnt__UseRaw *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UseRaw(struct soap*, const char*, int, const struct _wsnt__UseRaw *, const char*);
SOAP_FMAC3 struct _wsnt__UseRaw * SOAP_FMAC4 soap_in__wsnt__UseRaw(struct soap*, const char*, struct _wsnt__UseRaw *, const char*);

SOAP_FMAC3 struct _wsnt__UseRaw * SOAP_FMAC4 soap_new__wsnt__UseRaw(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UseRaw(struct soap*, const struct _wsnt__UseRaw *, const char*, const char*);

#ifndef soap_write__wsnt__UseRaw
#define soap_write__wsnt__UseRaw(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UseRaw(soap, data), 0) || soap_put__wsnt__UseRaw(soap, data, "wsnt:UseRaw", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UseRaw
#define soap_PUT__wsnt__UseRaw(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UseRaw(soap, data), 0) || soap_put__wsnt__UseRaw(soap, data, "wsnt:UseRaw", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UseRaw
#define soap_PATCH__wsnt__UseRaw(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UseRaw(soap, data), 0) || soap_put__wsnt__UseRaw(soap, data, "wsnt:UseRaw", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UseRaw
#define soap_POST_send__wsnt__UseRaw(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UseRaw(soap, data), 0) || soap_put__wsnt__UseRaw(soap, data, "wsnt:UseRaw", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UseRaw * SOAP_FMAC4 soap_get__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw *, const char*, const char*);

#ifndef soap_read__wsnt__UseRaw
#define soap_read__wsnt__UseRaw(soap, data) ( ((data) ? (soap_default__wsnt__UseRaw(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UseRaw(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UseRaw
#define soap_GET__wsnt__UseRaw(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UseRaw(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UseRaw
#define soap_POST_recv__wsnt__UseRaw(soap, data) ( soap_read__wsnt__UseRaw(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__Notify_DEFINED
#define SOAP_TYPE__wsnt__Notify_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__Notify(struct soap*, struct _wsnt__Notify *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__Notify(struct soap*, const struct _wsnt__Notify *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Notify(struct soap*, const char*, int, const struct _wsnt__Notify *, const char*);
SOAP_FMAC3 struct _wsnt__Notify * SOAP_FMAC4 soap_in__wsnt__Notify(struct soap*, const char*, struct _wsnt__Notify *, const char*);

SOAP_FMAC3 struct _wsnt__Notify * SOAP_FMAC4 soap_new__wsnt__Notify(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__Notify(struct soap*, const struct _wsnt__Notify *, const char*, const char*);

#ifndef soap_write__wsnt__Notify
#define soap_write__wsnt__Notify(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__Notify(soap, data), 0) || soap_put__wsnt__Notify(soap, data, "wsnt:Notify", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__Notify
#define soap_PUT__wsnt__Notify(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Notify(soap, data), 0) || soap_put__wsnt__Notify(soap, data, "wsnt:Notify", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__Notify
#define soap_PATCH__wsnt__Notify(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Notify(soap, data), 0) || soap_put__wsnt__Notify(soap, data, "wsnt:Notify", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__Notify
#define soap_POST_send__wsnt__Notify(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Notify(soap, data), 0) || soap_put__wsnt__Notify(soap, data, "wsnt:Notify", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__Notify * SOAP_FMAC4 soap_get__wsnt__Notify(struct soap*, struct _wsnt__Notify *, const char*, const char*);

#ifndef soap_read__wsnt__Notify
#define soap_read__wsnt__Notify(soap, data) ( ((data) ? (soap_default__wsnt__Notify(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Notify(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__Notify
#define soap_GET__wsnt__Notify(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__Notify(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__Notify
#define soap_POST_recv__wsnt__Notify(soap, data) ( soap_read__wsnt__Notify(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__SubscriptionManagerRP_DEFINED
#define SOAP_TYPE__wsnt__SubscriptionManagerRP_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__SubscriptionManagerRP(struct soap*, const struct _wsnt__SubscriptionManagerRP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscriptionManagerRP(struct soap*, const char*, int, const struct _wsnt__SubscriptionManagerRP *, const char*);
SOAP_FMAC3 struct _wsnt__SubscriptionManagerRP * SOAP_FMAC4 soap_in__wsnt__SubscriptionManagerRP(struct soap*, const char*, struct _wsnt__SubscriptionManagerRP *, const char*);

SOAP_FMAC3 struct _wsnt__SubscriptionManagerRP * SOAP_FMAC4 soap_new__wsnt__SubscriptionManagerRP(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__SubscriptionManagerRP(struct soap*, const struct _wsnt__SubscriptionManagerRP *, const char*, const char*);

#ifndef soap_write__wsnt__SubscriptionManagerRP
#define soap_write__wsnt__SubscriptionManagerRP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__SubscriptionManagerRP(soap, data), 0) || soap_put__wsnt__SubscriptionManagerRP(soap, data, "wsnt:SubscriptionManagerRP", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__SubscriptionManagerRP
#define soap_PUT__wsnt__SubscriptionManagerRP(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscriptionManagerRP(soap, data), 0) || soap_put__wsnt__SubscriptionManagerRP(soap, data, "wsnt:SubscriptionManagerRP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__SubscriptionManagerRP
#define soap_PATCH__wsnt__SubscriptionManagerRP(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscriptionManagerRP(soap, data), 0) || soap_put__wsnt__SubscriptionManagerRP(soap, data, "wsnt:SubscriptionManagerRP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__SubscriptionManagerRP
#define soap_POST_send__wsnt__SubscriptionManagerRP(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscriptionManagerRP(soap, data), 0) || soap_put__wsnt__SubscriptionManagerRP(soap, data, "wsnt:SubscriptionManagerRP", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__SubscriptionManagerRP * SOAP_FMAC4 soap_get__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP *, const char*, const char*);

#ifndef soap_read__wsnt__SubscriptionManagerRP
#define soap_read__wsnt__SubscriptionManagerRP(soap, data) ( ((data) ? (soap_default__wsnt__SubscriptionManagerRP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__SubscriptionManagerRP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__SubscriptionManagerRP
#define soap_GET__wsnt__SubscriptionManagerRP(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__SubscriptionManagerRP(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__SubscriptionManagerRP
#define soap_POST_recv__wsnt__SubscriptionManagerRP(soap, data) ( soap_read__wsnt__SubscriptionManagerRP(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NotificationProducerRP_DEFINED
#define SOAP_TYPE__wsnt__NotificationProducerRP_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NotificationProducerRP(struct soap*, const struct _wsnt__NotificationProducerRP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotificationProducerRP(struct soap*, const char*, int, const struct _wsnt__NotificationProducerRP *, const char*);
SOAP_FMAC3 struct _wsnt__NotificationProducerRP * SOAP_FMAC4 soap_in__wsnt__NotificationProducerRP(struct soap*, const char*, struct _wsnt__NotificationProducerRP *, const char*);

SOAP_FMAC3 struct _wsnt__NotificationProducerRP * SOAP_FMAC4 soap_new__wsnt__NotificationProducerRP(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NotificationProducerRP(struct soap*, const struct _wsnt__NotificationProducerRP *, const char*, const char*);

#ifndef soap_write__wsnt__NotificationProducerRP
#define soap_write__wsnt__NotificationProducerRP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NotificationProducerRP(soap, data), 0) || soap_put__wsnt__NotificationProducerRP(soap, data, "wsnt:NotificationProducerRP", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NotificationProducerRP
#define soap_PUT__wsnt__NotificationProducerRP(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotificationProducerRP(soap, data), 0) || soap_put__wsnt__NotificationProducerRP(soap, data, "wsnt:NotificationProducerRP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NotificationProducerRP
#define soap_PATCH__wsnt__NotificationProducerRP(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotificationProducerRP(soap, data), 0) || soap_put__wsnt__NotificationProducerRP(soap, data, "wsnt:NotificationProducerRP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NotificationProducerRP
#define soap_POST_send__wsnt__NotificationProducerRP(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotificationProducerRP(soap, data), 0) || soap_put__wsnt__NotificationProducerRP(soap, data, "wsnt:NotificationProducerRP", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NotificationProducerRP * SOAP_FMAC4 soap_get__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP *, const char*, const char*);

#ifndef soap_read__wsnt__NotificationProducerRP
#define soap_read__wsnt__NotificationProducerRP(soap, data) ( ((data) ? (soap_default__wsnt__NotificationProducerRP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NotificationProducerRP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NotificationProducerRP
#define soap_GET__wsnt__NotificationProducerRP(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NotificationProducerRP(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NotificationProducerRP
#define soap_POST_recv__wsnt__NotificationProducerRP(soap, data) ( soap_read__wsnt__NotificationProducerRP(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NotificationMessageHolderType_Message_DEFINED
#define SOAP_TYPE__wsnt__NotificationMessageHolderType_Message_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NotificationMessageHolderType_Message(struct soap*, struct _wsnt__NotificationMessageHolderType_Message *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NotificationMessageHolderType_Message(struct soap*, const struct _wsnt__NotificationMessageHolderType_Message *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotificationMessageHolderType_Message(struct soap*, const char*, int, const struct _wsnt__NotificationMessageHolderType_Message *, const char*);
SOAP_FMAC3 struct _wsnt__NotificationMessageHolderType_Message * SOAP_FMAC4 soap_in__wsnt__NotificationMessageHolderType_Message(struct soap*, const char*, struct _wsnt__NotificationMessageHolderType_Message *, const char*);

SOAP_FMAC3 struct _wsnt__NotificationMessageHolderType_Message * SOAP_FMAC4 soap_new__wsnt__NotificationMessageHolderType_Message(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NotificationMessageHolderType_Message(struct soap*, const struct _wsnt__NotificationMessageHolderType_Message *, const char*, const char*);

#ifndef soap_write__wsnt__NotificationMessageHolderType_Message
#define soap_write__wsnt__NotificationMessageHolderType_Message(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NotificationMessageHolderType_Message(soap, data), 0) || soap_put__wsnt__NotificationMessageHolderType_Message(soap, data, "wsnt:NotificationMessageHolderType-Message", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NotificationMessageHolderType_Message
#define soap_PUT__wsnt__NotificationMessageHolderType_Message(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotificationMessageHolderType_Message(soap, data), 0) || soap_put__wsnt__NotificationMessageHolderType_Message(soap, data, "wsnt:NotificationMessageHolderType-Message", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NotificationMessageHolderType_Message
#define soap_PATCH__wsnt__NotificationMessageHolderType_Message(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotificationMessageHolderType_Message(soap, data), 0) || soap_put__wsnt__NotificationMessageHolderType_Message(soap, data, "wsnt:NotificationMessageHolderType-Message", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NotificationMessageHolderType_Message
#define soap_POST_send__wsnt__NotificationMessageHolderType_Message(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotificationMessageHolderType_Message(soap, data), 0) || soap_put__wsnt__NotificationMessageHolderType_Message(soap, data, "wsnt:NotificationMessageHolderType-Message", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NotificationMessageHolderType_Message * SOAP_FMAC4 soap_get__wsnt__NotificationMessageHolderType_Message(struct soap*, struct _wsnt__NotificationMessageHolderType_Message *, const char*, const char*);

#ifndef soap_read__wsnt__NotificationMessageHolderType_Message
#define soap_read__wsnt__NotificationMessageHolderType_Message(soap, data) ( ((data) ? (soap_default__wsnt__NotificationMessageHolderType_Message(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NotificationMessageHolderType_Message(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NotificationMessageHolderType_Message
#define soap_GET__wsnt__NotificationMessageHolderType_Message(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NotificationMessageHolderType_Message(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NotificationMessageHolderType_Message
#define soap_POST_recv__wsnt__NotificationMessageHolderType_Message(soap, data) ( soap_read__wsnt__NotificationMessageHolderType_Message(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__SubscriptionPolicyType_DEFINED
#define SOAP_TYPE_wsnt__SubscriptionPolicyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__SubscriptionPolicyType(struct soap*, struct wsnt__SubscriptionPolicyType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__SubscriptionPolicyType(struct soap*, const struct wsnt__SubscriptionPolicyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__SubscriptionPolicyType(struct soap*, const char*, int, const struct wsnt__SubscriptionPolicyType *, const char*);
SOAP_FMAC3 struct wsnt__SubscriptionPolicyType * SOAP_FMAC4 soap_in_wsnt__SubscriptionPolicyType(struct soap*, const char*, struct wsnt__SubscriptionPolicyType *, const char*);

SOAP_FMAC3 struct wsnt__SubscriptionPolicyType * SOAP_FMAC4 soap_new_wsnt__SubscriptionPolicyType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__SubscriptionPolicyType(struct soap*, const struct wsnt__SubscriptionPolicyType *, const char*, const char*);

#ifndef soap_write_wsnt__SubscriptionPolicyType
#define soap_write_wsnt__SubscriptionPolicyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__SubscriptionPolicyType(soap, data), 0) || soap_put_wsnt__SubscriptionPolicyType(soap, data, "wsnt:SubscriptionPolicyType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__SubscriptionPolicyType
#define soap_PUT_wsnt__SubscriptionPolicyType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__SubscriptionPolicyType(soap, data), 0) || soap_put_wsnt__SubscriptionPolicyType(soap, data, "wsnt:SubscriptionPolicyType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__SubscriptionPolicyType
#define soap_PATCH_wsnt__SubscriptionPolicyType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__SubscriptionPolicyType(soap, data), 0) || soap_put_wsnt__SubscriptionPolicyType(soap, data, "wsnt:SubscriptionPolicyType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__SubscriptionPolicyType
#define soap_POST_send_wsnt__SubscriptionPolicyType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__SubscriptionPolicyType(soap, data), 0) || soap_put_wsnt__SubscriptionPolicyType(soap, data, "wsnt:SubscriptionPolicyType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__SubscriptionPolicyType * SOAP_FMAC4 soap_get_wsnt__SubscriptionPolicyType(struct soap*, struct wsnt__SubscriptionPolicyType *, const char*, const char*);

#ifndef soap_read_wsnt__SubscriptionPolicyType
#define soap_read_wsnt__SubscriptionPolicyType(soap, data) ( ((data) ? (soap_default_wsnt__SubscriptionPolicyType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__SubscriptionPolicyType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__SubscriptionPolicyType
#define soap_GET_wsnt__SubscriptionPolicyType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__SubscriptionPolicyType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__SubscriptionPolicyType
#define soap_POST_recv_wsnt__SubscriptionPolicyType(soap, data) ( soap_read_wsnt__SubscriptionPolicyType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__TopicExpressionType_DEFINED
#define SOAP_TYPE_wsnt__TopicExpressionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__TopicExpressionType(struct soap*, struct wsnt__TopicExpressionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__TopicExpressionType(struct soap*, const struct wsnt__TopicExpressionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__TopicExpressionType(struct soap*, const char*, int, const struct wsnt__TopicExpressionType *, const char*);
SOAP_FMAC3 struct wsnt__TopicExpressionType * SOAP_FMAC4 soap_in_wsnt__TopicExpressionType(struct soap*, const char*, struct wsnt__TopicExpressionType *, const char*);

SOAP_FMAC3 struct wsnt__TopicExpressionType * SOAP_FMAC4 soap_new_wsnt__TopicExpressionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__TopicExpressionType(struct soap*, const struct wsnt__TopicExpressionType *, const char*, const char*);

#ifndef soap_write_wsnt__TopicExpressionType
#define soap_write_wsnt__TopicExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__TopicExpressionType(soap, data), 0) || soap_put_wsnt__TopicExpressionType(soap, data, "wsnt:TopicExpressionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__TopicExpressionType
#define soap_PUT_wsnt__TopicExpressionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicExpressionType(soap, data), 0) || soap_put_wsnt__TopicExpressionType(soap, data, "wsnt:TopicExpressionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__TopicExpressionType
#define soap_PATCH_wsnt__TopicExpressionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicExpressionType(soap, data), 0) || soap_put_wsnt__TopicExpressionType(soap, data, "wsnt:TopicExpressionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__TopicExpressionType
#define soap_POST_send_wsnt__TopicExpressionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicExpressionType(soap, data), 0) || soap_put_wsnt__TopicExpressionType(soap, data, "wsnt:TopicExpressionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__TopicExpressionType * SOAP_FMAC4 soap_get_wsnt__TopicExpressionType(struct soap*, struct wsnt__TopicExpressionType *, const char*, const char*);

#ifndef soap_read_wsnt__TopicExpressionType
#define soap_read_wsnt__TopicExpressionType(soap, data) ( ((data) ? (soap_default_wsnt__TopicExpressionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__TopicExpressionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__TopicExpressionType
#define soap_GET_wsnt__TopicExpressionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__TopicExpressionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__TopicExpressionType
#define soap_POST_recv_wsnt__TopicExpressionType(soap, data) ( soap_read_wsnt__TopicExpressionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__QueryExpressionType_DEFINED
#define SOAP_TYPE_wsnt__QueryExpressionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__QueryExpressionType(struct soap*, struct wsnt__QueryExpressionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__QueryExpressionType(struct soap*, const struct wsnt__QueryExpressionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__QueryExpressionType(struct soap*, const char*, int, const struct wsnt__QueryExpressionType *, const char*);
SOAP_FMAC3 struct wsnt__QueryExpressionType * SOAP_FMAC4 soap_in_wsnt__QueryExpressionType(struct soap*, const char*, struct wsnt__QueryExpressionType *, const char*);

SOAP_FMAC3 struct wsnt__QueryExpressionType * SOAP_FMAC4 soap_new_wsnt__QueryExpressionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__QueryExpressionType(struct soap*, const struct wsnt__QueryExpressionType *, const char*, const char*);

#ifndef soap_write_wsnt__QueryExpressionType
#define soap_write_wsnt__QueryExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__QueryExpressionType(soap, data), 0) || soap_put_wsnt__QueryExpressionType(soap, data, "wsnt:QueryExpressionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__QueryExpressionType
#define soap_PUT_wsnt__QueryExpressionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__QueryExpressionType(soap, data), 0) || soap_put_wsnt__QueryExpressionType(soap, data, "wsnt:QueryExpressionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__QueryExpressionType
#define soap_PATCH_wsnt__QueryExpressionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__QueryExpressionType(soap, data), 0) || soap_put_wsnt__QueryExpressionType(soap, data, "wsnt:QueryExpressionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__QueryExpressionType
#define soap_POST_send_wsnt__QueryExpressionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__QueryExpressionType(soap, data), 0) || soap_put_wsnt__QueryExpressionType(soap, data, "wsnt:QueryExpressionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__QueryExpressionType * SOAP_FMAC4 soap_get_wsnt__QueryExpressionType(struct soap*, struct wsnt__QueryExpressionType *, const char*, const char*);

#ifndef soap_read_wsnt__QueryExpressionType
#define soap_read_wsnt__QueryExpressionType(soap, data) ( ((data) ? (soap_default_wsnt__QueryExpressionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__QueryExpressionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__QueryExpressionType
#define soap_GET_wsnt__QueryExpressionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__QueryExpressionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__QueryExpressionType
#define soap_POST_recv_wsnt__QueryExpressionType(soap, data) ( soap_read_wsnt__QueryExpressionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsrfbf__BaseFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsrfbf__BaseFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsrfbf__BaseFaultType_FaultCause(struct soap*, struct _wsrfbf__BaseFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsrfbf__BaseFaultType_FaultCause(struct soap*, const struct _wsrfbf__BaseFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfbf__BaseFaultType_FaultCause(struct soap*, const char*, int, const struct _wsrfbf__BaseFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_FaultCause * SOAP_FMAC4 soap_in__wsrfbf__BaseFaultType_FaultCause(struct soap*, const char*, struct _wsrfbf__BaseFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsrfbf__BaseFaultType_FaultCause * SOAP_FMAC4 soap_new__wsrfbf__BaseFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsrfbf__BaseFaultType_FaultCause(struct soap*, const struct _wsrfbf__BaseFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsrfbf__BaseFaultType_FaultCause
#define soap_write__wsrfbf__BaseFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsrfbf__BaseFaultType_FaultCause(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_FaultCause(soap, data, "wsrfbf:BaseFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsrfbf__BaseFaultType_FaultCause
#define soap_PUT__wsrfbf__BaseFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_FaultCause(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_FaultCause(soap, data, "wsrfbf:BaseFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsrfbf__BaseFaultType_FaultCause
#define soap_PATCH__wsrfbf__BaseFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_FaultCause(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_FaultCause(soap, data, "wsrfbf:BaseFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsrfbf__BaseFaultType_FaultCause
#define soap_POST_send__wsrfbf__BaseFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_FaultCause(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_FaultCause(soap, data, "wsrfbf:BaseFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsrfbf__BaseFaultType_FaultCause * SOAP_FMAC4 soap_get__wsrfbf__BaseFaultType_FaultCause(struct soap*, struct _wsrfbf__BaseFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsrfbf__BaseFaultType_FaultCause
#define soap_read__wsrfbf__BaseFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsrfbf__BaseFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfbf__BaseFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsrfbf__BaseFaultType_FaultCause
#define soap_GET__wsrfbf__BaseFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsrfbf__BaseFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsrfbf__BaseFaultType_FaultCause
#define soap_POST_recv__wsrfbf__BaseFaultType_FaultCause(soap, data) ( soap_read__wsrfbf__BaseFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsrfbf__BaseFaultType_Description_DEFINED
#define SOAP_TYPE__wsrfbf__BaseFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsrfbf__BaseFaultType_Description(struct soap*, struct _wsrfbf__BaseFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsrfbf__BaseFaultType_Description(struct soap*, const struct _wsrfbf__BaseFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfbf__BaseFaultType_Description(struct soap*, const char*, int, const struct _wsrfbf__BaseFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_Description * SOAP_FMAC4 soap_in__wsrfbf__BaseFaultType_Description(struct soap*, const char*, struct _wsrfbf__BaseFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsrfbf__BaseFaultType_Description * SOAP_FMAC4 soap_new__wsrfbf__BaseFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsrfbf__BaseFaultType_Description(struct soap*, const struct _wsrfbf__BaseFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsrfbf__BaseFaultType_Description
#define soap_write__wsrfbf__BaseFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsrfbf__BaseFaultType_Description(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_Description(soap, data, "wsrfbf:BaseFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsrfbf__BaseFaultType_Description
#define soap_PUT__wsrfbf__BaseFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_Description(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_Description(soap, data, "wsrfbf:BaseFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsrfbf__BaseFaultType_Description
#define soap_PATCH__wsrfbf__BaseFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_Description(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_Description(soap, data, "wsrfbf:BaseFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsrfbf__BaseFaultType_Description
#define soap_POST_send__wsrfbf__BaseFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_Description(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_Description(soap, data, "wsrfbf:BaseFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsrfbf__BaseFaultType_Description * SOAP_FMAC4 soap_get__wsrfbf__BaseFaultType_Description(struct soap*, struct _wsrfbf__BaseFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsrfbf__BaseFaultType_Description
#define soap_read__wsrfbf__BaseFaultType_Description(soap, data) ( ((data) ? (soap_default__wsrfbf__BaseFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfbf__BaseFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsrfbf__BaseFaultType_Description
#define soap_GET__wsrfbf__BaseFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsrfbf__BaseFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsrfbf__BaseFaultType_Description
#define soap_POST_recv__wsrfbf__BaseFaultType_Description(soap, data) ( soap_read__wsrfbf__BaseFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsrfbf__BaseFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsrfbf__BaseFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsrfbf__BaseFaultType_ErrorCode(struct soap*, struct _wsrfbf__BaseFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsrfbf__BaseFaultType_ErrorCode(struct soap*, const struct _wsrfbf__BaseFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsrfbf__BaseFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char*, struct _wsrfbf__BaseFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsrfbf__BaseFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsrfbf__BaseFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsrfbf__BaseFaultType_ErrorCode(struct soap*, const struct _wsrfbf__BaseFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsrfbf__BaseFaultType_ErrorCode
#define soap_write__wsrfbf__BaseFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsrfbf__BaseFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_ErrorCode(soap, data, "wsrfbf:BaseFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsrfbf__BaseFaultType_ErrorCode
#define soap_PUT__wsrfbf__BaseFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_ErrorCode(soap, data, "wsrfbf:BaseFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsrfbf__BaseFaultType_ErrorCode
#define soap_PATCH__wsrfbf__BaseFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_ErrorCode(soap, data, "wsrfbf:BaseFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsrfbf__BaseFaultType_ErrorCode
#define soap_POST_send__wsrfbf__BaseFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_ErrorCode(soap, data, "wsrfbf:BaseFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsrfbf__BaseFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsrfbf__BaseFaultType_ErrorCode(struct soap*, struct _wsrfbf__BaseFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsrfbf__BaseFaultType_ErrorCode
#define soap_read__wsrfbf__BaseFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsrfbf__BaseFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfbf__BaseFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsrfbf__BaseFaultType_ErrorCode
#define soap_GET__wsrfbf__BaseFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsrfbf__BaseFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsrfbf__BaseFaultType_ErrorCode
#define soap_POST_recv__wsrfbf__BaseFaultType_ErrorCode(soap, data) ( soap_read__wsrfbf__BaseFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsrfbf__BaseFaultType_DEFINED
#define SOAP_TYPE_wsrfbf__BaseFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsrfbf__BaseFaultType(struct soap*, struct wsrfbf__BaseFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsrfbf__BaseFaultType(struct soap*, const struct wsrfbf__BaseFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsrfbf__BaseFaultType(struct soap*, const char*, int, const struct wsrfbf__BaseFaultType *, const char*);
SOAP_FMAC3 struct wsrfbf__BaseFaultType * SOAP_FMAC4 soap_in_wsrfbf__BaseFaultType(struct soap*, const char*, struct wsrfbf__BaseFaultType *, const char*);

SOAP_FMAC3 struct wsrfbf__BaseFaultType * SOAP_FMAC4 soap_new_wsrfbf__BaseFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsrfbf__BaseFaultType(struct soap*, const struct wsrfbf__BaseFaultType *, const char*, const char*);

#ifndef soap_write_wsrfbf__BaseFaultType
#define soap_write_wsrfbf__BaseFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsrfbf__BaseFaultType(soap, data), 0) || soap_put_wsrfbf__BaseFaultType(soap, data, "wsrfbf:BaseFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsrfbf__BaseFaultType
#define soap_PUT_wsrfbf__BaseFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsrfbf__BaseFaultType(soap, data), 0) || soap_put_wsrfbf__BaseFaultType(soap, data, "wsrfbf:BaseFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsrfbf__BaseFaultType
#define soap_PATCH_wsrfbf__BaseFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsrfbf__BaseFaultType(soap, data), 0) || soap_put_wsrfbf__BaseFaultType(soap, data, "wsrfbf:BaseFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsrfbf__BaseFaultType
#define soap_POST_send_wsrfbf__BaseFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsrfbf__BaseFaultType(soap, data), 0) || soap_put_wsrfbf__BaseFaultType(soap, data, "wsrfbf:BaseFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsrfbf__BaseFaultType * SOAP_FMAC4 soap_get_wsrfbf__BaseFaultType(struct soap*, struct wsrfbf__BaseFaultType *, const char*, const char*);

#ifndef soap_read_wsrfbf__BaseFaultType
#define soap_read_wsrfbf__BaseFaultType(soap, data) ( ((data) ? (soap_default_wsrfbf__BaseFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsrfbf__BaseFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsrfbf__BaseFaultType
#define soap_GET_wsrfbf__BaseFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsrfbf__BaseFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsrfbf__BaseFaultType
#define soap_POST_recv_wsrfbf__BaseFaultType(soap, data) ( soap_read_wsrfbf__BaseFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__GetEventBrokersResponse_DEFINED
#define SOAP_TYPE__tev__GetEventBrokersResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__GetEventBrokersResponse(struct soap*, struct _tev__GetEventBrokersResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__GetEventBrokersResponse(struct soap*, const struct _tev__GetEventBrokersResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__GetEventBrokersResponse(struct soap*, const char*, int, const struct _tev__GetEventBrokersResponse *, const char*);
SOAP_FMAC3 struct _tev__GetEventBrokersResponse * SOAP_FMAC4 soap_in__tev__GetEventBrokersResponse(struct soap*, const char*, struct _tev__GetEventBrokersResponse *, const char*);

SOAP_FMAC3 struct _tev__GetEventBrokersResponse * SOAP_FMAC4 soap_new__tev__GetEventBrokersResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__GetEventBrokersResponse(struct soap*, const struct _tev__GetEventBrokersResponse *, const char*, const char*);

#ifndef soap_write__tev__GetEventBrokersResponse
#define soap_write__tev__GetEventBrokersResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__GetEventBrokersResponse(soap, data), 0) || soap_put__tev__GetEventBrokersResponse(soap, data, "tev:GetEventBrokersResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__GetEventBrokersResponse
#define soap_PUT__tev__GetEventBrokersResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetEventBrokersResponse(soap, data), 0) || soap_put__tev__GetEventBrokersResponse(soap, data, "tev:GetEventBrokersResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__GetEventBrokersResponse
#define soap_PATCH__tev__GetEventBrokersResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetEventBrokersResponse(soap, data), 0) || soap_put__tev__GetEventBrokersResponse(soap, data, "tev:GetEventBrokersResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__GetEventBrokersResponse
#define soap_POST_send__tev__GetEventBrokersResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetEventBrokersResponse(soap, data), 0) || soap_put__tev__GetEventBrokersResponse(soap, data, "tev:GetEventBrokersResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__GetEventBrokersResponse * SOAP_FMAC4 soap_get__tev__GetEventBrokersResponse(struct soap*, struct _tev__GetEventBrokersResponse *, const char*, const char*);

#ifndef soap_read__tev__GetEventBrokersResponse
#define soap_read__tev__GetEventBrokersResponse(soap, data) ( ((data) ? (soap_default__tev__GetEventBrokersResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__GetEventBrokersResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__GetEventBrokersResponse
#define soap_GET__tev__GetEventBrokersResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__GetEventBrokersResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__GetEventBrokersResponse
#define soap_POST_recv__tev__GetEventBrokersResponse(soap, data) ( soap_read__tev__GetEventBrokersResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__GetEventBrokers_DEFINED
#define SOAP_TYPE__tev__GetEventBrokers_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__GetEventBrokers(struct soap*, struct _tev__GetEventBrokers *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__GetEventBrokers(struct soap*, const struct _tev__GetEventBrokers *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__GetEventBrokers(struct soap*, const char*, int, const struct _tev__GetEventBrokers *, const char*);
SOAP_FMAC3 struct _tev__GetEventBrokers * SOAP_FMAC4 soap_in__tev__GetEventBrokers(struct soap*, const char*, struct _tev__GetEventBrokers *, const char*);

SOAP_FMAC3 struct _tev__GetEventBrokers * SOAP_FMAC4 soap_new__tev__GetEventBrokers(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__GetEventBrokers(struct soap*, const struct _tev__GetEventBrokers *, const char*, const char*);

#ifndef soap_write__tev__GetEventBrokers
#define soap_write__tev__GetEventBrokers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__GetEventBrokers(soap, data), 0) || soap_put__tev__GetEventBrokers(soap, data, "tev:GetEventBrokers", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__GetEventBrokers
#define soap_PUT__tev__GetEventBrokers(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetEventBrokers(soap, data), 0) || soap_put__tev__GetEventBrokers(soap, data, "tev:GetEventBrokers", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__GetEventBrokers
#define soap_PATCH__tev__GetEventBrokers(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetEventBrokers(soap, data), 0) || soap_put__tev__GetEventBrokers(soap, data, "tev:GetEventBrokers", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__GetEventBrokers
#define soap_POST_send__tev__GetEventBrokers(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetEventBrokers(soap, data), 0) || soap_put__tev__GetEventBrokers(soap, data, "tev:GetEventBrokers", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__GetEventBrokers * SOAP_FMAC4 soap_get__tev__GetEventBrokers(struct soap*, struct _tev__GetEventBrokers *, const char*, const char*);

#ifndef soap_read__tev__GetEventBrokers
#define soap_read__tev__GetEventBrokers(soap, data) ( ((data) ? (soap_default__tev__GetEventBrokers(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__GetEventBrokers(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__GetEventBrokers
#define soap_GET__tev__GetEventBrokers(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__GetEventBrokers(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__GetEventBrokers
#define soap_POST_recv__tev__GetEventBrokers(soap, data) ( soap_read__tev__GetEventBrokers(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__DeleteEventBrokerResponse_DEFINED
#define SOAP_TYPE__tev__DeleteEventBrokerResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__DeleteEventBrokerResponse(struct soap*, struct _tev__DeleteEventBrokerResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__DeleteEventBrokerResponse(struct soap*, const struct _tev__DeleteEventBrokerResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__DeleteEventBrokerResponse(struct soap*, const char*, int, const struct _tev__DeleteEventBrokerResponse *, const char*);
SOAP_FMAC3 struct _tev__DeleteEventBrokerResponse * SOAP_FMAC4 soap_in__tev__DeleteEventBrokerResponse(struct soap*, const char*, struct _tev__DeleteEventBrokerResponse *, const char*);

SOAP_FMAC3 struct _tev__DeleteEventBrokerResponse * SOAP_FMAC4 soap_new__tev__DeleteEventBrokerResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__DeleteEventBrokerResponse(struct soap*, const struct _tev__DeleteEventBrokerResponse *, const char*, const char*);

#ifndef soap_write__tev__DeleteEventBrokerResponse
#define soap_write__tev__DeleteEventBrokerResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__DeleteEventBrokerResponse(soap, data), 0) || soap_put__tev__DeleteEventBrokerResponse(soap, data, "tev:DeleteEventBrokerResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__DeleteEventBrokerResponse
#define soap_PUT__tev__DeleteEventBrokerResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__DeleteEventBrokerResponse(soap, data), 0) || soap_put__tev__DeleteEventBrokerResponse(soap, data, "tev:DeleteEventBrokerResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__DeleteEventBrokerResponse
#define soap_PATCH__tev__DeleteEventBrokerResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__DeleteEventBrokerResponse(soap, data), 0) || soap_put__tev__DeleteEventBrokerResponse(soap, data, "tev:DeleteEventBrokerResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__DeleteEventBrokerResponse
#define soap_POST_send__tev__DeleteEventBrokerResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__DeleteEventBrokerResponse(soap, data), 0) || soap_put__tev__DeleteEventBrokerResponse(soap, data, "tev:DeleteEventBrokerResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__DeleteEventBrokerResponse * SOAP_FMAC4 soap_get__tev__DeleteEventBrokerResponse(struct soap*, struct _tev__DeleteEventBrokerResponse *, const char*, const char*);

#ifndef soap_read__tev__DeleteEventBrokerResponse
#define soap_read__tev__DeleteEventBrokerResponse(soap, data) ( ((data) ? (soap_default__tev__DeleteEventBrokerResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__DeleteEventBrokerResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__DeleteEventBrokerResponse
#define soap_GET__tev__DeleteEventBrokerResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__DeleteEventBrokerResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__DeleteEventBrokerResponse
#define soap_POST_recv__tev__DeleteEventBrokerResponse(soap, data) ( soap_read__tev__DeleteEventBrokerResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__DeleteEventBroker_DEFINED
#define SOAP_TYPE__tev__DeleteEventBroker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__DeleteEventBroker(struct soap*, struct _tev__DeleteEventBroker *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__DeleteEventBroker(struct soap*, const struct _tev__DeleteEventBroker *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__DeleteEventBroker(struct soap*, const char*, int, const struct _tev__DeleteEventBroker *, const char*);
SOAP_FMAC3 struct _tev__DeleteEventBroker * SOAP_FMAC4 soap_in__tev__DeleteEventBroker(struct soap*, const char*, struct _tev__DeleteEventBroker *, const char*);

SOAP_FMAC3 struct _tev__DeleteEventBroker * SOAP_FMAC4 soap_new__tev__DeleteEventBroker(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__DeleteEventBroker(struct soap*, const struct _tev__DeleteEventBroker *, const char*, const char*);

#ifndef soap_write__tev__DeleteEventBroker
#define soap_write__tev__DeleteEventBroker(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__DeleteEventBroker(soap, data), 0) || soap_put__tev__DeleteEventBroker(soap, data, "tev:DeleteEventBroker", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__DeleteEventBroker
#define soap_PUT__tev__DeleteEventBroker(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__DeleteEventBroker(soap, data), 0) || soap_put__tev__DeleteEventBroker(soap, data, "tev:DeleteEventBroker", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__DeleteEventBroker
#define soap_PATCH__tev__DeleteEventBroker(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__DeleteEventBroker(soap, data), 0) || soap_put__tev__DeleteEventBroker(soap, data, "tev:DeleteEventBroker", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__DeleteEventBroker
#define soap_POST_send__tev__DeleteEventBroker(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__DeleteEventBroker(soap, data), 0) || soap_put__tev__DeleteEventBroker(soap, data, "tev:DeleteEventBroker", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__DeleteEventBroker * SOAP_FMAC4 soap_get__tev__DeleteEventBroker(struct soap*, struct _tev__DeleteEventBroker *, const char*, const char*);

#ifndef soap_read__tev__DeleteEventBroker
#define soap_read__tev__DeleteEventBroker(soap, data) ( ((data) ? (soap_default__tev__DeleteEventBroker(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__DeleteEventBroker(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__DeleteEventBroker
#define soap_GET__tev__DeleteEventBroker(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__DeleteEventBroker(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__DeleteEventBroker
#define soap_POST_recv__tev__DeleteEventBroker(soap, data) ( soap_read__tev__DeleteEventBroker(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__AddEventBrokerResponse_DEFINED
#define SOAP_TYPE__tev__AddEventBrokerResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__AddEventBrokerResponse(struct soap*, struct _tev__AddEventBrokerResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__AddEventBrokerResponse(struct soap*, const struct _tev__AddEventBrokerResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__AddEventBrokerResponse(struct soap*, const char*, int, const struct _tev__AddEventBrokerResponse *, const char*);
SOAP_FMAC3 struct _tev__AddEventBrokerResponse * SOAP_FMAC4 soap_in__tev__AddEventBrokerResponse(struct soap*, const char*, struct _tev__AddEventBrokerResponse *, const char*);

SOAP_FMAC3 struct _tev__AddEventBrokerResponse * SOAP_FMAC4 soap_new__tev__AddEventBrokerResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__AddEventBrokerResponse(struct soap*, const struct _tev__AddEventBrokerResponse *, const char*, const char*);

#ifndef soap_write__tev__AddEventBrokerResponse
#define soap_write__tev__AddEventBrokerResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__AddEventBrokerResponse(soap, data), 0) || soap_put__tev__AddEventBrokerResponse(soap, data, "tev:AddEventBrokerResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__AddEventBrokerResponse
#define soap_PUT__tev__AddEventBrokerResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__AddEventBrokerResponse(soap, data), 0) || soap_put__tev__AddEventBrokerResponse(soap, data, "tev:AddEventBrokerResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__AddEventBrokerResponse
#define soap_PATCH__tev__AddEventBrokerResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__AddEventBrokerResponse(soap, data), 0) || soap_put__tev__AddEventBrokerResponse(soap, data, "tev:AddEventBrokerResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__AddEventBrokerResponse
#define soap_POST_send__tev__AddEventBrokerResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__AddEventBrokerResponse(soap, data), 0) || soap_put__tev__AddEventBrokerResponse(soap, data, "tev:AddEventBrokerResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__AddEventBrokerResponse * SOAP_FMAC4 soap_get__tev__AddEventBrokerResponse(struct soap*, struct _tev__AddEventBrokerResponse *, const char*, const char*);

#ifndef soap_read__tev__AddEventBrokerResponse
#define soap_read__tev__AddEventBrokerResponse(soap, data) ( ((data) ? (soap_default__tev__AddEventBrokerResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__AddEventBrokerResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__AddEventBrokerResponse
#define soap_GET__tev__AddEventBrokerResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__AddEventBrokerResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__AddEventBrokerResponse
#define soap_POST_recv__tev__AddEventBrokerResponse(soap, data) ( soap_read__tev__AddEventBrokerResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__AddEventBroker_DEFINED
#define SOAP_TYPE__tev__AddEventBroker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__AddEventBroker(struct soap*, struct _tev__AddEventBroker *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__AddEventBroker(struct soap*, const struct _tev__AddEventBroker *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__AddEventBroker(struct soap*, const char*, int, const struct _tev__AddEventBroker *, const char*);
SOAP_FMAC3 struct _tev__AddEventBroker * SOAP_FMAC4 soap_in__tev__AddEventBroker(struct soap*, const char*, struct _tev__AddEventBroker *, const char*);

SOAP_FMAC3 struct _tev__AddEventBroker * SOAP_FMAC4 soap_new__tev__AddEventBroker(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__AddEventBroker(struct soap*, const struct _tev__AddEventBroker *, const char*, const char*);

#ifndef soap_write__tev__AddEventBroker
#define soap_write__tev__AddEventBroker(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__AddEventBroker(soap, data), 0) || soap_put__tev__AddEventBroker(soap, data, "tev:AddEventBroker", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__AddEventBroker
#define soap_PUT__tev__AddEventBroker(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__AddEventBroker(soap, data), 0) || soap_put__tev__AddEventBroker(soap, data, "tev:AddEventBroker", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__AddEventBroker
#define soap_PATCH__tev__AddEventBroker(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__AddEventBroker(soap, data), 0) || soap_put__tev__AddEventBroker(soap, data, "tev:AddEventBroker", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__AddEventBroker
#define soap_POST_send__tev__AddEventBroker(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__AddEventBroker(soap, data), 0) || soap_put__tev__AddEventBroker(soap, data, "tev:AddEventBroker", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__AddEventBroker * SOAP_FMAC4 soap_get__tev__AddEventBroker(struct soap*, struct _tev__AddEventBroker *, const char*, const char*);

#ifndef soap_read__tev__AddEventBroker
#define soap_read__tev__AddEventBroker(soap, data) ( ((data) ? (soap_default__tev__AddEventBroker(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__AddEventBroker(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__AddEventBroker
#define soap_GET__tev__AddEventBroker(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__AddEventBroker(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__AddEventBroker
#define soap_POST_recv__tev__AddEventBroker(soap, data) ( soap_read__tev__AddEventBroker(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wstop__TopicSetType_DEFINED
#define SOAP_TYPE_wstop__TopicSetType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wstop__TopicSetType(struct soap*, struct wstop__TopicSetType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__TopicSetType(struct soap*, const struct wstop__TopicSetType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__TopicSetType(struct soap*, const char*, int, const struct wstop__TopicSetType *, const char*);
SOAP_FMAC3 struct wstop__TopicSetType * SOAP_FMAC4 soap_in_wstop__TopicSetType(struct soap*, const char*, struct wstop__TopicSetType *, const char*);

SOAP_FMAC3 struct wstop__TopicSetType * SOAP_FMAC4 soap_new_wstop__TopicSetType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__TopicSetType(struct soap*, const struct wstop__TopicSetType *, const char*, const char*);

#ifndef soap_write_wstop__TopicSetType
#define soap_write_wstop__TopicSetType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__TopicSetType(soap, data), 0) || soap_put_wstop__TopicSetType(soap, data, "wstop:TopicSetType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__TopicSetType
#define soap_PUT_wstop__TopicSetType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicSetType(soap, data), 0) || soap_put_wstop__TopicSetType(soap, data, "wstop:TopicSetType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__TopicSetType
#define soap_PATCH_wstop__TopicSetType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicSetType(soap, data), 0) || soap_put_wstop__TopicSetType(soap, data, "wstop:TopicSetType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__TopicSetType
#define soap_POST_send_wstop__TopicSetType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicSetType(soap, data), 0) || soap_put_wstop__TopicSetType(soap, data, "wstop:TopicSetType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wstop__TopicSetType * SOAP_FMAC4 soap_get_wstop__TopicSetType(struct soap*, struct wstop__TopicSetType *, const char*, const char*);

#ifndef soap_read_wstop__TopicSetType
#define soap_read_wstop__TopicSetType(soap, data) ( ((data) ? (soap_default_wstop__TopicSetType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__TopicSetType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__TopicSetType
#define soap_GET_wstop__TopicSetType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__TopicSetType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__TopicSetType
#define soap_POST_recv_wstop__TopicSetType(soap, data) ( soap_read_wstop__TopicSetType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__GetEventPropertiesResponse_DEFINED
#define SOAP_TYPE__tev__GetEventPropertiesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__GetEventPropertiesResponse(struct soap*, const struct _tev__GetEventPropertiesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__GetEventPropertiesResponse(struct soap*, const char*, int, const struct _tev__GetEventPropertiesResponse *, const char*);
SOAP_FMAC3 struct _tev__GetEventPropertiesResponse * SOAP_FMAC4 soap_in__tev__GetEventPropertiesResponse(struct soap*, const char*, struct _tev__GetEventPropertiesResponse *, const char*);

SOAP_FMAC3 struct _tev__GetEventPropertiesResponse * SOAP_FMAC4 soap_new__tev__GetEventPropertiesResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__GetEventPropertiesResponse(struct soap*, const struct _tev__GetEventPropertiesResponse *, const char*, const char*);

#ifndef soap_write__tev__GetEventPropertiesResponse
#define soap_write__tev__GetEventPropertiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__GetEventPropertiesResponse(soap, data), 0) || soap_put__tev__GetEventPropertiesResponse(soap, data, "tev:GetEventPropertiesResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__GetEventPropertiesResponse
#define soap_PUT__tev__GetEventPropertiesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetEventPropertiesResponse(soap, data), 0) || soap_put__tev__GetEventPropertiesResponse(soap, data, "tev:GetEventPropertiesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__GetEventPropertiesResponse
#define soap_PATCH__tev__GetEventPropertiesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetEventPropertiesResponse(soap, data), 0) || soap_put__tev__GetEventPropertiesResponse(soap, data, "tev:GetEventPropertiesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__GetEventPropertiesResponse
#define soap_POST_send__tev__GetEventPropertiesResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetEventPropertiesResponse(soap, data), 0) || soap_put__tev__GetEventPropertiesResponse(soap, data, "tev:GetEventPropertiesResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__GetEventPropertiesResponse * SOAP_FMAC4 soap_get__tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse *, const char*, const char*);

#ifndef soap_read__tev__GetEventPropertiesResponse
#define soap_read__tev__GetEventPropertiesResponse(soap, data) ( ((data) ? (soap_default__tev__GetEventPropertiesResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__GetEventPropertiesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__GetEventPropertiesResponse
#define soap_GET__tev__GetEventPropertiesResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__GetEventPropertiesResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__GetEventPropertiesResponse
#define soap_POST_recv__tev__GetEventPropertiesResponse(soap, data) ( soap_read__tev__GetEventPropertiesResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__GetEventProperties_DEFINED
#define SOAP_TYPE__tev__GetEventProperties_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__GetEventProperties(struct soap*, const struct _tev__GetEventProperties *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__GetEventProperties(struct soap*, const char*, int, const struct _tev__GetEventProperties *, const char*);
SOAP_FMAC3 struct _tev__GetEventProperties * SOAP_FMAC4 soap_in__tev__GetEventProperties(struct soap*, const char*, struct _tev__GetEventProperties *, const char*);

SOAP_FMAC3 struct _tev__GetEventProperties * SOAP_FMAC4 soap_new__tev__GetEventProperties(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__GetEventProperties(struct soap*, const struct _tev__GetEventProperties *, const char*, const char*);

#ifndef soap_write__tev__GetEventProperties
#define soap_write__tev__GetEventProperties(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__GetEventProperties(soap, data), 0) || soap_put__tev__GetEventProperties(soap, data, "tev:GetEventProperties", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__GetEventProperties
#define soap_PUT__tev__GetEventProperties(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetEventProperties(soap, data), 0) || soap_put__tev__GetEventProperties(soap, data, "tev:GetEventProperties", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__GetEventProperties
#define soap_PATCH__tev__GetEventProperties(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetEventProperties(soap, data), 0) || soap_put__tev__GetEventProperties(soap, data, "tev:GetEventProperties", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__GetEventProperties
#define soap_POST_send__tev__GetEventProperties(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetEventProperties(soap, data), 0) || soap_put__tev__GetEventProperties(soap, data, "tev:GetEventProperties", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__GetEventProperties * SOAP_FMAC4 soap_get__tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties *, const char*, const char*);

#ifndef soap_read__tev__GetEventProperties
#define soap_read__tev__GetEventProperties(soap, data) ( ((data) ? (soap_default__tev__GetEventProperties(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__GetEventProperties(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__GetEventProperties
#define soap_GET__tev__GetEventProperties(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__GetEventProperties(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__GetEventProperties
#define soap_POST_recv__tev__GetEventProperties(soap, data) ( soap_read__tev__GetEventProperties(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__SetSynchronizationPointResponse_DEFINED
#define SOAP_TYPE__tev__SetSynchronizationPointResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__SetSynchronizationPointResponse(struct soap*, const struct _tev__SetSynchronizationPointResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__SetSynchronizationPointResponse(struct soap*, const char*, int, const struct _tev__SetSynchronizationPointResponse *, const char*);
SOAP_FMAC3 struct _tev__SetSynchronizationPointResponse * SOAP_FMAC4 soap_in__tev__SetSynchronizationPointResponse(struct soap*, const char*, struct _tev__SetSynchronizationPointResponse *, const char*);

SOAP_FMAC3 struct _tev__SetSynchronizationPointResponse * SOAP_FMAC4 soap_new__tev__SetSynchronizationPointResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__SetSynchronizationPointResponse(struct soap*, const struct _tev__SetSynchronizationPointResponse *, const char*, const char*);

#ifndef soap_write__tev__SetSynchronizationPointResponse
#define soap_write__tev__SetSynchronizationPointResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__SetSynchronizationPointResponse(soap, data), 0) || soap_put__tev__SetSynchronizationPointResponse(soap, data, "tev:SetSynchronizationPointResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__SetSynchronizationPointResponse
#define soap_PUT__tev__SetSynchronizationPointResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__SetSynchronizationPointResponse(soap, data), 0) || soap_put__tev__SetSynchronizationPointResponse(soap, data, "tev:SetSynchronizationPointResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__SetSynchronizationPointResponse
#define soap_PATCH__tev__SetSynchronizationPointResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__SetSynchronizationPointResponse(soap, data), 0) || soap_put__tev__SetSynchronizationPointResponse(soap, data, "tev:SetSynchronizationPointResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__SetSynchronizationPointResponse
#define soap_POST_send__tev__SetSynchronizationPointResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__SetSynchronizationPointResponse(soap, data), 0) || soap_put__tev__SetSynchronizationPointResponse(soap, data, "tev:SetSynchronizationPointResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__SetSynchronizationPointResponse * SOAP_FMAC4 soap_get__tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse *, const char*, const char*);

#ifndef soap_read__tev__SetSynchronizationPointResponse
#define soap_read__tev__SetSynchronizationPointResponse(soap, data) ( ((data) ? (soap_default__tev__SetSynchronizationPointResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__SetSynchronizationPointResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__SetSynchronizationPointResponse
#define soap_GET__tev__SetSynchronizationPointResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__SetSynchronizationPointResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__SetSynchronizationPointResponse
#define soap_POST_recv__tev__SetSynchronizationPointResponse(soap, data) ( soap_read__tev__SetSynchronizationPointResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__SetSynchronizationPoint_DEFINED
#define SOAP_TYPE__tev__SetSynchronizationPoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__SetSynchronizationPoint(struct soap*, const struct _tev__SetSynchronizationPoint *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__SetSynchronizationPoint(struct soap*, const char*, int, const struct _tev__SetSynchronizationPoint *, const char*);
SOAP_FMAC3 struct _tev__SetSynchronizationPoint * SOAP_FMAC4 soap_in__tev__SetSynchronizationPoint(struct soap*, const char*, struct _tev__SetSynchronizationPoint *, const char*);

SOAP_FMAC3 struct _tev__SetSynchronizationPoint * SOAP_FMAC4 soap_new__tev__SetSynchronizationPoint(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__SetSynchronizationPoint(struct soap*, const struct _tev__SetSynchronizationPoint *, const char*, const char*);

#ifndef soap_write__tev__SetSynchronizationPoint
#define soap_write__tev__SetSynchronizationPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__SetSynchronizationPoint(soap, data), 0) || soap_put__tev__SetSynchronizationPoint(soap, data, "tev:SetSynchronizationPoint", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__SetSynchronizationPoint
#define soap_PUT__tev__SetSynchronizationPoint(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__SetSynchronizationPoint(soap, data), 0) || soap_put__tev__SetSynchronizationPoint(soap, data, "tev:SetSynchronizationPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__SetSynchronizationPoint
#define soap_PATCH__tev__SetSynchronizationPoint(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__SetSynchronizationPoint(soap, data), 0) || soap_put__tev__SetSynchronizationPoint(soap, data, "tev:SetSynchronizationPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__SetSynchronizationPoint
#define soap_POST_send__tev__SetSynchronizationPoint(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__SetSynchronizationPoint(soap, data), 0) || soap_put__tev__SetSynchronizationPoint(soap, data, "tev:SetSynchronizationPoint", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__SetSynchronizationPoint * SOAP_FMAC4 soap_get__tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint *, const char*, const char*);

#ifndef soap_read__tev__SetSynchronizationPoint
#define soap_read__tev__SetSynchronizationPoint(soap, data) ( ((data) ? (soap_default__tev__SetSynchronizationPoint(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__SetSynchronizationPoint(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__SetSynchronizationPoint
#define soap_GET__tev__SetSynchronizationPoint(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__SetSynchronizationPoint(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__SetSynchronizationPoint
#define soap_POST_recv__tev__SetSynchronizationPoint(soap, data) ( soap_read__tev__SetSynchronizationPoint(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__SeekResponse_DEFINED
#define SOAP_TYPE__tev__SeekResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__SeekResponse(struct soap*, struct _tev__SeekResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__SeekResponse(struct soap*, const struct _tev__SeekResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__SeekResponse(struct soap*, const char*, int, const struct _tev__SeekResponse *, const char*);
SOAP_FMAC3 struct _tev__SeekResponse * SOAP_FMAC4 soap_in__tev__SeekResponse(struct soap*, const char*, struct _tev__SeekResponse *, const char*);

SOAP_FMAC3 struct _tev__SeekResponse * SOAP_FMAC4 soap_new__tev__SeekResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__SeekResponse(struct soap*, const struct _tev__SeekResponse *, const char*, const char*);

#ifndef soap_write__tev__SeekResponse
#define soap_write__tev__SeekResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__SeekResponse(soap, data), 0) || soap_put__tev__SeekResponse(soap, data, "tev:SeekResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__SeekResponse
#define soap_PUT__tev__SeekResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__SeekResponse(soap, data), 0) || soap_put__tev__SeekResponse(soap, data, "tev:SeekResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__SeekResponse
#define soap_PATCH__tev__SeekResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__SeekResponse(soap, data), 0) || soap_put__tev__SeekResponse(soap, data, "tev:SeekResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__SeekResponse
#define soap_POST_send__tev__SeekResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__SeekResponse(soap, data), 0) || soap_put__tev__SeekResponse(soap, data, "tev:SeekResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__SeekResponse * SOAP_FMAC4 soap_get__tev__SeekResponse(struct soap*, struct _tev__SeekResponse *, const char*, const char*);

#ifndef soap_read__tev__SeekResponse
#define soap_read__tev__SeekResponse(soap, data) ( ((data) ? (soap_default__tev__SeekResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__SeekResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__SeekResponse
#define soap_GET__tev__SeekResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__SeekResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__SeekResponse
#define soap_POST_recv__tev__SeekResponse(soap, data) ( soap_read__tev__SeekResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__Seek_DEFINED
#define SOAP_TYPE__tev__Seek_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__Seek(struct soap*, struct _tev__Seek *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__Seek(struct soap*, const struct _tev__Seek *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__Seek(struct soap*, const char*, int, const struct _tev__Seek *, const char*);
SOAP_FMAC3 struct _tev__Seek * SOAP_FMAC4 soap_in__tev__Seek(struct soap*, const char*, struct _tev__Seek *, const char*);

SOAP_FMAC3 struct _tev__Seek * SOAP_FMAC4 soap_new__tev__Seek(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__Seek(struct soap*, const struct _tev__Seek *, const char*, const char*);

#ifndef soap_write__tev__Seek
#define soap_write__tev__Seek(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__Seek(soap, data), 0) || soap_put__tev__Seek(soap, data, "tev:Seek", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__Seek
#define soap_PUT__tev__Seek(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__Seek(soap, data), 0) || soap_put__tev__Seek(soap, data, "tev:Seek", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__Seek
#define soap_PATCH__tev__Seek(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__Seek(soap, data), 0) || soap_put__tev__Seek(soap, data, "tev:Seek", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__Seek
#define soap_POST_send__tev__Seek(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__Seek(soap, data), 0) || soap_put__tev__Seek(soap, data, "tev:Seek", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__Seek * SOAP_FMAC4 soap_get__tev__Seek(struct soap*, struct _tev__Seek *, const char*, const char*);

#ifndef soap_read__tev__Seek
#define soap_read__tev__Seek(soap, data) ( ((data) ? (soap_default__tev__Seek(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__Seek(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__Seek
#define soap_GET__tev__Seek(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__Seek(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__Seek
#define soap_POST_recv__tev__Seek(soap, data) ( soap_read__tev__Seek(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__PullMessagesFaultResponse_DEFINED
#define SOAP_TYPE__tev__PullMessagesFaultResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__PullMessagesFaultResponse(struct soap*, const struct _tev__PullMessagesFaultResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__PullMessagesFaultResponse(struct soap*, const char*, int, const struct _tev__PullMessagesFaultResponse *, const char*);
SOAP_FMAC3 struct _tev__PullMessagesFaultResponse * SOAP_FMAC4 soap_in__tev__PullMessagesFaultResponse(struct soap*, const char*, struct _tev__PullMessagesFaultResponse *, const char*);

SOAP_FMAC3 struct _tev__PullMessagesFaultResponse * SOAP_FMAC4 soap_new__tev__PullMessagesFaultResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__PullMessagesFaultResponse(struct soap*, const struct _tev__PullMessagesFaultResponse *, const char*, const char*);

#ifndef soap_write__tev__PullMessagesFaultResponse
#define soap_write__tev__PullMessagesFaultResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__PullMessagesFaultResponse(soap, data), 0) || soap_put__tev__PullMessagesFaultResponse(soap, data, "tev:PullMessagesFaultResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__PullMessagesFaultResponse
#define soap_PUT__tev__PullMessagesFaultResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__PullMessagesFaultResponse(soap, data), 0) || soap_put__tev__PullMessagesFaultResponse(soap, data, "tev:PullMessagesFaultResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__PullMessagesFaultResponse
#define soap_PATCH__tev__PullMessagesFaultResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__PullMessagesFaultResponse(soap, data), 0) || soap_put__tev__PullMessagesFaultResponse(soap, data, "tev:PullMessagesFaultResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__PullMessagesFaultResponse
#define soap_POST_send__tev__PullMessagesFaultResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__PullMessagesFaultResponse(soap, data), 0) || soap_put__tev__PullMessagesFaultResponse(soap, data, "tev:PullMessagesFaultResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__PullMessagesFaultResponse * SOAP_FMAC4 soap_get__tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse *, const char*, const char*);

#ifndef soap_read__tev__PullMessagesFaultResponse
#define soap_read__tev__PullMessagesFaultResponse(soap, data) ( ((data) ? (soap_default__tev__PullMessagesFaultResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__PullMessagesFaultResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__PullMessagesFaultResponse
#define soap_GET__tev__PullMessagesFaultResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__PullMessagesFaultResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__PullMessagesFaultResponse
#define soap_POST_recv__tev__PullMessagesFaultResponse(soap, data) ( soap_read__tev__PullMessagesFaultResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__NotificationMessageHolderType_DEFINED
#define SOAP_TYPE_wsnt__NotificationMessageHolderType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__NotificationMessageHolderType(struct soap*, struct wsnt__NotificationMessageHolderType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__NotificationMessageHolderType(struct soap*, const struct wsnt__NotificationMessageHolderType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__NotificationMessageHolderType(struct soap*, const char*, int, const struct wsnt__NotificationMessageHolderType *, const char*);
SOAP_FMAC3 struct wsnt__NotificationMessageHolderType * SOAP_FMAC4 soap_in_wsnt__NotificationMessageHolderType(struct soap*, const char*, struct wsnt__NotificationMessageHolderType *, const char*);

SOAP_FMAC3 struct wsnt__NotificationMessageHolderType * SOAP_FMAC4 soap_new_wsnt__NotificationMessageHolderType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__NotificationMessageHolderType(struct soap*, const struct wsnt__NotificationMessageHolderType *, const char*, const char*);

#ifndef soap_write_wsnt__NotificationMessageHolderType
#define soap_write_wsnt__NotificationMessageHolderType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__NotificationMessageHolderType(soap, data), 0) || soap_put_wsnt__NotificationMessageHolderType(soap, data, "wsnt:NotificationMessageHolderType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__NotificationMessageHolderType
#define soap_PUT_wsnt__NotificationMessageHolderType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NotificationMessageHolderType(soap, data), 0) || soap_put_wsnt__NotificationMessageHolderType(soap, data, "wsnt:NotificationMessageHolderType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__NotificationMessageHolderType
#define soap_PATCH_wsnt__NotificationMessageHolderType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NotificationMessageHolderType(soap, data), 0) || soap_put_wsnt__NotificationMessageHolderType(soap, data, "wsnt:NotificationMessageHolderType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__NotificationMessageHolderType
#define soap_POST_send_wsnt__NotificationMessageHolderType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NotificationMessageHolderType(soap, data), 0) || soap_put_wsnt__NotificationMessageHolderType(soap, data, "wsnt:NotificationMessageHolderType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__NotificationMessageHolderType * SOAP_FMAC4 soap_get_wsnt__NotificationMessageHolderType(struct soap*, struct wsnt__NotificationMessageHolderType *, const char*, const char*);

#ifndef soap_read_wsnt__NotificationMessageHolderType
#define soap_read_wsnt__NotificationMessageHolderType(soap, data) ( ((data) ? (soap_default_wsnt__NotificationMessageHolderType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__NotificationMessageHolderType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__NotificationMessageHolderType
#define soap_GET_wsnt__NotificationMessageHolderType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__NotificationMessageHolderType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__NotificationMessageHolderType
#define soap_POST_recv_wsnt__NotificationMessageHolderType(soap, data) ( soap_read_wsnt__NotificationMessageHolderType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__PullMessagesResponse_DEFINED
#define SOAP_TYPE__tev__PullMessagesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__PullMessagesResponse(struct soap*, const struct _tev__PullMessagesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__PullMessagesResponse(struct soap*, const char*, int, const struct _tev__PullMessagesResponse *, const char*);
SOAP_FMAC3 struct _tev__PullMessagesResponse * SOAP_FMAC4 soap_in__tev__PullMessagesResponse(struct soap*, const char*, struct _tev__PullMessagesResponse *, const char*);

SOAP_FMAC3 struct _tev__PullMessagesResponse * SOAP_FMAC4 soap_new__tev__PullMessagesResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__PullMessagesResponse(struct soap*, const struct _tev__PullMessagesResponse *, const char*, const char*);

#ifndef soap_write__tev__PullMessagesResponse
#define soap_write__tev__PullMessagesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__PullMessagesResponse(soap, data), 0) || soap_put__tev__PullMessagesResponse(soap, data, "tev:PullMessagesResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__PullMessagesResponse
#define soap_PUT__tev__PullMessagesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__PullMessagesResponse(soap, data), 0) || soap_put__tev__PullMessagesResponse(soap, data, "tev:PullMessagesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__PullMessagesResponse
#define soap_PATCH__tev__PullMessagesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__PullMessagesResponse(soap, data), 0) || soap_put__tev__PullMessagesResponse(soap, data, "tev:PullMessagesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__PullMessagesResponse
#define soap_POST_send__tev__PullMessagesResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__PullMessagesResponse(soap, data), 0) || soap_put__tev__PullMessagesResponse(soap, data, "tev:PullMessagesResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__PullMessagesResponse * SOAP_FMAC4 soap_get__tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse *, const char*, const char*);

#ifndef soap_read__tev__PullMessagesResponse
#define soap_read__tev__PullMessagesResponse(soap, data) ( ((data) ? (soap_default__tev__PullMessagesResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__PullMessagesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__PullMessagesResponse
#define soap_GET__tev__PullMessagesResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__PullMessagesResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__PullMessagesResponse
#define soap_POST_recv__tev__PullMessagesResponse(soap, data) ( soap_read__tev__PullMessagesResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__PullMessages_DEFINED
#define SOAP_TYPE__tev__PullMessages_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__PullMessages(struct soap*, struct _tev__PullMessages *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__PullMessages(struct soap*, const struct _tev__PullMessages *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__PullMessages(struct soap*, const char*, int, const struct _tev__PullMessages *, const char*);
SOAP_FMAC3 struct _tev__PullMessages * SOAP_FMAC4 soap_in__tev__PullMessages(struct soap*, const char*, struct _tev__PullMessages *, const char*);

SOAP_FMAC3 struct _tev__PullMessages * SOAP_FMAC4 soap_new__tev__PullMessages(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__PullMessages(struct soap*, const struct _tev__PullMessages *, const char*, const char*);

#ifndef soap_write__tev__PullMessages
#define soap_write__tev__PullMessages(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__PullMessages(soap, data), 0) || soap_put__tev__PullMessages(soap, data, "tev:PullMessages", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__PullMessages
#define soap_PUT__tev__PullMessages(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__PullMessages(soap, data), 0) || soap_put__tev__PullMessages(soap, data, "tev:PullMessages", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__PullMessages
#define soap_PATCH__tev__PullMessages(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__PullMessages(soap, data), 0) || soap_put__tev__PullMessages(soap, data, "tev:PullMessages", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__PullMessages
#define soap_POST_send__tev__PullMessages(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__PullMessages(soap, data), 0) || soap_put__tev__PullMessages(soap, data, "tev:PullMessages", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__PullMessages * SOAP_FMAC4 soap_get__tev__PullMessages(struct soap*, struct _tev__PullMessages *, const char*, const char*);

#ifndef soap_read__tev__PullMessages
#define soap_read__tev__PullMessages(soap, data) ( ((data) ? (soap_default__tev__PullMessages(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__PullMessages(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__PullMessages
#define soap_GET__tev__PullMessages(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__PullMessages(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__PullMessages
#define soap_POST_recv__tev__PullMessages(soap, data) ( soap_read__tev__PullMessages(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__CreatePullPointSubscriptionResponse_DEFINED
#define SOAP_TYPE__tev__CreatePullPointSubscriptionResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__CreatePullPointSubscriptionResponse(struct soap*, const struct _tev__CreatePullPointSubscriptionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__CreatePullPointSubscriptionResponse(struct soap*, const char*, int, const struct _tev__CreatePullPointSubscriptionResponse *, const char*);
SOAP_FMAC3 struct _tev__CreatePullPointSubscriptionResponse * SOAP_FMAC4 soap_in__tev__CreatePullPointSubscriptionResponse(struct soap*, const char*, struct _tev__CreatePullPointSubscriptionResponse *, const char*);

SOAP_FMAC3 struct _tev__CreatePullPointSubscriptionResponse * SOAP_FMAC4 soap_new__tev__CreatePullPointSubscriptionResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__CreatePullPointSubscriptionResponse(struct soap*, const struct _tev__CreatePullPointSubscriptionResponse *, const char*, const char*);

#ifndef soap_write__tev__CreatePullPointSubscriptionResponse
#define soap_write__tev__CreatePullPointSubscriptionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__CreatePullPointSubscriptionResponse(soap, data), 0) || soap_put__tev__CreatePullPointSubscriptionResponse(soap, data, "tev:CreatePullPointSubscriptionResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__CreatePullPointSubscriptionResponse
#define soap_PUT__tev__CreatePullPointSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__CreatePullPointSubscriptionResponse(soap, data), 0) || soap_put__tev__CreatePullPointSubscriptionResponse(soap, data, "tev:CreatePullPointSubscriptionResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__CreatePullPointSubscriptionResponse
#define soap_PATCH__tev__CreatePullPointSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__CreatePullPointSubscriptionResponse(soap, data), 0) || soap_put__tev__CreatePullPointSubscriptionResponse(soap, data, "tev:CreatePullPointSubscriptionResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__CreatePullPointSubscriptionResponse
#define soap_POST_send__tev__CreatePullPointSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__CreatePullPointSubscriptionResponse(soap, data), 0) || soap_put__tev__CreatePullPointSubscriptionResponse(soap, data, "tev:CreatePullPointSubscriptionResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__CreatePullPointSubscriptionResponse * SOAP_FMAC4 soap_get__tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse *, const char*, const char*);

#ifndef soap_read__tev__CreatePullPointSubscriptionResponse
#define soap_read__tev__CreatePullPointSubscriptionResponse(soap, data) ( ((data) ? (soap_default__tev__CreatePullPointSubscriptionResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__CreatePullPointSubscriptionResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__CreatePullPointSubscriptionResponse
#define soap_GET__tev__CreatePullPointSubscriptionResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__CreatePullPointSubscriptionResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__CreatePullPointSubscriptionResponse
#define soap_POST_recv__tev__CreatePullPointSubscriptionResponse(soap, data) ( soap_read__tev__CreatePullPointSubscriptionResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__CreatePullPointSubscription_SubscriptionPolicy_DEFINED
#define SOAP_TYPE__tev__CreatePullPointSubscription_SubscriptionPolicy_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, struct _tev__CreatePullPointSubscription_SubscriptionPolicy *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, const struct _tev__CreatePullPointSubscription_SubscriptionPolicy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, const char*, int, const struct _tev__CreatePullPointSubscription_SubscriptionPolicy *, const char*);
SOAP_FMAC3 struct _tev__CreatePullPointSubscription_SubscriptionPolicy * SOAP_FMAC4 soap_in__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, const char*, struct _tev__CreatePullPointSubscription_SubscriptionPolicy *, const char*);

SOAP_FMAC3 struct _tev__CreatePullPointSubscription_SubscriptionPolicy * SOAP_FMAC4 soap_new__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, const struct _tev__CreatePullPointSubscription_SubscriptionPolicy *, const char*, const char*);

#ifndef soap_write__tev__CreatePullPointSubscription_SubscriptionPolicy
#define soap_write__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, data), 0) || soap_put__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, data, "tev:CreatePullPointSubscription-SubscriptionPolicy", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__CreatePullPointSubscription_SubscriptionPolicy
#define soap_PUT__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, data), 0) || soap_put__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, data, "tev:CreatePullPointSubscription-SubscriptionPolicy", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__CreatePullPointSubscription_SubscriptionPolicy
#define soap_PATCH__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, data), 0) || soap_put__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, data, "tev:CreatePullPointSubscription-SubscriptionPolicy", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__CreatePullPointSubscription_SubscriptionPolicy
#define soap_POST_send__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, data), 0) || soap_put__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, data, "tev:CreatePullPointSubscription-SubscriptionPolicy", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__CreatePullPointSubscription_SubscriptionPolicy * SOAP_FMAC4 soap_get__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, struct _tev__CreatePullPointSubscription_SubscriptionPolicy *, const char*, const char*);

#ifndef soap_read__tev__CreatePullPointSubscription_SubscriptionPolicy
#define soap_read__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, data) ( ((data) ? (soap_default__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__CreatePullPointSubscription_SubscriptionPolicy
#define soap_GET__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__CreatePullPointSubscription_SubscriptionPolicy
#define soap_POST_recv__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, data) ( soap_read__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__CreatePullPointSubscription_DEFINED
#define SOAP_TYPE__tev__CreatePullPointSubscription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__CreatePullPointSubscription(struct soap*, const struct _tev__CreatePullPointSubscription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__CreatePullPointSubscription(struct soap*, const char*, int, const struct _tev__CreatePullPointSubscription *, const char*);
SOAP_FMAC3 struct _tev__CreatePullPointSubscription * SOAP_FMAC4 soap_in__tev__CreatePullPointSubscription(struct soap*, const char*, struct _tev__CreatePullPointSubscription *, const char*);

SOAP_FMAC3 struct _tev__CreatePullPointSubscription * SOAP_FMAC4 soap_new__tev__CreatePullPointSubscription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__CreatePullPointSubscription(struct soap*, const struct _tev__CreatePullPointSubscription *, const char*, const char*);

#ifndef soap_write__tev__CreatePullPointSubscription
#define soap_write__tev__CreatePullPointSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__CreatePullPointSubscription(soap, data), 0) || soap_put__tev__CreatePullPointSubscription(soap, data, "tev:CreatePullPointSubscription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__CreatePullPointSubscription
#define soap_PUT__tev__CreatePullPointSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__CreatePullPointSubscription(soap, data), 0) || soap_put__tev__CreatePullPointSubscription(soap, data, "tev:CreatePullPointSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__CreatePullPointSubscription
#define soap_PATCH__tev__CreatePullPointSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__CreatePullPointSubscription(soap, data), 0) || soap_put__tev__CreatePullPointSubscription(soap, data, "tev:CreatePullPointSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__CreatePullPointSubscription
#define soap_POST_send__tev__CreatePullPointSubscription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__CreatePullPointSubscription(soap, data), 0) || soap_put__tev__CreatePullPointSubscription(soap, data, "tev:CreatePullPointSubscription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__CreatePullPointSubscription * SOAP_FMAC4 soap_get__tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription *, const char*, const char*);

#ifndef soap_read__tev__CreatePullPointSubscription
#define soap_read__tev__CreatePullPointSubscription(soap, data) ( ((data) ? (soap_default__tev__CreatePullPointSubscription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__CreatePullPointSubscription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__CreatePullPointSubscription
#define soap_GET__tev__CreatePullPointSubscription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__CreatePullPointSubscription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__CreatePullPointSubscription
#define soap_POST_recv__tev__CreatePullPointSubscription(soap, data) ( soap_read__tev__CreatePullPointSubscription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__GetServiceCapabilitiesResponse_DEFINED
#define SOAP_TYPE__tev__GetServiceCapabilitiesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__GetServiceCapabilitiesResponse(struct soap*, const struct _tev__GetServiceCapabilitiesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__GetServiceCapabilitiesResponse(struct soap*, const char*, int, const struct _tev__GetServiceCapabilitiesResponse *, const char*);
SOAP_FMAC3 struct _tev__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_in__tev__GetServiceCapabilitiesResponse(struct soap*, const char*, struct _tev__GetServiceCapabilitiesResponse *, const char*);

SOAP_FMAC3 struct _tev__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_new__tev__GetServiceCapabilitiesResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__GetServiceCapabilitiesResponse(struct soap*, const struct _tev__GetServiceCapabilitiesResponse *, const char*, const char*);

#ifndef soap_write__tev__GetServiceCapabilitiesResponse
#define soap_write__tev__GetServiceCapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__GetServiceCapabilitiesResponse(soap, data), 0) || soap_put__tev__GetServiceCapabilitiesResponse(soap, data, "tev:GetServiceCapabilitiesResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__GetServiceCapabilitiesResponse
#define soap_PUT__tev__GetServiceCapabilitiesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetServiceCapabilitiesResponse(soap, data), 0) || soap_put__tev__GetServiceCapabilitiesResponse(soap, data, "tev:GetServiceCapabilitiesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__GetServiceCapabilitiesResponse
#define soap_PATCH__tev__GetServiceCapabilitiesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetServiceCapabilitiesResponse(soap, data), 0) || soap_put__tev__GetServiceCapabilitiesResponse(soap, data, "tev:GetServiceCapabilitiesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__GetServiceCapabilitiesResponse
#define soap_POST_send__tev__GetServiceCapabilitiesResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetServiceCapabilitiesResponse(soap, data), 0) || soap_put__tev__GetServiceCapabilitiesResponse(soap, data, "tev:GetServiceCapabilitiesResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_get__tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__tev__GetServiceCapabilitiesResponse
#define soap_read__tev__GetServiceCapabilitiesResponse(soap, data) ( ((data) ? (soap_default__tev__GetServiceCapabilitiesResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__GetServiceCapabilitiesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__GetServiceCapabilitiesResponse
#define soap_GET__tev__GetServiceCapabilitiesResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__GetServiceCapabilitiesResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__GetServiceCapabilitiesResponse
#define soap_POST_recv__tev__GetServiceCapabilitiesResponse(soap, data) ( soap_read__tev__GetServiceCapabilitiesResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tev__GetServiceCapabilities_DEFINED
#define SOAP_TYPE__tev__GetServiceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tev__GetServiceCapabilities(struct soap*, const struct _tev__GetServiceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tev__GetServiceCapabilities(struct soap*, const char*, int, const struct _tev__GetServiceCapabilities *, const char*);
SOAP_FMAC3 struct _tev__GetServiceCapabilities * SOAP_FMAC4 soap_in__tev__GetServiceCapabilities(struct soap*, const char*, struct _tev__GetServiceCapabilities *, const char*);

SOAP_FMAC3 struct _tev__GetServiceCapabilities * SOAP_FMAC4 soap_new__tev__GetServiceCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tev__GetServiceCapabilities(struct soap*, const struct _tev__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_write__tev__GetServiceCapabilities
#define soap_write__tev__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tev__GetServiceCapabilities(soap, data), 0) || soap_put__tev__GetServiceCapabilities(soap, data, "tev:GetServiceCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tev__GetServiceCapabilities
#define soap_PUT__tev__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetServiceCapabilities(soap, data), 0) || soap_put__tev__GetServiceCapabilities(soap, data, "tev:GetServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tev__GetServiceCapabilities
#define soap_PATCH__tev__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetServiceCapabilities(soap, data), 0) || soap_put__tev__GetServiceCapabilities(soap, data, "tev:GetServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tev__GetServiceCapabilities
#define soap_POST_send__tev__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tev__GetServiceCapabilities(soap, data), 0) || soap_put__tev__GetServiceCapabilities(soap, data, "tev:GetServiceCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tev__GetServiceCapabilities * SOAP_FMAC4 soap_get__tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read__tev__GetServiceCapabilities
#define soap_read__tev__GetServiceCapabilities(soap, data) ( ((data) ? (soap_default__tev__GetServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tev__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tev__GetServiceCapabilities
#define soap_GET__tev__GetServiceCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tev__GetServiceCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tev__GetServiceCapabilities
#define soap_POST_recv__tev__GetServiceCapabilities(soap, data) ( soap_read__tev__GetServiceCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__FilterType_DEFINED
#define SOAP_TYPE_wsnt__FilterType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__FilterType(struct soap*, struct wsnt__FilterType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__FilterType(struct soap*, const struct wsnt__FilterType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__FilterType(struct soap*, const char*, int, const struct wsnt__FilterType *, const char*);
SOAP_FMAC3 struct wsnt__FilterType * SOAP_FMAC4 soap_in_wsnt__FilterType(struct soap*, const char*, struct wsnt__FilterType *, const char*);

SOAP_FMAC3 struct wsnt__FilterType * SOAP_FMAC4 soap_new_wsnt__FilterType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__FilterType(struct soap*, const struct wsnt__FilterType *, const char*, const char*);

#ifndef soap_write_wsnt__FilterType
#define soap_write_wsnt__FilterType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__FilterType(soap, data), 0) || soap_put_wsnt__FilterType(soap, data, "wsnt:FilterType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__FilterType
#define soap_PUT_wsnt__FilterType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__FilterType(soap, data), 0) || soap_put_wsnt__FilterType(soap, data, "wsnt:FilterType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__FilterType
#define soap_PATCH_wsnt__FilterType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__FilterType(soap, data), 0) || soap_put_wsnt__FilterType(soap, data, "wsnt:FilterType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__FilterType
#define soap_POST_send_wsnt__FilterType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__FilterType(soap, data), 0) || soap_put_wsnt__FilterType(soap, data, "wsnt:FilterType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__FilterType * SOAP_FMAC4 soap_get_wsnt__FilterType(struct soap*, struct wsnt__FilterType *, const char*, const char*);

#ifndef soap_read_wsnt__FilterType
#define soap_read_wsnt__FilterType(soap, data) ( ((data) ? (soap_default_wsnt__FilterType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__FilterType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__FilterType
#define soap_GET_wsnt__FilterType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__FilterType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__FilterType
#define soap_POST_recv_wsnt__FilterType(soap, data) ( soap_read_wsnt__FilterType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tev__EventBrokerConfig_DEFINED
#define SOAP_TYPE_tev__EventBrokerConfig_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tev__EventBrokerConfig(struct soap*, struct tev__EventBrokerConfig *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tev__EventBrokerConfig(struct soap*, const struct tev__EventBrokerConfig *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tev__EventBrokerConfig(struct soap*, const char*, int, const struct tev__EventBrokerConfig *, const char*);
SOAP_FMAC3 struct tev__EventBrokerConfig * SOAP_FMAC4 soap_in_tev__EventBrokerConfig(struct soap*, const char*, struct tev__EventBrokerConfig *, const char*);

SOAP_FMAC3 struct tev__EventBrokerConfig * SOAP_FMAC4 soap_new_tev__EventBrokerConfig(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tev__EventBrokerConfig(struct soap*, const struct tev__EventBrokerConfig *, const char*, const char*);

#ifndef soap_write_tev__EventBrokerConfig
#define soap_write_tev__EventBrokerConfig(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tev__EventBrokerConfig(soap, data), 0) || soap_put_tev__EventBrokerConfig(soap, data, "tev:EventBrokerConfig", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tev__EventBrokerConfig
#define soap_PUT_tev__EventBrokerConfig(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tev__EventBrokerConfig(soap, data), 0) || soap_put_tev__EventBrokerConfig(soap, data, "tev:EventBrokerConfig", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tev__EventBrokerConfig
#define soap_PATCH_tev__EventBrokerConfig(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tev__EventBrokerConfig(soap, data), 0) || soap_put_tev__EventBrokerConfig(soap, data, "tev:EventBrokerConfig", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tev__EventBrokerConfig
#define soap_POST_send_tev__EventBrokerConfig(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tev__EventBrokerConfig(soap, data), 0) || soap_put_tev__EventBrokerConfig(soap, data, "tev:EventBrokerConfig", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tev__EventBrokerConfig * SOAP_FMAC4 soap_get_tev__EventBrokerConfig(struct soap*, struct tev__EventBrokerConfig *, const char*, const char*);

#ifndef soap_read_tev__EventBrokerConfig
#define soap_read_tev__EventBrokerConfig(soap, data) ( ((data) ? (soap_default_tev__EventBrokerConfig(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tev__EventBrokerConfig(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tev__EventBrokerConfig
#define soap_GET_tev__EventBrokerConfig(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tev__EventBrokerConfig(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tev__EventBrokerConfig
#define soap_POST_recv_tev__EventBrokerConfig(soap, data) ( soap_read_tev__EventBrokerConfig(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tev__Capabilities_DEFINED
#define SOAP_TYPE_tev__Capabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tev__Capabilities(struct soap*, struct tev__Capabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tev__Capabilities(struct soap*, const struct tev__Capabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tev__Capabilities(struct soap*, const char*, int, const struct tev__Capabilities *, const char*);
SOAP_FMAC3 struct tev__Capabilities * SOAP_FMAC4 soap_in_tev__Capabilities(struct soap*, const char*, struct tev__Capabilities *, const char*);

SOAP_FMAC3 struct tev__Capabilities * SOAP_FMAC4 soap_new_tev__Capabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tev__Capabilities(struct soap*, const struct tev__Capabilities *, const char*, const char*);

#ifndef soap_write_tev__Capabilities
#define soap_write_tev__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tev__Capabilities(soap, data), 0) || soap_put_tev__Capabilities(soap, data, "tev:Capabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tev__Capabilities
#define soap_PUT_tev__Capabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tev__Capabilities(soap, data), 0) || soap_put_tev__Capabilities(soap, data, "tev:Capabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tev__Capabilities
#define soap_PATCH_tev__Capabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tev__Capabilities(soap, data), 0) || soap_put_tev__Capabilities(soap, data, "tev:Capabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tev__Capabilities
#define soap_POST_send_tev__Capabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tev__Capabilities(soap, data), 0) || soap_put_tev__Capabilities(soap, data, "tev:Capabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tev__Capabilities * SOAP_FMAC4 soap_get_tev__Capabilities(struct soap*, struct tev__Capabilities *, const char*, const char*);

#ifndef soap_read_tev__Capabilities
#define soap_read_tev__Capabilities(soap, data) ( ((data) ? (soap_default_tev__Capabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tev__Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tev__Capabilities
#define soap_GET_tev__Capabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tev__Capabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tev__Capabilities
#define soap_POST_recv_tev__Capabilities(soap, data) ( soap_read_tev__Capabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_new_SOAP_ENV__Fault(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Fault
#define soap_PUT_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Fault
#define soap_PATCH_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Fault
#define soap_POST_send_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Fault
#define soap_GET_SOAP_ENV__Fault(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Fault(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Fault
#define soap_POST_recv_SOAP_ENV__Fault(soap, data) ( soap_read_SOAP_ENV__Fault(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_new_SOAP_ENV__Reason(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Reason
#define soap_PUT_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Reason
#define soap_PATCH_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Reason
#define soap_POST_send_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Reason
#define soap_GET_SOAP_ENV__Reason(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Reason(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Reason
#define soap_POST_recv_SOAP_ENV__Reason(soap, data) ( soap_read_SOAP_ENV__Reason(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_new_SOAP_ENV__Code(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Code
#define soap_PUT_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Code
#define soap_PATCH_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Code
#define soap_POST_send_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Code
#define soap_GET_SOAP_ENV__Code(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Code(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Code
#define soap_POST_recv_SOAP_ENV__Code(soap, data) ( soap_read_SOAP_ENV__Code(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_new_SOAP_ENV__Detail(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Detail
#define soap_PUT_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Detail
#define soap_PATCH_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Detail
#define soap_POST_send_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Detail
#define soap_GET_SOAP_ENV__Detail(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Detail(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Detail
#define soap_POST_recv_SOAP_ENV__Detail(soap, data) ( soap_read_SOAP_ENV__Detail(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_new_SOAP_ENV__Header(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Header
#define soap_PUT_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Header
#define soap_PATCH_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Header
#define soap_POST_send_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Header
#define soap_GET_SOAP_ENV__Header(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Header(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Header
#define soap_POST_recv_SOAP_ENV__Header(soap, data) ( soap_read_SOAP_ENV__Header(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef SOAP_TYPE_chan__ChannelInstanceType_DEFINED
#define SOAP_TYPE_chan__ChannelInstanceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_chan__ChannelInstanceType(struct soap*, const char*, int, const struct chan__ChannelInstanceType *, const char*);
SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_in_chan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType *, const char*);

SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_new_chan__ChannelInstanceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *, const char*, const char*);

#ifndef soap_write_chan__ChannelInstanceType
#define soap_write_chan__ChannelInstanceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_chan__ChannelInstanceType
#define soap_PUT_chan__ChannelInstanceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_chan__ChannelInstanceType
#define soap_PATCH_chan__ChannelInstanceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_chan__ChannelInstanceType
#define soap_POST_send_chan__ChannelInstanceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_get_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *, const char*, const char*);

#ifndef soap_read_chan__ChannelInstanceType
#define soap_read_chan__ChannelInstanceType(soap, data) ( ((data) ? (soap_default_chan__ChannelInstanceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_chan__ChannelInstanceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_chan__ChannelInstanceType
#define soap_GET_chan__ChannelInstanceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_chan__ChannelInstanceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_chan__ChannelInstanceType
#define soap_POST_recv_chan__ChannelInstanceType(soap, data) ( soap_read_chan__ChannelInstanceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _wsa5__ProblemAction is a typedef synonym of wsa5__ProblemActionType */

#ifndef SOAP_TYPE__wsa5__ProblemAction_DEFINED
#define SOAP_TYPE__wsa5__ProblemAction_DEFINED

#define soap_default__wsa5__ProblemAction soap_default_wsa5__ProblemActionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *);

#define soap_serialize__wsa5__ProblemAction soap_serialize_wsa5__ProblemActionType


#define soap__wsa5__ProblemAction2s soap_wsa5__ProblemActionType2s


#define soap_out__wsa5__ProblemAction soap_out_wsa5__ProblemActionType


#define soap_s2_wsa5__ProblemAction soap_s2wsa5__ProblemActionType


#define soap_in__wsa5__ProblemAction soap_in_wsa5__ProblemActionType

#define soap_new__wsa5__ProblemAction soap_new_wsa5__ProblemActionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ProblemAction(struct soap*, const struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_write__wsa5__ProblemAction
#define soap_write__wsa5__ProblemAction(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__ProblemAction(soap, data), 0) || soap_put__wsa5__ProblemAction(soap, data, "wsa5:ProblemAction", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__ProblemAction
#define soap_PUT__wsa5__ProblemAction(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ProblemAction(soap, data), 0) || soap_put__wsa5__ProblemAction(soap, data, "wsa5:ProblemAction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__ProblemAction
#define soap_PATCH__wsa5__ProblemAction(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ProblemAction(soap, data), 0) || soap_put__wsa5__ProblemAction(soap, data, "wsa5:ProblemAction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__ProblemAction
#define soap_POST_send__wsa5__ProblemAction(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ProblemAction(soap, data), 0) || soap_put__wsa5__ProblemAction(soap, data, "wsa5:ProblemAction", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__ProblemAction soap_get_wsa5__ProblemActionType


#define soap_read__wsa5__ProblemAction soap_read_wsa5__ProblemActionType


#define soap_GET__wsa5__ProblemAction soap_GET_wsa5__ProblemActionType


#define soap_POST_recv__wsa5__ProblemAction soap_POST_recv_wsa5__ProblemActionType

#endif
/* _wsa5__FaultTo is a typedef synonym of wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__FaultTo_DEFINED
#define SOAP_TYPE__wsa5__FaultTo_DEFINED

#define soap_default__wsa5__FaultTo soap_default_wsa5__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);

#define soap_serialize__wsa5__FaultTo soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__FaultTo2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__FaultTo soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__FaultTo soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__FaultTo soap_in_wsa5__EndpointReferenceType

#define soap_new__wsa5__FaultTo soap_new_wsa5__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__FaultTo(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa5__FaultTo
#define soap_write__wsa5__FaultTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__FaultTo(soap, data), 0) || soap_put__wsa5__FaultTo(soap, data, "wsa5:FaultTo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__FaultTo
#define soap_PUT__wsa5__FaultTo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__FaultTo(soap, data), 0) || soap_put__wsa5__FaultTo(soap, data, "wsa5:FaultTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__FaultTo
#define soap_PATCH__wsa5__FaultTo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__FaultTo(soap, data), 0) || soap_put__wsa5__FaultTo(soap, data, "wsa5:FaultTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__FaultTo
#define soap_POST_send__wsa5__FaultTo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__FaultTo(soap, data), 0) || soap_put__wsa5__FaultTo(soap, data, "wsa5:FaultTo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__FaultTo soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__FaultTo soap_read_wsa5__EndpointReferenceType


#define soap_GET__wsa5__FaultTo soap_GET_wsa5__EndpointReferenceType


#define soap_POST_recv__wsa5__FaultTo soap_POST_recv_wsa5__EndpointReferenceType

#endif
/* _wsa5__From is a typedef synonym of wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__From_DEFINED
#define SOAP_TYPE__wsa5__From_DEFINED

#define soap_default__wsa5__From soap_default_wsa5__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);

#define soap_serialize__wsa5__From soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__From2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__From soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__From soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__From soap_in_wsa5__EndpointReferenceType

#define soap_new__wsa5__From soap_new_wsa5__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__From(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa5__From
#define soap_write__wsa5__From(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__From(soap, data), 0) || soap_put__wsa5__From(soap, data, "wsa5:From", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__From
#define soap_PUT__wsa5__From(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__From(soap, data), 0) || soap_put__wsa5__From(soap, data, "wsa5:From", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__From
#define soap_PATCH__wsa5__From(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__From(soap, data), 0) || soap_put__wsa5__From(soap, data, "wsa5:From", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__From
#define soap_POST_send__wsa5__From(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__From(soap, data), 0) || soap_put__wsa5__From(soap, data, "wsa5:From", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__From soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__From soap_read_wsa5__EndpointReferenceType


#define soap_GET__wsa5__From soap_GET_wsa5__EndpointReferenceType


#define soap_POST_recv__wsa5__From soap_POST_recv_wsa5__EndpointReferenceType

#endif
/* _wsa5__ReplyTo is a typedef synonym of wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__ReplyTo_DEFINED
#define SOAP_TYPE__wsa5__ReplyTo_DEFINED

#define soap_default__wsa5__ReplyTo soap_default_wsa5__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);

#define soap_serialize__wsa5__ReplyTo soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__ReplyTo2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__ReplyTo soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__ReplyTo soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__ReplyTo soap_in_wsa5__EndpointReferenceType

#define soap_new__wsa5__ReplyTo soap_new_wsa5__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ReplyTo(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa5__ReplyTo
#define soap_write__wsa5__ReplyTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__ReplyTo(soap, data), 0) || soap_put__wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__ReplyTo
#define soap_PUT__wsa5__ReplyTo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReplyTo(soap, data), 0) || soap_put__wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__ReplyTo
#define soap_PATCH__wsa5__ReplyTo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReplyTo(soap, data), 0) || soap_put__wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__ReplyTo
#define soap_POST_send__wsa5__ReplyTo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReplyTo(soap, data), 0) || soap_put__wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__ReplyTo soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__ReplyTo soap_read_wsa5__EndpointReferenceType


#define soap_GET__wsa5__ReplyTo soap_GET_wsa5__EndpointReferenceType


#define soap_POST_recv__wsa5__ReplyTo soap_POST_recv_wsa5__EndpointReferenceType

#endif
/* _wsa5__RelatesTo is a typedef synonym of wsa5__RelatesToType */

#ifndef SOAP_TYPE__wsa5__RelatesTo_DEFINED
#define SOAP_TYPE__wsa5__RelatesTo_DEFINED

#define soap_default__wsa5__RelatesTo soap_default_wsa5__RelatesToType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *);

#define soap_serialize__wsa5__RelatesTo soap_serialize_wsa5__RelatesToType


#define soap__wsa5__RelatesTo2s soap_wsa5__RelatesToType2s


#define soap_out__wsa5__RelatesTo soap_out_wsa5__RelatesToType


#define soap_s2_wsa5__RelatesTo soap_s2wsa5__RelatesToType


#define soap_in__wsa5__RelatesTo soap_in_wsa5__RelatesToType

#define soap_new__wsa5__RelatesTo soap_new_wsa5__RelatesToType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__RelatesTo(struct soap*, const struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_write__wsa5__RelatesTo
#define soap_write__wsa5__RelatesTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__RelatesTo(soap, data), 0) || soap_put__wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__RelatesTo
#define soap_PUT__wsa5__RelatesTo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__RelatesTo(soap, data), 0) || soap_put__wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__RelatesTo
#define soap_PATCH__wsa5__RelatesTo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__RelatesTo(soap, data), 0) || soap_put__wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__RelatesTo
#define soap_POST_send__wsa5__RelatesTo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__RelatesTo(soap, data), 0) || soap_put__wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__RelatesTo soap_get_wsa5__RelatesToType


#define soap_read__wsa5__RelatesTo soap_read_wsa5__RelatesToType


#define soap_GET__wsa5__RelatesTo soap_GET_wsa5__RelatesToType


#define soap_POST_recv__wsa5__RelatesTo soap_POST_recv_wsa5__RelatesToType

#endif
/* _wsa5__Metadata is a typedef synonym of wsa5__MetadataType */

#ifndef SOAP_TYPE__wsa5__Metadata_DEFINED
#define SOAP_TYPE__wsa5__Metadata_DEFINED

#define soap_default__wsa5__Metadata soap_default_wsa5__MetadataType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *);

#define soap_serialize__wsa5__Metadata soap_serialize_wsa5__MetadataType


#define soap__wsa5__Metadata2s soap_wsa5__MetadataType2s


#define soap_out__wsa5__Metadata soap_out_wsa5__MetadataType


#define soap_s2_wsa5__Metadata soap_s2wsa5__MetadataType


#define soap_in__wsa5__Metadata soap_in_wsa5__MetadataType

#define soap_new__wsa5__Metadata soap_new_wsa5__MetadataType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__Metadata(struct soap*, const struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_write__wsa5__Metadata
#define soap_write__wsa5__Metadata(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__Metadata(soap, data), 0) || soap_put__wsa5__Metadata(soap, data, "wsa5:Metadata", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__Metadata
#define soap_PUT__wsa5__Metadata(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__Metadata(soap, data), 0) || soap_put__wsa5__Metadata(soap, data, "wsa5:Metadata", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__Metadata
#define soap_PATCH__wsa5__Metadata(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__Metadata(soap, data), 0) || soap_put__wsa5__Metadata(soap, data, "wsa5:Metadata", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__Metadata
#define soap_POST_send__wsa5__Metadata(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__Metadata(soap, data), 0) || soap_put__wsa5__Metadata(soap, data, "wsa5:Metadata", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__Metadata soap_get_wsa5__MetadataType


#define soap_read__wsa5__Metadata soap_read_wsa5__MetadataType


#define soap_GET__wsa5__Metadata soap_GET_wsa5__MetadataType


#define soap_POST_recv__wsa5__Metadata soap_POST_recv_wsa5__MetadataType

#endif
/* _wsa5__ReferenceParameters is a typedef synonym of wsa5__ReferenceParametersType */

#ifndef SOAP_TYPE__wsa5__ReferenceParameters_DEFINED
#define SOAP_TYPE__wsa5__ReferenceParameters_DEFINED

#define soap_default__wsa5__ReferenceParameters soap_default_wsa5__ReferenceParametersType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *);

#define soap_serialize__wsa5__ReferenceParameters soap_serialize_wsa5__ReferenceParametersType


#define soap__wsa5__ReferenceParameters2s soap_wsa5__ReferenceParametersType2s


#define soap_out__wsa5__ReferenceParameters soap_out_wsa5__ReferenceParametersType


#define soap_s2_wsa5__ReferenceParameters soap_s2wsa5__ReferenceParametersType


#define soap_in__wsa5__ReferenceParameters soap_in_wsa5__ReferenceParametersType

#define soap_new__wsa5__ReferenceParameters soap_new_wsa5__ReferenceParametersType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ReferenceParameters(struct soap*, const struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_write__wsa5__ReferenceParameters
#define soap_write__wsa5__ReferenceParameters(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__ReferenceParameters(soap, data), 0) || soap_put__wsa5__ReferenceParameters(soap, data, "wsa5:ReferenceParameters", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__ReferenceParameters
#define soap_PUT__wsa5__ReferenceParameters(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReferenceParameters(soap, data), 0) || soap_put__wsa5__ReferenceParameters(soap, data, "wsa5:ReferenceParameters", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__ReferenceParameters
#define soap_PATCH__wsa5__ReferenceParameters(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReferenceParameters(soap, data), 0) || soap_put__wsa5__ReferenceParameters(soap, data, "wsa5:ReferenceParameters", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__ReferenceParameters
#define soap_POST_send__wsa5__ReferenceParameters(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReferenceParameters(soap, data), 0) || soap_put__wsa5__ReferenceParameters(soap, data, "wsa5:ReferenceParameters", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__ReferenceParameters soap_get_wsa5__ReferenceParametersType


#define soap_read__wsa5__ReferenceParameters soap_read_wsa5__ReferenceParametersType


#define soap_GET__wsa5__ReferenceParameters soap_GET_wsa5__ReferenceParametersType


#define soap_POST_recv__wsa5__ReferenceParameters soap_POST_recv_wsa5__ReferenceParametersType

#endif
/* _wsa5__EndpointReference is a typedef synonym of wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__EndpointReference_DEFINED
#define SOAP_TYPE__wsa5__EndpointReference_DEFINED

#define soap_default__wsa5__EndpointReference soap_default_wsa5__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);

#define soap_serialize__wsa5__EndpointReference soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__EndpointReference2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__EndpointReference soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__EndpointReference soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__EndpointReference soap_in_wsa5__EndpointReferenceType

#define soap_new__wsa5__EndpointReference soap_new_wsa5__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__EndpointReference(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa5__EndpointReference
#define soap_write__wsa5__EndpointReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__EndpointReference(soap, data), 0) || soap_put__wsa5__EndpointReference(soap, data, "wsa5:EndpointReference", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__EndpointReference
#define soap_PUT__wsa5__EndpointReference(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__EndpointReference(soap, data), 0) || soap_put__wsa5__EndpointReference(soap, data, "wsa5:EndpointReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__EndpointReference
#define soap_PATCH__wsa5__EndpointReference(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__EndpointReference(soap, data), 0) || soap_put__wsa5__EndpointReference(soap, data, "wsa5:EndpointReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__EndpointReference
#define soap_POST_send__wsa5__EndpointReference(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__EndpointReference(soap, data), 0) || soap_put__wsa5__EndpointReference(soap, data, "wsa5:EndpointReference", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__EndpointReference soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__EndpointReference soap_read_wsa5__EndpointReferenceType


#define soap_GET__wsa5__EndpointReference soap_GET_wsa5__EndpointReferenceType


#define soap_POST_recv__wsa5__EndpointReference soap_POST_recv_wsa5__EndpointReferenceType

#endif

#ifndef SOAP_TYPE_wsa5__ProblemActionType_DEFINED
#define SOAP_TYPE_wsa5__ProblemActionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ProblemActionType(struct soap*, const char*, int, const struct wsa5__ProblemActionType *, const char*);
SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_in_wsa5__ProblemActionType(struct soap*, const char*, struct wsa5__ProblemActionType *, const char*);

SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_new_wsa5__ProblemActionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_write_wsa5__ProblemActionType
#define soap_write_wsa5__ProblemActionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__ProblemActionType
#define soap_PUT_wsa5__ProblemActionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__ProblemActionType
#define soap_PATCH_wsa5__ProblemActionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__ProblemActionType
#define soap_POST_send_wsa5__ProblemActionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_get_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_read_wsa5__ProblemActionType
#define soap_read_wsa5__ProblemActionType(soap, data) ( ((data) ? (soap_default_wsa5__ProblemActionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__ProblemActionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__ProblemActionType
#define soap_GET_wsa5__ProblemActionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__ProblemActionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__ProblemActionType
#define soap_POST_recv_wsa5__ProblemActionType(soap, data) ( soap_read_wsa5__ProblemActionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__RelatesToType_DEFINED
#define SOAP_TYPE_wsa5__RelatesToType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelatesToType(struct soap*, const char*, int, const struct wsa5__RelatesToType *, const char*);
SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_in_wsa5__RelatesToType(struct soap*, const char*, struct wsa5__RelatesToType *, const char*);

SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_new_wsa5__RelatesToType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_write_wsa5__RelatesToType
#define soap_write_wsa5__RelatesToType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__RelatesToType
#define soap_PUT_wsa5__RelatesToType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__RelatesToType
#define soap_PATCH_wsa5__RelatesToType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__RelatesToType
#define soap_POST_send_wsa5__RelatesToType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_get_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_read_wsa5__RelatesToType
#define soap_read_wsa5__RelatesToType(soap, data) ( ((data) ? (soap_default_wsa5__RelatesToType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__RelatesToType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__RelatesToType
#define soap_GET_wsa5__RelatesToType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__RelatesToType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__RelatesToType
#define soap_POST_recv_wsa5__RelatesToType(soap, data) ( soap_read_wsa5__RelatesToType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__MetadataType_DEFINED
#define SOAP_TYPE_wsa5__MetadataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__MetadataType(struct soap*, const char*, int, const struct wsa5__MetadataType *, const char*);
SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_in_wsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType *, const char*);

SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_new_wsa5__MetadataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_write_wsa5__MetadataType
#define soap_write_wsa5__MetadataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__MetadataType
#define soap_PUT_wsa5__MetadataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__MetadataType
#define soap_PATCH_wsa5__MetadataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__MetadataType
#define soap_POST_send_wsa5__MetadataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_get_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_read_wsa5__MetadataType
#define soap_read_wsa5__MetadataType(soap, data) ( ((data) ? (soap_default_wsa5__MetadataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__MetadataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__MetadataType
#define soap_GET_wsa5__MetadataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__MetadataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__MetadataType
#define soap_POST_recv_wsa5__MetadataType(soap, data) ( soap_read_wsa5__MetadataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__ReferenceParametersType_DEFINED
#define SOAP_TYPE_wsa5__ReferenceParametersType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ReferenceParametersType(struct soap*, const char*, int, const struct wsa5__ReferenceParametersType *, const char*);
SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_in_wsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType *, const char*);

SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_new_wsa5__ReferenceParametersType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_write_wsa5__ReferenceParametersType
#define soap_write_wsa5__ReferenceParametersType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__ReferenceParametersType
#define soap_PUT_wsa5__ReferenceParametersType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__ReferenceParametersType
#define soap_PATCH_wsa5__ReferenceParametersType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__ReferenceParametersType
#define soap_POST_send_wsa5__ReferenceParametersType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_get_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_read_wsa5__ReferenceParametersType
#define soap_read_wsa5__ReferenceParametersType(soap, data) ( ((data) ? (soap_default_wsa5__ReferenceParametersType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__ReferenceParametersType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__ReferenceParametersType
#define soap_GET_wsa5__ReferenceParametersType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__ReferenceParametersType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__ReferenceParametersType
#define soap_POST_recv_wsa5__ReferenceParametersType(soap, data) ( soap_read_wsa5__ReferenceParametersType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__EndpointReferenceType_DEFINED
#define SOAP_TYPE_wsa5__EndpointReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__EndpointReferenceType(struct soap*, const char*, int, const struct wsa5__EndpointReferenceType *, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_in_wsa5__EndpointReferenceType(struct soap*, const char*, struct wsa5__EndpointReferenceType *, const char*);

SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_new_wsa5__EndpointReferenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write_wsa5__EndpointReferenceType
#define soap_write_wsa5__EndpointReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__EndpointReferenceType
#define soap_PUT_wsa5__EndpointReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__EndpointReferenceType
#define soap_PATCH_wsa5__EndpointReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__EndpointReferenceType
#define soap_POST_send_wsa5__EndpointReferenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_get_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_read_wsa5__EndpointReferenceType
#define soap_read_wsa5__EndpointReferenceType(soap, data) ( ((data) ? (soap_default_wsa5__EndpointReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__EndpointReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__EndpointReferenceType
#define soap_GET_wsa5__EndpointReferenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__EndpointReferenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__EndpointReferenceType
#define soap_POST_recv_wsa5__EndpointReferenceType(soap, data) ( soap_read_wsa5__EndpointReferenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__ResumeSubscriptionResponse_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__ResumeSubscriptionResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__ResumeSubscriptionResponse(struct soap*, const char *, int, struct _wsnt__ResumeSubscriptionResponse *const*, const char *);
SOAP_FMAC3 struct _wsnt__ResumeSubscriptionResponse ** SOAP_FMAC4 soap_in_PointerTo_wsnt__ResumeSubscriptionResponse(struct soap*, const char*, struct _wsnt__ResumeSubscriptionResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__ResumeSubscriptionResponse ** SOAP_FMAC4 soap_get_PointerTo_wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__ResumeSubscription_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__ResumeSubscription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__ResumeSubscription(struct soap*, const char *, int, struct _wsnt__ResumeSubscription *const*, const char *);
SOAP_FMAC3 struct _wsnt__ResumeSubscription ** SOAP_FMAC4 soap_in_PointerTo_wsnt__ResumeSubscription(struct soap*, const char*, struct _wsnt__ResumeSubscription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__ResumeSubscription ** SOAP_FMAC4 soap_get_PointerTo_wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__PauseSubscriptionResponse_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__PauseSubscriptionResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__PauseSubscriptionResponse(struct soap*, const char *, int, struct _wsnt__PauseSubscriptionResponse *const*, const char *);
SOAP_FMAC3 struct _wsnt__PauseSubscriptionResponse ** SOAP_FMAC4 soap_in_PointerTo_wsnt__PauseSubscriptionResponse(struct soap*, const char*, struct _wsnt__PauseSubscriptionResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__PauseSubscriptionResponse ** SOAP_FMAC4 soap_get_PointerTo_wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__PauseSubscription_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__PauseSubscription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__PauseSubscription(struct soap*, const char *, int, struct _wsnt__PauseSubscription *const*, const char *);
SOAP_FMAC3 struct _wsnt__PauseSubscription ** SOAP_FMAC4 soap_in_PointerTo_wsnt__PauseSubscription(struct soap*, const char*, struct _wsnt__PauseSubscription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__PauseSubscription ** SOAP_FMAC4 soap_get_PointerTo_wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__CreatePullPointResponse_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__CreatePullPointResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__CreatePullPointResponse(struct soap*, const char *, int, struct _wsnt__CreatePullPointResponse *const*, const char *);
SOAP_FMAC3 struct _wsnt__CreatePullPointResponse ** SOAP_FMAC4 soap_in_PointerTo_wsnt__CreatePullPointResponse(struct soap*, const char*, struct _wsnt__CreatePullPointResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__CreatePullPointResponse ** SOAP_FMAC4 soap_get_PointerTo_wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__CreatePullPoint_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__CreatePullPoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__CreatePullPoint(struct soap*, const char *, int, struct _wsnt__CreatePullPoint *const*, const char *);
SOAP_FMAC3 struct _wsnt__CreatePullPoint ** SOAP_FMAC4 soap_in_PointerTo_wsnt__CreatePullPoint(struct soap*, const char*, struct _wsnt__CreatePullPoint **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__CreatePullPoint ** SOAP_FMAC4 soap_get_PointerTo_wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__DestroyPullPointResponse_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__DestroyPullPointResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__DestroyPullPointResponse(struct soap*, const char *, int, struct _wsnt__DestroyPullPointResponse *const*, const char *);
SOAP_FMAC3 struct _wsnt__DestroyPullPointResponse ** SOAP_FMAC4 soap_in_PointerTo_wsnt__DestroyPullPointResponse(struct soap*, const char*, struct _wsnt__DestroyPullPointResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__DestroyPullPointResponse ** SOAP_FMAC4 soap_get_PointerTo_wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__DestroyPullPoint_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__DestroyPullPoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__DestroyPullPoint(struct soap*, const char *, int, struct _wsnt__DestroyPullPoint *const*, const char *);
SOAP_FMAC3 struct _wsnt__DestroyPullPoint ** SOAP_FMAC4 soap_in_PointerTo_wsnt__DestroyPullPoint(struct soap*, const char*, struct _wsnt__DestroyPullPoint **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__DestroyPullPoint ** SOAP_FMAC4 soap_get_PointerTo_wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__GetMessagesResponse_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__GetMessagesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__GetMessagesResponse(struct soap*, const char *, int, struct _wsnt__GetMessagesResponse *const*, const char *);
SOAP_FMAC3 struct _wsnt__GetMessagesResponse ** SOAP_FMAC4 soap_in_PointerTo_wsnt__GetMessagesResponse(struct soap*, const char*, struct _wsnt__GetMessagesResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__GetMessagesResponse ** SOAP_FMAC4 soap_get_PointerTo_wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__GetMessages_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__GetMessages_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__GetMessages(struct soap*, const char *, int, struct _wsnt__GetMessages *const*, const char *);
SOAP_FMAC3 struct _wsnt__GetMessages ** SOAP_FMAC4 soap_in_PointerTo_wsnt__GetMessages(struct soap*, const char*, struct _wsnt__GetMessages **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__GetMessages ** SOAP_FMAC4 soap_get_PointerTo_wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__Notify_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__Notify_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__Notify(struct soap*, struct _wsnt__Notify *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__Notify(struct soap*, const char *, int, struct _wsnt__Notify *const*, const char *);
SOAP_FMAC3 struct _wsnt__Notify ** SOAP_FMAC4 soap_in_PointerTo_wsnt__Notify(struct soap*, const char*, struct _wsnt__Notify **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__Notify(struct soap*, struct _wsnt__Notify *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__Notify ** SOAP_FMAC4 soap_get_PointerTo_wsnt__Notify(struct soap*, struct _wsnt__Notify **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__GetCurrentMessageResponse_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__GetCurrentMessageResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__GetCurrentMessageResponse(struct soap*, const char *, int, struct _wsnt__GetCurrentMessageResponse *const*, const char *);
SOAP_FMAC3 struct _wsnt__GetCurrentMessageResponse ** SOAP_FMAC4 soap_in_PointerTo_wsnt__GetCurrentMessageResponse(struct soap*, const char*, struct _wsnt__GetCurrentMessageResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__GetCurrentMessageResponse ** SOAP_FMAC4 soap_get_PointerTo_wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__GetCurrentMessage_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__GetCurrentMessage_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__GetCurrentMessage(struct soap*, const char *, int, struct _wsnt__GetCurrentMessage *const*, const char *);
SOAP_FMAC3 struct _wsnt__GetCurrentMessage ** SOAP_FMAC4 soap_in_PointerTo_wsnt__GetCurrentMessage(struct soap*, const char*, struct _wsnt__GetCurrentMessage **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__GetCurrentMessage ** SOAP_FMAC4 soap_get_PointerTo_wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__SubscribeResponse_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__SubscribeResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__SubscribeResponse(struct soap*, const char *, int, struct _wsnt__SubscribeResponse *const*, const char *);
SOAP_FMAC3 struct _wsnt__SubscribeResponse ** SOAP_FMAC4 soap_in_PointerTo_wsnt__SubscribeResponse(struct soap*, const char*, struct _wsnt__SubscribeResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeResponse ** SOAP_FMAC4 soap_get_PointerTo_wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__Subscribe_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__Subscribe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__Subscribe(struct soap*, const char *, int, struct _wsnt__Subscribe *const*, const char *);
SOAP_FMAC3 struct _wsnt__Subscribe ** SOAP_FMAC4 soap_in_PointerTo_wsnt__Subscribe(struct soap*, const char*, struct _wsnt__Subscribe **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__Subscribe ** SOAP_FMAC4 soap_get_PointerTo_wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__RenewResponse_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__RenewResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__RenewResponse(struct soap*, const char *, int, struct _wsnt__RenewResponse *const*, const char *);
SOAP_FMAC3 struct _wsnt__RenewResponse ** SOAP_FMAC4 soap_in_PointerTo_wsnt__RenewResponse(struct soap*, const char*, struct _wsnt__RenewResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__RenewResponse ** SOAP_FMAC4 soap_get_PointerTo_wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__Renew_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__Renew_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__Renew(struct soap*, struct _wsnt__Renew *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__Renew(struct soap*, const char *, int, struct _wsnt__Renew *const*, const char *);
SOAP_FMAC3 struct _wsnt__Renew ** SOAP_FMAC4 soap_in_PointerTo_wsnt__Renew(struct soap*, const char*, struct _wsnt__Renew **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__Renew(struct soap*, struct _wsnt__Renew *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__Renew ** SOAP_FMAC4 soap_get_PointerTo_wsnt__Renew(struct soap*, struct _wsnt__Renew **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__GetEventBrokersResponse_DEFINED
#define SOAP_TYPE_PointerTo_tev__GetEventBrokersResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__GetEventBrokersResponse(struct soap*, struct _tev__GetEventBrokersResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__GetEventBrokersResponse(struct soap*, const char *, int, struct _tev__GetEventBrokersResponse *const*, const char *);
SOAP_FMAC3 struct _tev__GetEventBrokersResponse ** SOAP_FMAC4 soap_in_PointerTo_tev__GetEventBrokersResponse(struct soap*, const char*, struct _tev__GetEventBrokersResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__GetEventBrokersResponse(struct soap*, struct _tev__GetEventBrokersResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__GetEventBrokersResponse ** SOAP_FMAC4 soap_get_PointerTo_tev__GetEventBrokersResponse(struct soap*, struct _tev__GetEventBrokersResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__GetEventBrokers_DEFINED
#define SOAP_TYPE_PointerTo_tev__GetEventBrokers_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__GetEventBrokers(struct soap*, struct _tev__GetEventBrokers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__GetEventBrokers(struct soap*, const char *, int, struct _tev__GetEventBrokers *const*, const char *);
SOAP_FMAC3 struct _tev__GetEventBrokers ** SOAP_FMAC4 soap_in_PointerTo_tev__GetEventBrokers(struct soap*, const char*, struct _tev__GetEventBrokers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__GetEventBrokers(struct soap*, struct _tev__GetEventBrokers *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__GetEventBrokers ** SOAP_FMAC4 soap_get_PointerTo_tev__GetEventBrokers(struct soap*, struct _tev__GetEventBrokers **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__DeleteEventBrokerResponse_DEFINED
#define SOAP_TYPE_PointerTo_tev__DeleteEventBrokerResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__DeleteEventBrokerResponse(struct soap*, struct _tev__DeleteEventBrokerResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__DeleteEventBrokerResponse(struct soap*, const char *, int, struct _tev__DeleteEventBrokerResponse *const*, const char *);
SOAP_FMAC3 struct _tev__DeleteEventBrokerResponse ** SOAP_FMAC4 soap_in_PointerTo_tev__DeleteEventBrokerResponse(struct soap*, const char*, struct _tev__DeleteEventBrokerResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__DeleteEventBrokerResponse(struct soap*, struct _tev__DeleteEventBrokerResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__DeleteEventBrokerResponse ** SOAP_FMAC4 soap_get_PointerTo_tev__DeleteEventBrokerResponse(struct soap*, struct _tev__DeleteEventBrokerResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__DeleteEventBroker_DEFINED
#define SOAP_TYPE_PointerTo_tev__DeleteEventBroker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__DeleteEventBroker(struct soap*, struct _tev__DeleteEventBroker *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__DeleteEventBroker(struct soap*, const char *, int, struct _tev__DeleteEventBroker *const*, const char *);
SOAP_FMAC3 struct _tev__DeleteEventBroker ** SOAP_FMAC4 soap_in_PointerTo_tev__DeleteEventBroker(struct soap*, const char*, struct _tev__DeleteEventBroker **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__DeleteEventBroker(struct soap*, struct _tev__DeleteEventBroker *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__DeleteEventBroker ** SOAP_FMAC4 soap_get_PointerTo_tev__DeleteEventBroker(struct soap*, struct _tev__DeleteEventBroker **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__AddEventBrokerResponse_DEFINED
#define SOAP_TYPE_PointerTo_tev__AddEventBrokerResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__AddEventBrokerResponse(struct soap*, struct _tev__AddEventBrokerResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__AddEventBrokerResponse(struct soap*, const char *, int, struct _tev__AddEventBrokerResponse *const*, const char *);
SOAP_FMAC3 struct _tev__AddEventBrokerResponse ** SOAP_FMAC4 soap_in_PointerTo_tev__AddEventBrokerResponse(struct soap*, const char*, struct _tev__AddEventBrokerResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__AddEventBrokerResponse(struct soap*, struct _tev__AddEventBrokerResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__AddEventBrokerResponse ** SOAP_FMAC4 soap_get_PointerTo_tev__AddEventBrokerResponse(struct soap*, struct _tev__AddEventBrokerResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__AddEventBroker_DEFINED
#define SOAP_TYPE_PointerTo_tev__AddEventBroker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__AddEventBroker(struct soap*, struct _tev__AddEventBroker *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__AddEventBroker(struct soap*, const char *, int, struct _tev__AddEventBroker *const*, const char *);
SOAP_FMAC3 struct _tev__AddEventBroker ** SOAP_FMAC4 soap_in_PointerTo_tev__AddEventBroker(struct soap*, const char*, struct _tev__AddEventBroker **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__AddEventBroker(struct soap*, struct _tev__AddEventBroker *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__AddEventBroker ** SOAP_FMAC4 soap_get_PointerTo_tev__AddEventBroker(struct soap*, struct _tev__AddEventBroker **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__GetEventPropertiesResponse_DEFINED
#define SOAP_TYPE_PointerTo_tev__GetEventPropertiesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__GetEventPropertiesResponse(struct soap*, const char *, int, struct _tev__GetEventPropertiesResponse *const*, const char *);
SOAP_FMAC3 struct _tev__GetEventPropertiesResponse ** SOAP_FMAC4 soap_in_PointerTo_tev__GetEventPropertiesResponse(struct soap*, const char*, struct _tev__GetEventPropertiesResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__GetEventPropertiesResponse ** SOAP_FMAC4 soap_get_PointerTo_tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__GetEventProperties_DEFINED
#define SOAP_TYPE_PointerTo_tev__GetEventProperties_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__GetEventProperties(struct soap*, const char *, int, struct _tev__GetEventProperties *const*, const char *);
SOAP_FMAC3 struct _tev__GetEventProperties ** SOAP_FMAC4 soap_in_PointerTo_tev__GetEventProperties(struct soap*, const char*, struct _tev__GetEventProperties **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__GetEventProperties ** SOAP_FMAC4 soap_get_PointerTo_tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__CreatePullPointSubscriptionResponse_DEFINED
#define SOAP_TYPE_PointerTo_tev__CreatePullPointSubscriptionResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__CreatePullPointSubscriptionResponse(struct soap*, const char *, int, struct _tev__CreatePullPointSubscriptionResponse *const*, const char *);
SOAP_FMAC3 struct _tev__CreatePullPointSubscriptionResponse ** SOAP_FMAC4 soap_in_PointerTo_tev__CreatePullPointSubscriptionResponse(struct soap*, const char*, struct _tev__CreatePullPointSubscriptionResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__CreatePullPointSubscriptionResponse ** SOAP_FMAC4 soap_get_PointerTo_tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__CreatePullPointSubscription_DEFINED
#define SOAP_TYPE_PointerTo_tev__CreatePullPointSubscription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__CreatePullPointSubscription(struct soap*, const char *, int, struct _tev__CreatePullPointSubscription *const*, const char *);
SOAP_FMAC3 struct _tev__CreatePullPointSubscription ** SOAP_FMAC4 soap_in_PointerTo_tev__CreatePullPointSubscription(struct soap*, const char*, struct _tev__CreatePullPointSubscription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__CreatePullPointSubscription ** SOAP_FMAC4 soap_get_PointerTo_tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__GetServiceCapabilitiesResponse_DEFINED
#define SOAP_TYPE_PointerTo_tev__GetServiceCapabilitiesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__GetServiceCapabilitiesResponse(struct soap*, const char *, int, struct _tev__GetServiceCapabilitiesResponse *const*, const char *);
SOAP_FMAC3 struct _tev__GetServiceCapabilitiesResponse ** SOAP_FMAC4 soap_in_PointerTo_tev__GetServiceCapabilitiesResponse(struct soap*, const char*, struct _tev__GetServiceCapabilitiesResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__GetServiceCapabilitiesResponse ** SOAP_FMAC4 soap_get_PointerTo_tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__GetServiceCapabilities_DEFINED
#define SOAP_TYPE_PointerTo_tev__GetServiceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__GetServiceCapabilities(struct soap*, const char *, int, struct _tev__GetServiceCapabilities *const*, const char *);
SOAP_FMAC3 struct _tev__GetServiceCapabilities ** SOAP_FMAC4 soap_in_PointerTo_tev__GetServiceCapabilities(struct soap*, const char*, struct _tev__GetServiceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__GetServiceCapabilities ** SOAP_FMAC4 soap_get_PointerTo_tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnsubscribeResponse_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnsubscribeResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnsubscribeResponse(struct soap*, const char *, int, struct _wsnt__UnsubscribeResponse *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnsubscribeResponse ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnsubscribeResponse(struct soap*, const char*, struct _wsnt__UnsubscribeResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnsubscribeResponse ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__Unsubscribe_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__Unsubscribe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__Unsubscribe(struct soap*, const char *, int, struct _wsnt__Unsubscribe *const*, const char *);
SOAP_FMAC3 struct _wsnt__Unsubscribe ** SOAP_FMAC4 soap_in_PointerTo_wsnt__Unsubscribe(struct soap*, const char*, struct _wsnt__Unsubscribe **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__Unsubscribe ** SOAP_FMAC4 soap_get_PointerTo_wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__SetSynchronizationPointResponse_DEFINED
#define SOAP_TYPE_PointerTo_tev__SetSynchronizationPointResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__SetSynchronizationPointResponse(struct soap*, const char *, int, struct _tev__SetSynchronizationPointResponse *const*, const char *);
SOAP_FMAC3 struct _tev__SetSynchronizationPointResponse ** SOAP_FMAC4 soap_in_PointerTo_tev__SetSynchronizationPointResponse(struct soap*, const char*, struct _tev__SetSynchronizationPointResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__SetSynchronizationPointResponse ** SOAP_FMAC4 soap_get_PointerTo_tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__SetSynchronizationPoint_DEFINED
#define SOAP_TYPE_PointerTo_tev__SetSynchronizationPoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__SetSynchronizationPoint(struct soap*, const char *, int, struct _tev__SetSynchronizationPoint *const*, const char *);
SOAP_FMAC3 struct _tev__SetSynchronizationPoint ** SOAP_FMAC4 soap_in_PointerTo_tev__SetSynchronizationPoint(struct soap*, const char*, struct _tev__SetSynchronizationPoint **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__SetSynchronizationPoint ** SOAP_FMAC4 soap_get_PointerTo_tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__SeekResponse_DEFINED
#define SOAP_TYPE_PointerTo_tev__SeekResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__SeekResponse(struct soap*, struct _tev__SeekResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__SeekResponse(struct soap*, const char *, int, struct _tev__SeekResponse *const*, const char *);
SOAP_FMAC3 struct _tev__SeekResponse ** SOAP_FMAC4 soap_in_PointerTo_tev__SeekResponse(struct soap*, const char*, struct _tev__SeekResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__SeekResponse(struct soap*, struct _tev__SeekResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__SeekResponse ** SOAP_FMAC4 soap_get_PointerTo_tev__SeekResponse(struct soap*, struct _tev__SeekResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__Seek_DEFINED
#define SOAP_TYPE_PointerTo_tev__Seek_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__Seek(struct soap*, struct _tev__Seek *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__Seek(struct soap*, const char *, int, struct _tev__Seek *const*, const char *);
SOAP_FMAC3 struct _tev__Seek ** SOAP_FMAC4 soap_in_PointerTo_tev__Seek(struct soap*, const char*, struct _tev__Seek **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__Seek(struct soap*, struct _tev__Seek *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__Seek ** SOAP_FMAC4 soap_get_PointerTo_tev__Seek(struct soap*, struct _tev__Seek **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__PullMessagesResponse_DEFINED
#define SOAP_TYPE_PointerTo_tev__PullMessagesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__PullMessagesResponse(struct soap*, const char *, int, struct _tev__PullMessagesResponse *const*, const char *);
SOAP_FMAC3 struct _tev__PullMessagesResponse ** SOAP_FMAC4 soap_in_PointerTo_tev__PullMessagesResponse(struct soap*, const char*, struct _tev__PullMessagesResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__PullMessagesResponse ** SOAP_FMAC4 soap_get_PointerTo_tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__PullMessages_DEFINED
#define SOAP_TYPE_PointerTo_tev__PullMessages_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__PullMessages(struct soap*, struct _tev__PullMessages *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__PullMessages(struct soap*, const char *, int, struct _tev__PullMessages *const*, const char *);
SOAP_FMAC3 struct _tev__PullMessages ** SOAP_FMAC4 soap_in_PointerTo_tev__PullMessages(struct soap*, const char*, struct _tev__PullMessages **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__PullMessages(struct soap*, struct _tev__PullMessages *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__PullMessages ** SOAP_FMAC4 soap_get_PointerTo_tev__PullMessages(struct soap*, struct _tev__PullMessages **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__UnsupportedPolicyRequestFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__UnsupportedPolicyRequestFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__UnsupportedPolicyRequestFaultType(struct soap*, struct wsnt__UnsupportedPolicyRequestFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__UnsupportedPolicyRequestFaultType(struct soap*, const char *, int, struct wsnt__UnsupportedPolicyRequestFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__UnsupportedPolicyRequestFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__UnsupportedPolicyRequestFaultType(struct soap*, const char*, struct wsnt__UnsupportedPolicyRequestFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__UnsupportedPolicyRequestFaultType(struct soap*, struct wsnt__UnsupportedPolicyRequestFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__UnsupportedPolicyRequestFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__UnsupportedPolicyRequestFaultType(struct soap*, struct wsnt__UnsupportedPolicyRequestFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__UnrecognizedPolicyRequestFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__UnrecognizedPolicyRequestFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__UnrecognizedPolicyRequestFaultType(struct soap*, struct wsnt__UnrecognizedPolicyRequestFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const char *, int, struct wsnt__UnrecognizedPolicyRequestFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__UnrecognizedPolicyRequestFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const char*, struct wsnt__UnrecognizedPolicyRequestFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__UnrecognizedPolicyRequestFaultType(struct soap*, struct wsnt__UnrecognizedPolicyRequestFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__UnrecognizedPolicyRequestFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__UnrecognizedPolicyRequestFaultType(struct soap*, struct wsnt__UnrecognizedPolicyRequestFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__UnacceptableTerminationTimeFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__UnacceptableTerminationTimeFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__UnacceptableTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableTerminationTimeFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__UnacceptableTerminationTimeFaultType(struct soap*, const char *, int, struct wsnt__UnacceptableTerminationTimeFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__UnacceptableTerminationTimeFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__UnacceptableTerminationTimeFaultType(struct soap*, const char*, struct wsnt__UnacceptableTerminationTimeFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__UnacceptableTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableTerminationTimeFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__UnacceptableTerminationTimeFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__UnacceptableTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableTerminationTimeFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__UnacceptableInitialTerminationTimeFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__UnacceptableInitialTerminationTimeFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableInitialTerminationTimeFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const char *, int, struct wsnt__UnacceptableInitialTerminationTimeFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__UnacceptableInitialTerminationTimeFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const char*, struct wsnt__UnacceptableInitialTerminationTimeFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableInitialTerminationTimeFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__UnacceptableInitialTerminationTimeFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableInitialTerminationTimeFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__UnableToGetMessagesFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__UnableToGetMessagesFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__UnableToGetMessagesFaultType(struct soap*, struct wsnt__UnableToGetMessagesFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__UnableToGetMessagesFaultType(struct soap*, const char *, int, struct wsnt__UnableToGetMessagesFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__UnableToGetMessagesFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__UnableToGetMessagesFaultType(struct soap*, const char*, struct wsnt__UnableToGetMessagesFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__UnableToGetMessagesFaultType(struct soap*, struct wsnt__UnableToGetMessagesFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__UnableToGetMessagesFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__UnableToGetMessagesFaultType(struct soap*, struct wsnt__UnableToGetMessagesFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__UnableToDestroySubscriptionFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__UnableToDestroySubscriptionFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__UnableToDestroySubscriptionFaultType(struct soap*, struct wsnt__UnableToDestroySubscriptionFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__UnableToDestroySubscriptionFaultType(struct soap*, const char *, int, struct wsnt__UnableToDestroySubscriptionFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__UnableToDestroySubscriptionFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__UnableToDestroySubscriptionFaultType(struct soap*, const char*, struct wsnt__UnableToDestroySubscriptionFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__UnableToDestroySubscriptionFaultType(struct soap*, struct wsnt__UnableToDestroySubscriptionFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__UnableToDestroySubscriptionFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__UnableToDestroySubscriptionFaultType(struct soap*, struct wsnt__UnableToDestroySubscriptionFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__UnableToDestroyPullPointFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__UnableToDestroyPullPointFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__UnableToDestroyPullPointFaultType(struct soap*, struct wsnt__UnableToDestroyPullPointFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__UnableToDestroyPullPointFaultType(struct soap*, const char *, int, struct wsnt__UnableToDestroyPullPointFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__UnableToDestroyPullPointFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__UnableToDestroyPullPointFaultType(struct soap*, const char*, struct wsnt__UnableToDestroyPullPointFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__UnableToDestroyPullPointFaultType(struct soap*, struct wsnt__UnableToDestroyPullPointFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__UnableToDestroyPullPointFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__UnableToDestroyPullPointFaultType(struct soap*, struct wsnt__UnableToDestroyPullPointFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__UnableToCreatePullPointFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__UnableToCreatePullPointFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__UnableToCreatePullPointFaultType(struct soap*, struct wsnt__UnableToCreatePullPointFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__UnableToCreatePullPointFaultType(struct soap*, const char *, int, struct wsnt__UnableToCreatePullPointFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__UnableToCreatePullPointFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__UnableToCreatePullPointFaultType(struct soap*, const char*, struct wsnt__UnableToCreatePullPointFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__UnableToCreatePullPointFaultType(struct soap*, struct wsnt__UnableToCreatePullPointFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__UnableToCreatePullPointFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__UnableToCreatePullPointFaultType(struct soap*, struct wsnt__UnableToCreatePullPointFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__TopicNotSupportedFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__TopicNotSupportedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__TopicNotSupportedFaultType(struct soap*, struct wsnt__TopicNotSupportedFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__TopicNotSupportedFaultType(struct soap*, const char *, int, struct wsnt__TopicNotSupportedFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__TopicNotSupportedFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__TopicNotSupportedFaultType(struct soap*, const char*, struct wsnt__TopicNotSupportedFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__TopicNotSupportedFaultType(struct soap*, struct wsnt__TopicNotSupportedFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__TopicNotSupportedFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__TopicNotSupportedFaultType(struct soap*, struct wsnt__TopicNotSupportedFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__TopicExpressionDialectUnknownFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__TopicExpressionDialectUnknownFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__TopicExpressionDialectUnknownFaultType(struct soap*, struct wsnt__TopicExpressionDialectUnknownFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const char *, int, struct wsnt__TopicExpressionDialectUnknownFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__TopicExpressionDialectUnknownFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const char*, struct wsnt__TopicExpressionDialectUnknownFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__TopicExpressionDialectUnknownFaultType(struct soap*, struct wsnt__TopicExpressionDialectUnknownFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__TopicExpressionDialectUnknownFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__TopicExpressionDialectUnknownFaultType(struct soap*, struct wsnt__TopicExpressionDialectUnknownFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__SubscribeCreationFailedFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__SubscribeCreationFailedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__SubscribeCreationFailedFaultType(struct soap*, struct wsnt__SubscribeCreationFailedFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__SubscribeCreationFailedFaultType(struct soap*, const char *, int, struct wsnt__SubscribeCreationFailedFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__SubscribeCreationFailedFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__SubscribeCreationFailedFaultType(struct soap*, const char*, struct wsnt__SubscribeCreationFailedFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__SubscribeCreationFailedFaultType(struct soap*, struct wsnt__SubscribeCreationFailedFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__SubscribeCreationFailedFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__SubscribeCreationFailedFaultType(struct soap*, struct wsnt__SubscribeCreationFailedFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__ResumeFailedFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__ResumeFailedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__ResumeFailedFaultType(struct soap*, struct wsnt__ResumeFailedFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__ResumeFailedFaultType(struct soap*, const char *, int, struct wsnt__ResumeFailedFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__ResumeFailedFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__ResumeFailedFaultType(struct soap*, const char*, struct wsnt__ResumeFailedFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__ResumeFailedFaultType(struct soap*, struct wsnt__ResumeFailedFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__ResumeFailedFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__ResumeFailedFaultType(struct soap*, struct wsnt__ResumeFailedFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsrfr__ResourceUnknownFaultType_DEFINED
#define SOAP_TYPE_PointerTowsrfr__ResourceUnknownFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsrfr__ResourceUnknownFaultType(struct soap*, struct wsrfr__ResourceUnknownFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsrfr__ResourceUnknownFaultType(struct soap*, const char *, int, struct wsrfr__ResourceUnknownFaultType *const*, const char *);
SOAP_FMAC3 struct wsrfr__ResourceUnknownFaultType ** SOAP_FMAC4 soap_in_PointerTowsrfr__ResourceUnknownFaultType(struct soap*, const char*, struct wsrfr__ResourceUnknownFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsrfr__ResourceUnknownFaultType(struct soap*, struct wsrfr__ResourceUnknownFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsrfr__ResourceUnknownFaultType ** SOAP_FMAC4 soap_get_PointerTowsrfr__ResourceUnknownFaultType(struct soap*, struct wsrfr__ResourceUnknownFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__PullMessagesFaultResponse_DEFINED
#define SOAP_TYPE_PointerTo_tev__PullMessagesFaultResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__PullMessagesFaultResponse(struct soap*, const char *, int, struct _tev__PullMessagesFaultResponse *const*, const char *);
SOAP_FMAC3 struct _tev__PullMessagesFaultResponse ** SOAP_FMAC4 soap_in_PointerTo_tev__PullMessagesFaultResponse(struct soap*, const char*, struct _tev__PullMessagesFaultResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__PullMessagesFaultResponse ** SOAP_FMAC4 soap_get_PointerTo_tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__PauseFailedFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__PauseFailedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__PauseFailedFaultType(struct soap*, struct wsnt__PauseFailedFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__PauseFailedFaultType(struct soap*, const char *, int, struct wsnt__PauseFailedFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__PauseFailedFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__PauseFailedFaultType(struct soap*, const char*, struct wsnt__PauseFailedFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__PauseFailedFaultType(struct soap*, struct wsnt__PauseFailedFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__PauseFailedFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__PauseFailedFaultType(struct soap*, struct wsnt__PauseFailedFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__NotifyMessageNotSupportedFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__NotifyMessageNotSupportedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__NotifyMessageNotSupportedFaultType(struct soap*, struct wsnt__NotifyMessageNotSupportedFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__NotifyMessageNotSupportedFaultType(struct soap*, const char *, int, struct wsnt__NotifyMessageNotSupportedFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__NotifyMessageNotSupportedFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__NotifyMessageNotSupportedFaultType(struct soap*, const char*, struct wsnt__NotifyMessageNotSupportedFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__NotifyMessageNotSupportedFaultType(struct soap*, struct wsnt__NotifyMessageNotSupportedFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__NotifyMessageNotSupportedFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__NotifyMessageNotSupportedFaultType(struct soap*, struct wsnt__NotifyMessageNotSupportedFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__NoCurrentMessageOnTopicFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__NoCurrentMessageOnTopicFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__NoCurrentMessageOnTopicFaultType(struct soap*, struct wsnt__NoCurrentMessageOnTopicFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const char *, int, struct wsnt__NoCurrentMessageOnTopicFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__NoCurrentMessageOnTopicFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const char*, struct wsnt__NoCurrentMessageOnTopicFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__NoCurrentMessageOnTopicFaultType(struct soap*, struct wsnt__NoCurrentMessageOnTopicFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__NoCurrentMessageOnTopicFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__NoCurrentMessageOnTopicFaultType(struct soap*, struct wsnt__NoCurrentMessageOnTopicFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__MultipleTopicsSpecifiedFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__MultipleTopicsSpecifiedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__MultipleTopicsSpecifiedFaultType(struct soap*, struct wsnt__MultipleTopicsSpecifiedFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const char *, int, struct wsnt__MultipleTopicsSpecifiedFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__MultipleTopicsSpecifiedFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const char*, struct wsnt__MultipleTopicsSpecifiedFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__MultipleTopicsSpecifiedFaultType(struct soap*, struct wsnt__MultipleTopicsSpecifiedFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__MultipleTopicsSpecifiedFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__MultipleTopicsSpecifiedFaultType(struct soap*, struct wsnt__MultipleTopicsSpecifiedFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__InvalidTopicExpressionFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__InvalidTopicExpressionFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__InvalidTopicExpressionFaultType(struct soap*, struct wsnt__InvalidTopicExpressionFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__InvalidTopicExpressionFaultType(struct soap*, const char *, int, struct wsnt__InvalidTopicExpressionFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__InvalidTopicExpressionFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__InvalidTopicExpressionFaultType(struct soap*, const char*, struct wsnt__InvalidTopicExpressionFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__InvalidTopicExpressionFaultType(struct soap*, struct wsnt__InvalidTopicExpressionFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__InvalidTopicExpressionFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__InvalidTopicExpressionFaultType(struct soap*, struct wsnt__InvalidTopicExpressionFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__InvalidProducerPropertiesExpressionFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__InvalidProducerPropertiesExpressionFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, struct wsnt__InvalidProducerPropertiesExpressionFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const char *, int, struct wsnt__InvalidProducerPropertiesExpressionFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__InvalidProducerPropertiesExpressionFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const char*, struct wsnt__InvalidProducerPropertiesExpressionFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, struct wsnt__InvalidProducerPropertiesExpressionFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__InvalidProducerPropertiesExpressionFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, struct wsnt__InvalidProducerPropertiesExpressionFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__InvalidMessageContentExpressionFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__InvalidMessageContentExpressionFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__InvalidMessageContentExpressionFaultType(struct soap*, struct wsnt__InvalidMessageContentExpressionFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__InvalidMessageContentExpressionFaultType(struct soap*, const char *, int, struct wsnt__InvalidMessageContentExpressionFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__InvalidMessageContentExpressionFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__InvalidMessageContentExpressionFaultType(struct soap*, const char*, struct wsnt__InvalidMessageContentExpressionFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__InvalidMessageContentExpressionFaultType(struct soap*, struct wsnt__InvalidMessageContentExpressionFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__InvalidMessageContentExpressionFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__InvalidMessageContentExpressionFaultType(struct soap*, struct wsnt__InvalidMessageContentExpressionFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__InvalidFilterFaultType_DEFINED
#define SOAP_TYPE_PointerTowsnt__InvalidFilterFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__InvalidFilterFaultType(struct soap*, struct wsnt__InvalidFilterFaultType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__InvalidFilterFaultType(struct soap*, const char *, int, struct wsnt__InvalidFilterFaultType *const*, const char *);
SOAP_FMAC3 struct wsnt__InvalidFilterFaultType ** SOAP_FMAC4 soap_in_PointerTowsnt__InvalidFilterFaultType(struct soap*, const char*, struct wsnt__InvalidFilterFaultType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__InvalidFilterFaultType(struct soap*, struct wsnt__InvalidFilterFaultType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__InvalidFilterFaultType ** SOAP_FMAC4 soap_get_PointerTowsnt__InvalidFilterFaultType(struct soap*, struct wsnt__InvalidFilterFaultType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wstop__TopicNamespaceType_Topic_DEFINED
#define SOAP_TYPE_PointerTo_wstop__TopicNamespaceType_Topic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wstop__TopicNamespaceType_Topic(struct soap*, struct _wstop__TopicNamespaceType_Topic *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wstop__TopicNamespaceType_Topic(struct soap*, const char *, int, struct _wstop__TopicNamespaceType_Topic *const*, const char *);
SOAP_FMAC3 struct _wstop__TopicNamespaceType_Topic ** SOAP_FMAC4 soap_in_PointerTo_wstop__TopicNamespaceType_Topic(struct soap*, const char*, struct _wstop__TopicNamespaceType_Topic **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wstop__TopicNamespaceType_Topic(struct soap*, struct _wstop__TopicNamespaceType_Topic *const*, const char*, const char*);
SOAP_FMAC3 struct _wstop__TopicNamespaceType_Topic ** SOAP_FMAC4 soap_get_PointerTo_wstop__TopicNamespaceType_Topic(struct soap*, struct _wstop__TopicNamespaceType_Topic **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowstop__TopicType_DEFINED
#define SOAP_TYPE_PointerTowstop__TopicType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__TopicType(struct soap*, struct wstop__TopicType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__TopicType(struct soap*, const char *, int, struct wstop__TopicType *const*, const char *);
SOAP_FMAC3 struct wstop__TopicType ** SOAP_FMAC4 soap_in_PointerTowstop__TopicType(struct soap*, const char*, struct wstop__TopicType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__TopicType(struct soap*, struct wstop__TopicType *const*, const char*, const char*);
SOAP_FMAC3 struct wstop__TopicType ** SOAP_FMAC4 soap_get_PointerTowstop__TopicType(struct soap*, struct wstop__TopicType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowstop__QueryExpressionType_DEFINED
#define SOAP_TYPE_PointerTowstop__QueryExpressionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__QueryExpressionType(struct soap*, struct wstop__QueryExpressionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__QueryExpressionType(struct soap*, const char *, int, struct wstop__QueryExpressionType *const*, const char *);
SOAP_FMAC3 struct wstop__QueryExpressionType ** SOAP_FMAC4 soap_in_PointerTowstop__QueryExpressionType(struct soap*, const char*, struct wstop__QueryExpressionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__QueryExpressionType(struct soap*, struct wstop__QueryExpressionType *const*, const char*, const char*);
SOAP_FMAC3 struct wstop__QueryExpressionType ** SOAP_FMAC4 soap_get_PointerTowstop__QueryExpressionType(struct soap*, struct wstop__QueryExpressionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__ResumeFailedFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__ResumeFailedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__ResumeFailedFaultType_FaultCause(struct soap*, struct _wsnt__ResumeFailedFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__ResumeFailedFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__ResumeFailedFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__ResumeFailedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__ResumeFailedFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__ResumeFailedFaultType_FaultCause(struct soap*, struct _wsnt__ResumeFailedFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__ResumeFailedFaultType_FaultCause(struct soap*, struct _wsnt__ResumeFailedFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__ResumeFailedFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__ResumeFailedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__ResumeFailedFaultType_Description(struct soap*, struct _wsnt__ResumeFailedFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__ResumeFailedFaultType_Description(struct soap*, const char *, int, struct _wsnt__ResumeFailedFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__ResumeFailedFaultType_Description(struct soap*, const char*, struct _wsnt__ResumeFailedFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__ResumeFailedFaultType_Description(struct soap*, struct _wsnt__ResumeFailedFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__ResumeFailedFaultType_Description(struct soap*, struct _wsnt__ResumeFailedFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, struct _wsnt__ResumeFailedFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__ResumeFailedFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__ResumeFailedFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, struct _wsnt__ResumeFailedFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, struct _wsnt__ResumeFailedFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__PauseFailedFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__PauseFailedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__PauseFailedFaultType_FaultCause(struct soap*, struct _wsnt__PauseFailedFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__PauseFailedFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__PauseFailedFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__PauseFailedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__PauseFailedFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__PauseFailedFaultType_FaultCause(struct soap*, struct _wsnt__PauseFailedFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__PauseFailedFaultType_FaultCause(struct soap*, struct _wsnt__PauseFailedFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__PauseFailedFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__PauseFailedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__PauseFailedFaultType_Description(struct soap*, struct _wsnt__PauseFailedFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__PauseFailedFaultType_Description(struct soap*, const char *, int, struct _wsnt__PauseFailedFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__PauseFailedFaultType_Description(struct soap*, const char*, struct _wsnt__PauseFailedFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__PauseFailedFaultType_Description(struct soap*, struct _wsnt__PauseFailedFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__PauseFailedFaultType_Description(struct soap*, struct _wsnt__PauseFailedFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__PauseFailedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__PauseFailedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__PauseFailedFaultType_ErrorCode(struct soap*, struct _wsnt__PauseFailedFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__PauseFailedFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__PauseFailedFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__PauseFailedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__PauseFailedFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__PauseFailedFaultType_ErrorCode(struct soap*, struct _wsnt__PauseFailedFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__PauseFailedFaultType_ErrorCode(struct soap*, struct _wsnt__PauseFailedFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnableToDestroySubscriptionFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnacceptableTerminationTimeFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, const char*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnableToCreatePullPointFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToCreatePullPointFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnableToDestroyPullPointFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToDestroyPullPointFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnableToGetMessagesFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToGetMessagesFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToGetMessagesFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToGetMessagesFaultType_Description(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToGetMessagesFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnableToGetMessagesFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToGetMessagesFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToGetMessagesFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToGetMessagesFaultType_Description(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToGetMessagesFaultType_Description(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, const char*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, const char *, int, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, const char*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, const char*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, const char *, int, struct _wsnt__NotifyMessageNotSupportedFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, const char*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnsupportedPolicyRequestFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, const char*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, const char*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, const char *, int, struct _wsnt__InvalidMessageContentExpressionFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, const char *, int, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, const char *, int, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, const char*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__TopicNotSupportedFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__TopicNotSupportedFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__TopicNotSupportedFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__TopicNotSupportedFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__TopicNotSupportedFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__TopicNotSupportedFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__TopicNotSupportedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__TopicNotSupportedFaultType_Description(struct soap*, struct _wsnt__TopicNotSupportedFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__TopicNotSupportedFaultType_Description(struct soap*, const char *, int, struct _wsnt__TopicNotSupportedFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__TopicNotSupportedFaultType_Description(struct soap*, const char*, struct _wsnt__TopicNotSupportedFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__TopicNotSupportedFaultType_Description(struct soap*, struct _wsnt__TopicNotSupportedFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__TopicNotSupportedFaultType_Description(struct soap*, struct _wsnt__TopicNotSupportedFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__TopicNotSupportedFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, const char *, int, struct _wsnt__InvalidTopicExpressionFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidTopicExpressionFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, const char*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, const char *, int, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, const char*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_QName_DEFINED
#define SOAP_TYPE_PointerTo_QName_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_QName(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_QName(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTo_QName(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_QName(struct soap*, char **const*, const char*, const char*);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTo_QName(struct soap*, char ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidFilterFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidFilterFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidFilterFaultType_FaultCause(struct soap*, struct _wsnt__InvalidFilterFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidFilterFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__InvalidFilterFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidFilterFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidFilterFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidFilterFaultType_FaultCause(struct soap*, struct _wsnt__InvalidFilterFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidFilterFaultType_FaultCause(struct soap*, struct _wsnt__InvalidFilterFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidFilterFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidFilterFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidFilterFaultType_Description(struct soap*, struct _wsnt__InvalidFilterFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidFilterFaultType_Description(struct soap*, const char *, int, struct _wsnt__InvalidFilterFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidFilterFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidFilterFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidFilterFaultType_Description(struct soap*, struct _wsnt__InvalidFilterFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidFilterFaultType_Description(struct soap*, struct _wsnt__InvalidFilterFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidFilterFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__InvalidFilterFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidFilterFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidFilterFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidFilterFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, const char *, int, struct _wsnt__SubscribeCreationFailedFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, const char*, struct _wsnt__SubscribeCreationFailedFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsrfr__ResourceUnavailableFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsrfr__ResourceUnavailableFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, const char *, int, struct _wsrfr__ResourceUnavailableFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, const char*, struct _wsrfr__ResourceUnavailableFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsrfr__ResourceUnavailableFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsrfr__ResourceUnavailableFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfr__ResourceUnavailableFaultType_Description(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfr__ResourceUnavailableFaultType_Description(struct soap*, const char *, int, struct _wsrfr__ResourceUnavailableFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsrfr__ResourceUnavailableFaultType_Description(struct soap*, const char*, struct _wsrfr__ResourceUnavailableFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfr__ResourceUnavailableFaultType_Description(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsrfr__ResourceUnavailableFaultType_Description(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsrfr__ResourceUnavailableFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsrfr__ResourceUnavailableFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, const char *, int, struct _wsrfr__ResourceUnavailableFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, const char*, struct _wsrfr__ResourceUnavailableFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsrfr__ResourceUnavailableFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, struct _wsrfr__ResourceUnavailableFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsrfr__ResourceUnknownFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsrfr__ResourceUnknownFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, struct _wsrfr__ResourceUnknownFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, const char *, int, struct _wsrfr__ResourceUnknownFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, const char*, struct _wsrfr__ResourceUnknownFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, struct _wsrfr__ResourceUnknownFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, struct _wsrfr__ResourceUnknownFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsrfr__ResourceUnknownFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsrfr__ResourceUnknownFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfr__ResourceUnknownFaultType_Description(struct soap*, struct _wsrfr__ResourceUnknownFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfr__ResourceUnknownFaultType_Description(struct soap*, const char *, int, struct _wsrfr__ResourceUnknownFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsrfr__ResourceUnknownFaultType_Description(struct soap*, const char*, struct _wsrfr__ResourceUnknownFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfr__ResourceUnknownFaultType_Description(struct soap*, struct _wsrfr__ResourceUnknownFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsrfr__ResourceUnknownFaultType_Description(struct soap*, struct _wsrfr__ResourceUnknownFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsrfr__ResourceUnknownFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsrfr__ResourceUnknownFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, struct _wsrfr__ResourceUnknownFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, const char *, int, struct _wsrfr__ResourceUnknownFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, const char*, struct _wsrfr__ResourceUnknownFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, struct _wsrfr__ResourceUnknownFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsrfr__ResourceUnknownFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, struct _wsrfr__ResourceUnknownFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowstop__Documentation_DEFINED
#define SOAP_TYPE_PointerTowstop__Documentation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__Documentation(struct soap*, struct wstop__Documentation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__Documentation(struct soap*, const char *, int, struct wstop__Documentation *const*, const char *);
SOAP_FMAC3 struct wstop__Documentation ** SOAP_FMAC4 soap_in_PointerTowstop__Documentation(struct soap*, const char*, struct wstop__Documentation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__Documentation(struct soap*, struct wstop__Documentation *const*, const char*, const char*);
SOAP_FMAC3 struct wstop__Documentation ** SOAP_FMAC4 soap_get_PointerTowstop__Documentation(struct soap*, struct wstop__Documentation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__Subscribe_SubscriptionPolicy_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__Subscribe_SubscriptionPolicy_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, struct _wsnt__Subscribe_SubscriptionPolicy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char *, int, struct _wsnt__Subscribe_SubscriptionPolicy *const*, const char *);
SOAP_FMAC3 struct _wsnt__Subscribe_SubscriptionPolicy ** SOAP_FMAC4 soap_in_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char*, struct _wsnt__Subscribe_SubscriptionPolicy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, struct _wsnt__Subscribe_SubscriptionPolicy *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__Subscribe_SubscriptionPolicy ** SOAP_FMAC4 soap_get_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, struct _wsnt__Subscribe_SubscriptionPolicy **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTodateTime_DEFINED
#define SOAP_TYPE_PointerTodateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodateTime(struct soap*, time_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodateTime(struct soap*, const char *, int, time_t *const*, const char *);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_in_PointerTodateTime(struct soap*, const char*, time_t **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodateTime(struct soap*, time_t *const*, const char*, const char*);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_get_PointerTodateTime(struct soap*, time_t **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__SubscriptionPolicyType_DEFINED
#define SOAP_TYPE_PointerTowsnt__SubscriptionPolicyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__SubscriptionPolicyType(struct soap*, struct wsnt__SubscriptionPolicyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__SubscriptionPolicyType(struct soap*, const char *, int, struct wsnt__SubscriptionPolicyType *const*, const char *);
SOAP_FMAC3 struct wsnt__SubscriptionPolicyType ** SOAP_FMAC4 soap_in_PointerTowsnt__SubscriptionPolicyType(struct soap*, const char*, struct wsnt__SubscriptionPolicyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__SubscriptionPolicyType(struct soap*, struct wsnt__SubscriptionPolicyType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__SubscriptionPolicyType ** SOAP_FMAC4 soap_get_PointerTowsnt__SubscriptionPolicyType(struct soap*, struct wsnt__SubscriptionPolicyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__TopicExpressionType_DEFINED
#define SOAP_TYPE_PointerTowsnt__TopicExpressionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__TopicExpressionType(struct soap*, struct wsnt__TopicExpressionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__TopicExpressionType(struct soap*, const char *, int, struct wsnt__TopicExpressionType *const*, const char *);
SOAP_FMAC3 struct wsnt__TopicExpressionType ** SOAP_FMAC4 soap_in_PointerTowsnt__TopicExpressionType(struct soap*, const char*, struct wsnt__TopicExpressionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__TopicExpressionType(struct soap*, struct wsnt__TopicExpressionType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__TopicExpressionType ** SOAP_FMAC4 soap_get_PointerTowsnt__TopicExpressionType(struct soap*, struct wsnt__TopicExpressionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, struct _wsrfbf__BaseFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, const char *, int, struct _wsrfbf__BaseFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, const char*, struct _wsrfbf__BaseFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, struct _wsrfbf__BaseFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, struct _wsrfbf__BaseFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfbf__BaseFaultType_Description(struct soap*, struct _wsrfbf__BaseFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfbf__BaseFaultType_Description(struct soap*, const char *, int, struct _wsrfbf__BaseFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsrfbf__BaseFaultType_Description(struct soap*, const char*, struct _wsrfbf__BaseFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfbf__BaseFaultType_Description(struct soap*, struct _wsrfbf__BaseFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsrfbf__BaseFaultType_Description(struct soap*, struct _wsrfbf__BaseFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, struct _wsrfbf__BaseFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char *, int, struct _wsrfbf__BaseFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char*, struct _wsrfbf__BaseFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, struct _wsrfbf__BaseFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, struct _wsrfbf__BaseFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsa5__EndpointReferenceType_DEFINED
#define SOAP_TYPE_PointerTowsa5__EndpointReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__EndpointReferenceType(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTowsa5__EndpointReferenceType(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTowsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTotev__EventBrokerConfig_DEFINED
#define SOAP_TYPE_PointerTotev__EventBrokerConfig_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotev__EventBrokerConfig(struct soap*, struct tev__EventBrokerConfig *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotev__EventBrokerConfig(struct soap*, const char *, int, struct tev__EventBrokerConfig *const*, const char *);
SOAP_FMAC3 struct tev__EventBrokerConfig ** SOAP_FMAC4 soap_in_PointerTotev__EventBrokerConfig(struct soap*, const char*, struct tev__EventBrokerConfig **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotev__EventBrokerConfig(struct soap*, struct tev__EventBrokerConfig *const*, const char*, const char*);
SOAP_FMAC3 struct tev__EventBrokerConfig ** SOAP_FMAC4 soap_get_PointerTotev__EventBrokerConfig(struct soap*, struct tev__EventBrokerConfig **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowstop__TopicSetType_DEFINED
#define SOAP_TYPE_PointerTowstop__TopicSetType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__TopicSetType(struct soap*, struct wstop__TopicSetType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__TopicSetType(struct soap*, const char *, int, struct wstop__TopicSetType *const*, const char *);
SOAP_FMAC3 struct wstop__TopicSetType ** SOAP_FMAC4 soap_in_PointerTowstop__TopicSetType(struct soap*, const char*, struct wstop__TopicSetType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__TopicSetType(struct soap*, struct wstop__TopicSetType *const*, const char*, const char*);
SOAP_FMAC3 struct wstop__TopicSetType ** SOAP_FMAC4 soap_get_PointerTowstop__TopicSetType(struct soap*, struct wstop__TopicSetType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxsd__anyURI_DEFINED
#define SOAP_TYPE_PointerToxsd__anyURI_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__anyURI(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__anyURI(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerToxsd__anyURI(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__anyURI(struct soap*, char **const*, const char*, const char*);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerToxsd__anyURI(struct soap*, char ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__NotificationMessageHolderType_DEFINED
#define SOAP_TYPE_PointerTowsnt__NotificationMessageHolderType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__NotificationMessageHolderType(struct soap*, struct wsnt__NotificationMessageHolderType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__NotificationMessageHolderType(struct soap*, const char *, int, struct wsnt__NotificationMessageHolderType *const*, const char *);
SOAP_FMAC3 struct wsnt__NotificationMessageHolderType ** SOAP_FMAC4 soap_in_PointerTowsnt__NotificationMessageHolderType(struct soap*, const char*, struct wsnt__NotificationMessageHolderType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__NotificationMessageHolderType(struct soap*, struct wsnt__NotificationMessageHolderType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__NotificationMessageHolderType ** SOAP_FMAC4 soap_get_PointerTowsnt__NotificationMessageHolderType(struct soap*, struct wsnt__NotificationMessageHolderType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tev__CreatePullPointSubscription_SubscriptionPolicy_DEFINED
#define SOAP_TYPE_PointerTo_tev__CreatePullPointSubscription_SubscriptionPolicy_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, struct _tev__CreatePullPointSubscription_SubscriptionPolicy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, const char *, int, struct _tev__CreatePullPointSubscription_SubscriptionPolicy *const*, const char *);
SOAP_FMAC3 struct _tev__CreatePullPointSubscription_SubscriptionPolicy ** SOAP_FMAC4 soap_in_PointerTo_tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, const char*, struct _tev__CreatePullPointSubscription_SubscriptionPolicy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, struct _tev__CreatePullPointSubscription_SubscriptionPolicy *const*, const char*, const char*);
SOAP_FMAC3 struct _tev__CreatePullPointSubscription_SubscriptionPolicy ** SOAP_FMAC4 soap_get_PointerTo_tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, struct _tev__CreatePullPointSubscription_SubscriptionPolicy **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTotev__Capabilities_DEFINED
#define SOAP_TYPE_PointerTotev__Capabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotev__Capabilities(struct soap*, struct tev__Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotev__Capabilities(struct soap*, const char *, int, struct tev__Capabilities *const*, const char *);
SOAP_FMAC3 struct tev__Capabilities ** SOAP_FMAC4 soap_in_PointerTotev__Capabilities(struct soap*, const char*, struct tev__Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotev__Capabilities(struct soap*, struct tev__Capabilities *const*, const char*, const char*);
SOAP_FMAC3 struct tev__Capabilities ** SOAP_FMAC4 soap_get_PointerTotev__Capabilities(struct soap*, struct tev__Capabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__FilterType_DEFINED
#define SOAP_TYPE_PointerTowsnt__FilterType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__FilterType(struct soap*, struct wsnt__FilterType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__FilterType(struct soap*, const char *, int, struct wsnt__FilterType *const*, const char *);
SOAP_FMAC3 struct wsnt__FilterType ** SOAP_FMAC4 soap_in_PointerTowsnt__FilterType(struct soap*, const char*, struct wsnt__FilterType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__FilterType(struct soap*, struct wsnt__FilterType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__FilterType ** SOAP_FMAC4 soap_get_PointerTowsnt__FilterType(struct soap*, struct wsnt__FilterType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxsd__boolean_DEFINED
#define SOAP_TYPE_PointerToxsd__boolean_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__boolean(struct soap*, enum xsd__boolean *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__boolean(struct soap*, const char *, int, enum xsd__boolean *const*, const char *);
SOAP_FMAC3 enum xsd__boolean ** SOAP_FMAC4 soap_in_PointerToxsd__boolean(struct soap*, const char*, enum xsd__boolean **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__boolean(struct soap*, enum xsd__boolean *const*, const char*, const char*);
SOAP_FMAC3 enum xsd__boolean ** SOAP_FMAC4 soap_get_PointerToxsd__boolean(struct soap*, enum xsd__boolean **, const char*, const char*);
#endif
/* wstop__SimpleTopicExpression is a typedef synonym of _QName */

#ifndef SOAP_TYPE_wstop__SimpleTopicExpression_DEFINED
#define SOAP_TYPE_wstop__SimpleTopicExpression_DEFINED

#define soap_default_wstop__SimpleTopicExpression soap_default__QName


#define soap_serialize_wstop__SimpleTopicExpression soap_serialize__QName


#define soap_wstop__SimpleTopicExpression2s(soap, a) soap_QName2s(soap, (a))

#define soap_out_wstop__SimpleTopicExpression soap_out__QName


#define soap_s2wstop__SimpleTopicExpression(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)

#define soap_in_wstop__SimpleTopicExpression soap_in__QName

#define soap_new_wstop__SimpleTopicExpression soap_new__QName


#define soap_put_wstop__SimpleTopicExpression soap_put__QName


#define soap_write_wstop__SimpleTopicExpression soap_write__QName


#define soap_PUT_wstop__SimpleTopicExpression soap_PUT__QName


#define soap_PATCH_wstop__SimpleTopicExpression soap_PATCH__QName


#define soap_POST_send_wstop__SimpleTopicExpression soap_POST_send__QName


#define soap_get_wstop__SimpleTopicExpression soap_get__QName


#define soap_read_wstop__SimpleTopicExpression soap_read__QName


#define soap_GET_wstop__SimpleTopicExpression soap_GET__QName


#define soap_POST_recv_wstop__SimpleTopicExpression soap_POST_recv__QName

#endif
/* wstop__ConcreteTopicExpression is a typedef restriction of xsd__token */

#ifndef SOAP_TYPE_wstop__ConcreteTopicExpression_DEFINED
#define SOAP_TYPE_wstop__ConcreteTopicExpression_DEFINED

#define soap_default_wstop__ConcreteTopicExpression soap_default_xsd__token


#define soap_serialize_wstop__ConcreteTopicExpression soap_serialize_xsd__token


#define soap_wstop__ConcreteTopicExpression2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__ConcreteTopicExpression(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wstop__ConcreteTopicExpression(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*")
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wstop__ConcreteTopicExpression(struct soap*, const char*, char **, const char*);
#define soap_new_wstop__ConcreteTopicExpression soap_new_xsd__token

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__ConcreteTopicExpression(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wstop__ConcreteTopicExpression
#define soap_write_wstop__ConcreteTopicExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wstop__ConcreteTopicExpression(soap, data, "wstop:ConcreteTopicExpression", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__ConcreteTopicExpression
#define soap_PUT_wstop__ConcreteTopicExpression(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wstop__ConcreteTopicExpression(soap, data, "wstop:ConcreteTopicExpression", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__ConcreteTopicExpression
#define soap_PATCH_wstop__ConcreteTopicExpression(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wstop__ConcreteTopicExpression(soap, data, "wstop:ConcreteTopicExpression", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__ConcreteTopicExpression
#define soap_POST_send_wstop__ConcreteTopicExpression(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wstop__ConcreteTopicExpression(soap, data, "wstop:ConcreteTopicExpression", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wstop__ConcreteTopicExpression(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wstop__ConcreteTopicExpression
#define soap_read_wstop__ConcreteTopicExpression(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__ConcreteTopicExpression(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__ConcreteTopicExpression
#define soap_GET_wstop__ConcreteTopicExpression(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__ConcreteTopicExpression(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__ConcreteTopicExpression
#define soap_POST_recv_wstop__ConcreteTopicExpression(soap, data) ( soap_read_wstop__ConcreteTopicExpression(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* wstop__FullTopicExpression is a typedef restriction of xsd__token */

#ifndef SOAP_TYPE_wstop__FullTopicExpression_DEFINED
#define SOAP_TYPE_wstop__FullTopicExpression_DEFINED

#define soap_default_wstop__FullTopicExpression soap_default_xsd__token


#define soap_serialize_wstop__FullTopicExpression soap_serialize_xsd__token


#define soap_wstop__FullTopicExpression2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__FullTopicExpression(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wstop__FullTopicExpression(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*")
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wstop__FullTopicExpression(struct soap*, const char*, char **, const char*);
#define soap_new_wstop__FullTopicExpression soap_new_xsd__token

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__FullTopicExpression(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wstop__FullTopicExpression
#define soap_write_wstop__FullTopicExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wstop__FullTopicExpression(soap, data, "wstop:FullTopicExpression", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__FullTopicExpression
#define soap_PUT_wstop__FullTopicExpression(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wstop__FullTopicExpression(soap, data, "wstop:FullTopicExpression", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__FullTopicExpression
#define soap_PATCH_wstop__FullTopicExpression(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wstop__FullTopicExpression(soap, data, "wstop:FullTopicExpression", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__FullTopicExpression
#define soap_POST_send_wstop__FullTopicExpression(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wstop__FullTopicExpression(soap, data, "wstop:FullTopicExpression", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wstop__FullTopicExpression(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wstop__FullTopicExpression
#define soap_read_wstop__FullTopicExpression(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__FullTopicExpression(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__FullTopicExpression
#define soap_GET_wstop__FullTopicExpression(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__FullTopicExpression(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__FullTopicExpression
#define soap_POST_recv_wstop__FullTopicExpression(soap, data) ( soap_read_wstop__FullTopicExpression(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__AbsoluteOrRelativeTimeType_DEFINED
#define SOAP_TYPE_wsnt__AbsoluteOrRelativeTimeType_DEFINED

#ifdef SOAP_DEFAULT_wsnt__AbsoluteOrRelativeTimeType
#define soap_default_wsnt__AbsoluteOrRelativeTimeType(soap, a) (*(a) = SOAP_DEFAULT_wsnt__AbsoluteOrRelativeTimeType)
#else
#define soap_default_wsnt__AbsoluteOrRelativeTimeType(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__AbsoluteOrRelativeTimeType(struct soap*, char *const*);

#define soap_wsnt__AbsoluteOrRelativeTimeType2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__AbsoluteOrRelativeTimeType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsnt__AbsoluteOrRelativeTimeType(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsnt__AbsoluteOrRelativeTimeType(struct soap*, const char*, char **, const char*);
#define soap_new_wsnt__AbsoluteOrRelativeTimeType soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__AbsoluteOrRelativeTimeType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsnt__AbsoluteOrRelativeTimeType
#define soap_write_wsnt__AbsoluteOrRelativeTimeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsnt__AbsoluteOrRelativeTimeType(soap, data, "wsnt:AbsoluteOrRelativeTimeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__AbsoluteOrRelativeTimeType
#define soap_PUT_wsnt__AbsoluteOrRelativeTimeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsnt__AbsoluteOrRelativeTimeType(soap, data, "wsnt:AbsoluteOrRelativeTimeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__AbsoluteOrRelativeTimeType
#define soap_PATCH_wsnt__AbsoluteOrRelativeTimeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsnt__AbsoluteOrRelativeTimeType(soap, data, "wsnt:AbsoluteOrRelativeTimeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__AbsoluteOrRelativeTimeType
#define soap_POST_send_wsnt__AbsoluteOrRelativeTimeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsnt__AbsoluteOrRelativeTimeType(soap, data, "wsnt:AbsoluteOrRelativeTimeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsnt__AbsoluteOrRelativeTimeType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsnt__AbsoluteOrRelativeTimeType
#define soap_read_wsnt__AbsoluteOrRelativeTimeType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__AbsoluteOrRelativeTimeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__AbsoluteOrRelativeTimeType
#define soap_GET_wsnt__AbsoluteOrRelativeTimeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__AbsoluteOrRelativeTimeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__AbsoluteOrRelativeTimeType
#define soap_POST_recv_wsnt__AbsoluteOrRelativeTimeType(soap, data) ( soap_read_wsnt__AbsoluteOrRelativeTimeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _xml__lang is a typedef synonym of string */

#ifndef SOAP_TYPE__xml__lang_DEFINED
#define SOAP_TYPE__xml__lang_DEFINED

#define soap_default__xml__lang soap_default_string


#define soap_serialize__xml__lang soap_serialize_string


#define soap__xml__lang2s(soap, a) (a)

#define soap_out__xml__lang soap_out_string


#define soap_s2_xml__lang(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__xml__lang soap_in_string

#define soap_new__xml__lang soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__xml__lang(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__xml__lang
#define soap_write__xml__lang(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__xml__lang(soap, data, "xml:lang", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__xml__lang
#define soap_PUT__xml__lang(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__xml__lang(soap, data, "xml:lang", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__xml__lang
#define soap_PATCH__xml__lang(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__xml__lang(soap, data, "xml:lang", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__xml__lang
#define soap_POST_send__xml__lang(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__xml__lang(soap, data, "xml:lang", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__xml__lang soap_get_string


#define soap_read__xml__lang soap_read_string


#define soap_GET__xml__lang soap_GET_string


#define soap_POST_recv__xml__lang soap_POST_recv_string

#endif

#ifndef SOAP_TYPE_xsd__token_DEFINED
#define SOAP_TYPE_xsd__token_DEFINED

#ifdef SOAP_DEFAULT_xsd__token
#define soap_default_xsd__token(soap, a) (*(a) = SOAP_DEFAULT_xsd__token)
#else
#define soap_default_xsd__token(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__token(struct soap*, char *const*);

#define soap_xsd__token2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__token(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__token(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__token(struct soap*, const char*, char **, const char*);
#define soap_new_xsd__token soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__token(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__token
#define soap_write_xsd__token(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__token(soap, data, "xsd:token", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__token
#define soap_PUT_xsd__token(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__token(soap, data, "xsd:token", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__token
#define soap_PATCH_xsd__token(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__token(soap, data, "xsd:token", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__token
#define soap_POST_send_xsd__token(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__token(soap, data, "xsd:token", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__token(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__token
#define soap_read_xsd__token(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__token(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__token
#define soap_GET_xsd__token(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__token(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__token
#define soap_POST_recv_xsd__token(soap, data) ( soap_read_xsd__token(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__nonNegativeInteger_DEFINED
#define SOAP_TYPE_xsd__nonNegativeInteger_DEFINED

#ifdef SOAP_DEFAULT_xsd__nonNegativeInteger
#define soap_default_xsd__nonNegativeInteger(soap, a) (*(a) = SOAP_DEFAULT_xsd__nonNegativeInteger)
#else
#define soap_default_xsd__nonNegativeInteger(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__nonNegativeInteger(struct soap*, char *const*);

#define soap_xsd__nonNegativeInteger2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__nonNegativeInteger(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__nonNegativeInteger(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, "\\+?\\d+")
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__nonNegativeInteger(struct soap*, const char*, char **, const char*);
#define soap_new_xsd__nonNegativeInteger soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__nonNegativeInteger(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__nonNegativeInteger
#define soap_write_xsd__nonNegativeInteger(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__nonNegativeInteger
#define soap_PUT_xsd__nonNegativeInteger(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__nonNegativeInteger
#define soap_PATCH_xsd__nonNegativeInteger(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__nonNegativeInteger
#define soap_POST_send_xsd__nonNegativeInteger(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__nonNegativeInteger(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__nonNegativeInteger
#define soap_read_xsd__nonNegativeInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__nonNegativeInteger(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__nonNegativeInteger
#define soap_GET_xsd__nonNegativeInteger(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__nonNegativeInteger(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__nonNegativeInteger
#define soap_POST_recv_xsd__nonNegativeInteger(soap, data) ( soap_read_xsd__nonNegativeInteger(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__duration_DEFINED
#define SOAP_TYPE_xsd__duration_DEFINED

#ifdef SOAP_DEFAULT_xsd__duration
#define soap_default_xsd__duration(soap, a) (*(a) = SOAP_DEFAULT_xsd__duration)
#else
#define soap_default_xsd__duration(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__duration(struct soap*, char *const*);

#define soap_xsd__duration2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__duration(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__duration(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, "[-+]?P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+(\\.\\d*)?S)?)?")
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__duration(struct soap*, const char*, char **, const char*);
#define soap_new_xsd__duration soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__duration(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__duration
#define soap_write_xsd__duration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__duration(soap, data, "xsd:duration", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__duration
#define soap_PUT_xsd__duration(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__duration(soap, data, "xsd:duration", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__duration
#define soap_PATCH_xsd__duration(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__duration(soap, data, "xsd:duration", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__duration
#define soap_POST_send_xsd__duration(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__duration(soap, data, "xsd:duration", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__duration(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__duration
#define soap_read_xsd__duration(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__duration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__duration
#define soap_GET_xsd__duration(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__duration(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__duration
#define soap_POST_recv_xsd__duration(soap, data) ( soap_read_xsd__duration(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__anyURI_DEFINED
#define SOAP_TYPE_xsd__anyURI_DEFINED

#ifdef SOAP_DEFAULT_xsd__anyURI
#define soap_default_xsd__anyURI(soap, a) (*(a) = SOAP_DEFAULT_xsd__anyURI)
#else
#define soap_default_xsd__anyURI(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anyURI(struct soap*, char *const*);

#define soap_xsd__anyURI2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__anyURI(soap, s, a) soap_s2char((soap), (s), (char**)(a), 4, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, char **, const char*);
#define soap_new_xsd__anyURI soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__anyURI
#define soap_write_xsd__anyURI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__anyURI(soap, data, "xsd:anyURI", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__anyURI
#define soap_PUT_xsd__anyURI(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__anyURI(soap, data, "xsd:anyURI", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__anyURI
#define soap_PATCH_xsd__anyURI(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__anyURI(soap, data, "xsd:anyURI", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__anyURI
#define soap_POST_send_xsd__anyURI(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__anyURI(soap, data, "xsd:anyURI", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__anyURI
#define soap_read_xsd__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyURI(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__anyURI
#define soap_GET_xsd__anyURI(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__anyURI(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__anyURI
#define soap_POST_recv_xsd__anyURI(soap, data) ( soap_read_xsd__anyURI(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__NCName_DEFINED
#define SOAP_TYPE_xsd__NCName_DEFINED

#ifdef SOAP_DEFAULT_xsd__NCName
#define soap_default_xsd__NCName(soap, a) (*(a) = SOAP_DEFAULT_xsd__NCName)
#else
#define soap_default_xsd__NCName(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__NCName(struct soap*, char *const*);

#define soap_xsd__NCName2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__NCName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__NCName(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, "[\\i-[:]][\\c-[:]]*")
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__NCName(struct soap*, const char*, char **, const char*);
#define soap_new_xsd__NCName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__NCName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__NCName
#define soap_write_xsd__NCName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__NCName(soap, data, "xsd:NCName", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__NCName
#define soap_PUT_xsd__NCName(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__NCName(soap, data, "xsd:NCName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__NCName
#define soap_PATCH_xsd__NCName(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__NCName(soap, data, "xsd:NCName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__NCName
#define soap_POST_send_xsd__NCName(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__NCName(soap, data, "xsd:NCName", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__NCName(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__NCName
#define soap_read_xsd__NCName(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__NCName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__NCName
#define soap_GET_xsd__NCName(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__NCName(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__NCName
#define soap_POST_recv_xsd__NCName(soap, data) ( soap_read_xsd__NCName(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTochan__ChannelInstanceType_DEFINED
#define SOAP_TYPE_PointerTochan__ChannelInstanceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTochan__ChannelInstanceType(struct soap*, const char *, int, struct chan__ChannelInstanceType *const*, const char *);
SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_in_PointerTochan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*, const char*, const char*);
SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_get_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__FaultTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__FaultTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__FaultTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__FaultTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__ReplyTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__ReplyTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__ReplyTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__ReplyTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__From_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__From_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__From(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__From(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__RelatesTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__RelatesTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__RelatesTo(struct soap*, const char *, int, struct wsa5__RelatesToType *const*, const char *);
SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__RelatesTo(struct soap*, const char*, struct wsa5__RelatesToType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType **, const char*, const char*);
#endif
/* _wsa5__ProblemIRI is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa5__ProblemIRI_DEFINED
#define SOAP_TYPE__wsa5__ProblemIRI_DEFINED

#define soap_default__wsa5__ProblemIRI soap_default_string


#define soap_serialize__wsa5__ProblemIRI soap_serialize_string


#define soap__wsa5__ProblemIRI2s(soap, a) (a)

#define soap_out__wsa5__ProblemIRI soap_out_string


#define soap_s2_wsa5__ProblemIRI(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa5__ProblemIRI soap_in_string

#define soap_new__wsa5__ProblemIRI soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ProblemIRI(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__ProblemIRI
#define soap_write__wsa5__ProblemIRI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__ProblemIRI(soap, data, "wsa5:ProblemIRI", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__ProblemIRI
#define soap_PUT__wsa5__ProblemIRI(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__ProblemIRI(soap, data, "wsa5:ProblemIRI", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__ProblemIRI
#define soap_PATCH__wsa5__ProblemIRI(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__ProblemIRI(soap, data, "wsa5:ProblemIRI", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__ProblemIRI
#define soap_POST_send__wsa5__ProblemIRI(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__ProblemIRI(soap, data, "wsa5:ProblemIRI", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__ProblemIRI soap_get_string


#define soap_read__wsa5__ProblemIRI soap_read_string


#define soap_GET__wsa5__ProblemIRI soap_GET_string


#define soap_POST_recv__wsa5__ProblemIRI soap_POST_recv_string

#endif
/* _wsa5__ProblemHeaderQName is a typedef synonym of _QName */

#ifndef SOAP_TYPE__wsa5__ProblemHeaderQName_DEFINED
#define SOAP_TYPE__wsa5__ProblemHeaderQName_DEFINED

#define soap_default__wsa5__ProblemHeaderQName soap_default__QName


#define soap_serialize__wsa5__ProblemHeaderQName soap_serialize__QName


#define soap__wsa5__ProblemHeaderQName2s(soap, a) soap_QName2s(soap, (a))

#define soap_out__wsa5__ProblemHeaderQName soap_out__QName


#define soap_s2_wsa5__ProblemHeaderQName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)

#define soap_in__wsa5__ProblemHeaderQName soap_in__QName

#define soap_new__wsa5__ProblemHeaderQName soap_new__QName


#define soap_put__wsa5__ProblemHeaderQName soap_put__QName


#define soap_write__wsa5__ProblemHeaderQName soap_write__QName


#define soap_PUT__wsa5__ProblemHeaderQName soap_PUT__QName


#define soap_PATCH__wsa5__ProblemHeaderQName soap_PATCH__QName


#define soap_POST_send__wsa5__ProblemHeaderQName soap_POST_send__QName


#define soap_get__wsa5__ProblemHeaderQName soap_get__QName


#define soap_read__wsa5__ProblemHeaderQName soap_read__QName


#define soap_GET__wsa5__ProblemHeaderQName soap_GET__QName


#define soap_POST_recv__wsa5__ProblemHeaderQName soap_POST_recv__QName

#endif
/* _wsa5__Action is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa5__Action_DEFINED
#define SOAP_TYPE__wsa5__Action_DEFINED

#define soap_default__wsa5__Action soap_default_string


#define soap_serialize__wsa5__Action soap_serialize_string


#define soap__wsa5__Action2s(soap, a) (a)

#define soap_out__wsa5__Action soap_out_string


#define soap_s2_wsa5__Action(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa5__Action soap_in_string

#define soap_new__wsa5__Action soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__Action(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__Action
#define soap_write__wsa5__Action(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__Action(soap, data, "wsa5:Action", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__Action
#define soap_PUT__wsa5__Action(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__Action(soap, data, "wsa5:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__Action
#define soap_PATCH__wsa5__Action(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__Action(soap, data, "wsa5:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__Action
#define soap_POST_send__wsa5__Action(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__Action(soap, data, "wsa5:Action", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__Action soap_get_string


#define soap_read__wsa5__Action soap_read_string


#define soap_GET__wsa5__Action soap_GET_string


#define soap_POST_recv__wsa5__Action soap_POST_recv_string

#endif
/* _wsa5__To is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa5__To_DEFINED
#define SOAP_TYPE__wsa5__To_DEFINED

#define soap_default__wsa5__To soap_default_string


#define soap_serialize__wsa5__To soap_serialize_string


#define soap__wsa5__To2s(soap, a) (a)

#define soap_out__wsa5__To soap_out_string


#define soap_s2_wsa5__To(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa5__To soap_in_string

#define soap_new__wsa5__To soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__To(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__To
#define soap_write__wsa5__To(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__To(soap, data, "wsa5:To", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__To
#define soap_PUT__wsa5__To(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__To(soap, data, "wsa5:To", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__To
#define soap_PATCH__wsa5__To(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__To(soap, data, "wsa5:To", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__To
#define soap_POST_send__wsa5__To(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__To(soap, data, "wsa5:To", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__To soap_get_string


#define soap_read__wsa5__To soap_read_string


#define soap_GET__wsa5__To soap_GET_string


#define soap_POST_recv__wsa5__To soap_POST_recv_string

#endif
/* _wsa5__MessageID is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa5__MessageID_DEFINED
#define SOAP_TYPE__wsa5__MessageID_DEFINED

#define soap_default__wsa5__MessageID soap_default_string


#define soap_serialize__wsa5__MessageID soap_serialize_string


#define soap__wsa5__MessageID2s(soap, a) (a)

#define soap_out__wsa5__MessageID soap_out_string


#define soap_s2_wsa5__MessageID(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa5__MessageID soap_in_string

#define soap_new__wsa5__MessageID soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__MessageID(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__MessageID
#define soap_write__wsa5__MessageID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__MessageID(soap, data, "wsa5:MessageID", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__MessageID
#define soap_PUT__wsa5__MessageID(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__MessageID(soap, data, "wsa5:MessageID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__MessageID
#define soap_PATCH__wsa5__MessageID(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__MessageID(soap, data, "wsa5:MessageID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__MessageID
#define soap_POST_send__wsa5__MessageID(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__MessageID(soap, data, "wsa5:MessageID", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__MessageID soap_get_string


#define soap_read__wsa5__MessageID soap_read_string


#define soap_GET__wsa5__MessageID soap_GET_string


#define soap_POST_recv__wsa5__MessageID soap_POST_recv_string

#endif

#ifndef SOAP_TYPE_PointerToint_DEFINED
#define SOAP_TYPE_PointerToint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_XML_DEFINED
#define SOAP_TYPE_PointerTo_XML_DEFINED
#endif

#ifndef SOAP_TYPE_PointerTowsa5__MetadataType_DEFINED
#define SOAP_TYPE_PointerTowsa5__MetadataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__MetadataType(struct soap*, const char *, int, struct wsa5__MetadataType *const*, const char *);
SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_in_PointerTowsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_get_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsa5__ReferenceParametersType_DEFINED
#define SOAP_TYPE_PointerTowsa5__ReferenceParametersType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__ReferenceParametersType(struct soap*, const char *, int, struct wsa5__ReferenceParametersType *const*, const char *);
SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_in_PointerTowsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_get_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_wsa5__FaultCodesOpenEnumType_DEFINED
#define SOAP_TYPE_wsa5__FaultCodesOpenEnumType_DEFINED

#ifdef SOAP_DEFAULT_wsa5__FaultCodesOpenEnumType
#define soap_default_wsa5__FaultCodesOpenEnumType(soap, a) (*(a) = SOAP_DEFAULT_wsa5__FaultCodesOpenEnumType)
#else
#define soap_default_wsa5__FaultCodesOpenEnumType(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*);

#define soap_wsa5__FaultCodesOpenEnumType2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsa5__FaultCodesOpenEnumType(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, char **, const char*);
#define soap_new_wsa5__FaultCodesOpenEnumType soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsa5__FaultCodesOpenEnumType
#define soap_write_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__FaultCodesOpenEnumType
#define soap_PUT_wsa5__FaultCodesOpenEnumType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__FaultCodesOpenEnumType
#define soap_PATCH_wsa5__FaultCodesOpenEnumType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__FaultCodesOpenEnumType
#define soap_POST_send_wsa5__FaultCodesOpenEnumType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__FaultCodesOpenEnumType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsa5__FaultCodesOpenEnumType
#define soap_read_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__FaultCodesOpenEnumType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__FaultCodesOpenEnumType
#define soap_GET_wsa5__FaultCodesOpenEnumType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__FaultCodesOpenEnumType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__FaultCodesOpenEnumType
#define soap_POST_recv_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_read_wsa5__FaultCodesOpenEnumType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__RelationshipTypeOpenEnum_DEFINED
#define SOAP_TYPE_wsa5__RelationshipTypeOpenEnum_DEFINED

#ifdef SOAP_DEFAULT_wsa5__RelationshipTypeOpenEnum
#define soap_default_wsa5__RelationshipTypeOpenEnum(soap, a) (*(a) = SOAP_DEFAULT_wsa5__RelationshipTypeOpenEnum)
#else
#define soap_default_wsa5__RelationshipTypeOpenEnum(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*);

#define soap_wsa5__RelationshipTypeOpenEnum2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsa5__RelationshipTypeOpenEnum(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, char **, const char*);
#define soap_new_wsa5__RelationshipTypeOpenEnum soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsa5__RelationshipTypeOpenEnum
#define soap_write_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__RelationshipTypeOpenEnum
#define soap_PUT_wsa5__RelationshipTypeOpenEnum(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__RelationshipTypeOpenEnum
#define soap_PATCH_wsa5__RelationshipTypeOpenEnum(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__RelationshipTypeOpenEnum
#define soap_POST_send_wsa5__RelationshipTypeOpenEnum(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__RelationshipTypeOpenEnum(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsa5__RelationshipTypeOpenEnum
#define soap_read_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__RelationshipTypeOpenEnum(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__RelationshipTypeOpenEnum
#define soap_GET_wsa5__RelationshipTypeOpenEnum(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__RelationshipTypeOpenEnum(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__RelationshipTypeOpenEnum
#define soap_POST_recv_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_read_wsa5__RelationshipTypeOpenEnum(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED

#ifdef SOAP_DEFAULT__QName
#define soap_default__QName(soap, a) (*(a) = SOAP_DEFAULT__QName)
#else
#define soap_default__QName(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__QName
#define soap_PUT__QName(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__QName
#define soap_PATCH__QName(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__QName
#define soap_POST_send__QName(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__QName
#define soap_GET__QName(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__QName(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__QName
#define soap_POST_recv__QName(soap, data) ( soap_read__QName(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED

#ifdef SOAP_DEFAULT_string
#define soap_default_string(soap, a) (*(a) = SOAP_DEFAULT_string)
#else
#define soap_default_string(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_string
#define soap_PUT_string(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_string
#define soap_PATCH_string(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_string
#define soap_POST_send_string(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_string
#define soap_GET_string(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_string(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_string
#define soap_POST_recv_string(soap, data) ( soap_read_string(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

/* End of soapH.h */
