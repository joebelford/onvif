// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* event.h
   Generated by wsdl2h 2.8.123 from event.wsdl and typemap.dat
   2022-11-17 19:50:15 GMT

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE.

gSOAP XML Web services tools
Copyright (C) 2000-2022, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@page page_notes Notes

@note HINTS:
 - Run soapcpp2 on event.h to generate the SOAP/XML processing logic:
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Edit 'typemap.dat' to control namespace bindings and type mappings:
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -c to generate pure C code.
 - Use wsdl2h -R to include the REST operations defined by the WSDLs.
 - Use wsdl2h -O3 or -O4 to optimize by removing unused schema components.
 - Use wsdl2h -d to enable DOM support for xsd:any and xsd:anyType.
 - Use wsdl2h -F to simulate struct-type derivation in C (also works in C++).
 - Use wsdl2h -f to generate flat C++ class hierarchy, removes type derivation.
 - Use wsdl2h -g to generate top-level root elements with readers and writers.
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Use wsdl2h -L to remove this @note and all other @note comments.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE GENERATED soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $SIZE typemap variable:                                                    *
 *   int                                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to 'typemap.dat' then rerun wsdl2h (use wsdl2h -t typemap.dat):

tev = "http://www.onvif.org/ver10/events/wsdl"
wsrfrw = "http://docs.oasis-open.org/wsrf/rw-2"
wsrfr = "http://docs.oasis-open.org/wsrf/r-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"

*/

#define SOAP_NAMESPACE_OF_tev	"http://www.onvif.org/ver10/events/wsdl"
//gsoap tev   schema namespace:	http://www.onvif.org/ver10/events/wsdl
//gsoap tev   schema elementForm:	qualified
//gsoap tev   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfrw	"http://docs.oasis-open.org/wsrf/rw-2"
//gsoap wsrfrw schema namespace:	http://docs.oasis-open.org/wsrf/rw-2
//gsoap wsrfrw schema elementForm:	qualified
//gsoap wsrfrw schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfr	"http://docs.oasis-open.org/wsrf/r-2"
//gsoap wsrfr schema namespace:	http://docs.oasis-open.org/wsrf/r-2
//gsoap wsrfr schema elementForm:	qualified
//gsoap wsrfr schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };

// Imported type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.

/// Primitive built-in type "xs:NCName".
typedef char* xsd__NCName;

/// Primitive built-in type "xs:anyURI".
typedef char* xsd__anyURI;

/// Primitive built-in type "xs:duration".
typedef char* xsd__duration;

/// Primitive built-in type "xs:nonNegativeInteger".
typedef char* xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token".
typedef char* xsd__token;

/// Built-in attribute "xml:lang".
typedef char* _xml__lang;


/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":ChangedOnly.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "xsd:dateTime xsd:duration".
typedef char* wsnt__AbsoluteOrRelativeTimeType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/events/wsdl":EventBrokerProtocol is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tev__EventBrokerProtocol__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tev__EventBrokerProtocol
{
	tev__EventBrokerProtocol__mqtt,	///< xs:string value="mqtt"
	tev__EventBrokerProtocol__mqtts,	///< xs:string value="mqtts"
	tev__EventBrokerProtocol__ws,	///< xs:string value="ws"
	tev__EventBrokerProtocol__wss,	///< xs:string value="wss"
};

/// @brief "http://www.onvif.org/ver10/events/wsdl":ConnectionStatus is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tev__ConnectionStatus__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tev__ConnectionStatus
{
	tev__ConnectionStatus__Offline,	///< xs:string value="Offline"
	tev__ConnectionStatus__Connecting,	///< xs:string value="Connecting"
	tev__ConnectionStatus__Connected,	///< xs:string value="Connected"
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   TopicPathExpression ::= TopicPath ( '|' TopicPath )* TopicPath ::= RootTopic ChildTopicExpression* RootTopic ::= NamespacePrefix? ('//')? (NCName | '*') NamespacePrefix ::= NCName ':' ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*".
typedef xsd__token wstop__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*".
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of type xs:QName.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   RootTopic ::= QName
/// </BLOCKQUOTE></PRE>
///
typedef _QName wstop__SimpleTopicExpression;


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/events/wsdl":Capabilities is a complexType.
///
/// @note struct tev__Capabilities operations:
/// - tev__Capabilities* soap_new_tev__Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tev__Capabilities(struct soap*, tev__Capabilities*) default initialize members
/// - int soap_read_tev__Capabilities(struct soap*, tev__Capabilities*) deserialize from a source
/// - int soap_write_tev__Capabilities(struct soap*, tev__Capabilities*) serialize to a sink
/// - tev__Capabilities* soap_dup_tev__Capabilities(struct soap*, tev__Capabilities* dst, tev__Capabilities *src) returns deep copy of tev__Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tev__Capabilities(tev__Capabilities*) deep deletes tev__Capabilities data members, use only on dst after soap_dup_tev__Capabilities(NULL, tev__Capabilities *dst, tev__Capabilities *src) (use soapcpp2 -Ed)
struct tev__Capabilities
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "WSSubscriptionPolicySupport" of type xs:boolean.
  @ enum xsd__boolean*                   WSSubscriptionPolicySupport    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "WSPullPointSupport" of type xs:boolean.
  @ enum xsd__boolean*                   WSPullPointSupport             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "WSPausableSubscriptionManagerInterfaceSupport" of type xs:boolean.
  @ enum xsd__boolean*                   WSPausableSubscriptionManagerInterfaceSupport 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of supported notification producers as defined by WS-BaseNotification.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxNotificationProducers" of type xs:int.
  @ int*                                 MaxNotificationProducers       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum supported number of notification pull points.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxPullPoints" of type xs:int.
  @ int*                                 MaxPullPoints                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports persistent notification storage.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PersistentNotificationStorage" of type xs:boolean.
  @ enum xsd__boolean*                   PersistentNotificationStorage  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   A space separated list of supported event broker protocols as defined by the tev:EventBrokerProtocol datatype.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "EventBrokerProtocols" of type xs:string.
  @ char*                                EventBrokerProtocols           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maxiumum number of event broker configurations that can be added to the device.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxEventBrokers" of type xs:int.
  @ int*                                 MaxEventBrokers                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that metadata streaming over MQTT is supported
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MetadataOverMQTT" of type xs:boolean.
  @ enum xsd__boolean*                   MetadataOverMQTT               0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://www.onvif.org/ver10/events/wsdl":EventBrokerConfig is a complexType.
///
/// @note struct tev__EventBrokerConfig operations:
/// - tev__EventBrokerConfig* soap_new_tev__EventBrokerConfig(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tev__EventBrokerConfig(struct soap*, tev__EventBrokerConfig*) default initialize members
/// - int soap_read_tev__EventBrokerConfig(struct soap*, tev__EventBrokerConfig*) deserialize from a source
/// - int soap_write_tev__EventBrokerConfig(struct soap*, tev__EventBrokerConfig*) serialize to a sink
/// - tev__EventBrokerConfig* soap_dup_tev__EventBrokerConfig(struct soap*, tev__EventBrokerConfig* dst, tev__EventBrokerConfig *src) returns deep copy of tev__EventBrokerConfig src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tev__EventBrokerConfig(tev__EventBrokerConfig*) deep deletes tev__EventBrokerConfig data members, use only on dst after soap_dup_tev__EventBrokerConfig(NULL, tev__EventBrokerConfig *dst, tev__EventBrokerConfig *src) (use soapcpp2 -Ed)
struct tev__EventBrokerConfig
{
/// <PRE><BLOCKQUOTE>
///   Event broker address in the format "scheme://host:port[/resource]". The supported schemes shall be returned by the EventBrokerProtocols capability. The resource part of the URL is only valid when using websocket. The Address must be unique.
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type xs:anyURI.
    xsd__anyURI                          Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix that will be prepended to all topics before they are published. This is used to make published topics unique for each device. TopicPrefix is not allowed to be empty.
/// </BLOCKQUOTE></PRE>
///
/// Element "TopicPrefix" of type xs:string.
    char*                                TopicPrefix                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User name for the event broker.
/// </BLOCKQUOTE></PRE>
///
/// Element "UserName" of type xs:string.
    char*                                UserName                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Password for the event broker. Password shall not be included when returned with GetEventBrokers.
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional certificate ID in the key store pointing to a client certificate to be used for authenticating the device at the message broker.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Concrete Topic Expression to select specific event topics to publish.
/// </BLOCKQUOTE></PRE>
///
/// Element "PublishFilter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             PublishFilter                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Quality of service level to use when publishing. This defines the guarantee of delivery for a specific message: 0 = At most once, 1 = At least once, 2 = Exactly once.
/// </BLOCKQUOTE></PRE>
///
/// Element "QoS" of type xs:int.
    int*                                 QoS                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Current connection status (see tev:ConnectionStatus for possible values).
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type xs:string.
    char*                                Status                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The ID of the certification path validation policy used to validate the broker certificate. In case encryption is used but no validation policy is specified, the device shall not validate the broker certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertPathValidationPolicyID" of type xs:string.
    char*                                CertPathValidationPolicyID     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Concrete Topic Expression to select specific metadata topics to publish.
/// </BLOCKQUOTE></PRE>
///
/// Element "MetadataFilter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             MetadataFilter                 0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities is a complexType.
///
/// @note struct _tev__GetServiceCapabilities operations:
/// - _tev__GetServiceCapabilities* soap_new__tev__GetServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*) default initialize members
/// - int soap_read__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*) serialize to a sink
/// - _tev__GetServiceCapabilities* soap_dup__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities* dst, _tev__GetServiceCapabilities *src) returns deep copy of _tev__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__GetServiceCapabilities(_tev__GetServiceCapabilities*) deep deletes _tev__GetServiceCapabilities data members, use only on dst after soap_dup__tev__GetServiceCapabilities(NULL, _tev__GetServiceCapabilities *dst, _tev__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _tev__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note struct _tev__GetServiceCapabilitiesResponse operations:
/// - _tev__GetServiceCapabilitiesResponse* soap_new__tev__GetServiceCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*) default initialize members
/// - int soap_read__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*) deserialize from a source
/// - int soap_write__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*) serialize to a sink
/// - _tev__GetServiceCapabilitiesResponse* soap_dup__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse* dst, _tev__GetServiceCapabilitiesResponse *src) returns deep copy of _tev__GetServiceCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__GetServiceCapabilitiesResponse(_tev__GetServiceCapabilitiesResponse*) deep deletes _tev__GetServiceCapabilitiesResponse data members, use only on dst after soap_dup__tev__GetServiceCapabilitiesResponse(NULL, _tev__GetServiceCapabilitiesResponse *dst, _tev__GetServiceCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _tev__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the event service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
    struct tev__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription
/// @brief "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription is a complexType.
///
/// @note struct _tev__CreatePullPointSubscription operations:
/// - _tev__CreatePullPointSubscription* soap_new__tev__CreatePullPointSubscription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*) default initialize members
/// - int soap_read__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*) deserialize from a source
/// - int soap_write__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*) serialize to a sink
/// - _tev__CreatePullPointSubscription* soap_dup__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription* dst, _tev__CreatePullPointSubscription *src) returns deep copy of _tev__CreatePullPointSubscription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__CreatePullPointSubscription(_tev__CreatePullPointSubscription*) deep deletes _tev__CreatePullPointSubscription data members, use only on dst after soap_dup__tev__CreatePullPointSubscription(NULL, _tev__CreatePullPointSubscription *dst, _tev__CreatePullPointSubscription *src) (use soapcpp2 -Ed)
struct _tev__CreatePullPointSubscription
{
/// <PRE><BLOCKQUOTE>
///   Optional XPATH expression to select specific topics.
/// </BLOCKQUOTE></PRE>
///
/// Element "Filter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Initial termination time.
/// </BLOCKQUOTE></PRE>
///
/// Element "InitialTerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     InitialTerminationTime         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a>.
/// </BLOCKQUOTE></PRE>
///
/// @note struct _tev__CreatePullPointSubscription_SubscriptionPolicy operations:
/// - _tev__CreatePullPointSubscription_SubscriptionPolicy* soap_new__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, _tev__CreatePullPointSubscription_SubscriptionPolicy*) default initialize members
/// - int soap_read__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, _tev__CreatePullPointSubscription_SubscriptionPolicy*) deserialize from a source
/// - int soap_write__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, _tev__CreatePullPointSubscription_SubscriptionPolicy*) serialize to a sink
/// - _tev__CreatePullPointSubscription_SubscriptionPolicy* soap_dup__tev__CreatePullPointSubscription_SubscriptionPolicy(struct soap*, _tev__CreatePullPointSubscription_SubscriptionPolicy* dst, _tev__CreatePullPointSubscription_SubscriptionPolicy *src) returns deep copy of _tev__CreatePullPointSubscription_SubscriptionPolicy src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__CreatePullPointSubscription_SubscriptionPolicy(_tev__CreatePullPointSubscription_SubscriptionPolicy*) deep deletes _tev__CreatePullPointSubscription_SubscriptionPolicy data members, use only on dst after soap_dup__tev__CreatePullPointSubscription_SubscriptionPolicy(NULL, _tev__CreatePullPointSubscription_SubscriptionPolicy *dst, _tev__CreatePullPointSubscription_SubscriptionPolicy *src) (use soapcpp2 -Ed)
    struct _tev__CreatePullPointSubscription_SubscriptionPolicy
    {
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse is a complexType.
///
/// @note struct _tev__CreatePullPointSubscriptionResponse operations:
/// - _tev__CreatePullPointSubscriptionResponse* soap_new__tev__CreatePullPointSubscriptionResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*) default initialize members
/// - int soap_read__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*) deserialize from a source
/// - int soap_write__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*) serialize to a sink
/// - _tev__CreatePullPointSubscriptionResponse* soap_dup__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse* dst, _tev__CreatePullPointSubscriptionResponse *src) returns deep copy of _tev__CreatePullPointSubscriptionResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__CreatePullPointSubscriptionResponse(_tev__CreatePullPointSubscriptionResponse*) deep deletes _tev__CreatePullPointSubscriptionResponse data members, use only on dst after soap_dup__tev__CreatePullPointSubscriptionResponse(NULL, _tev__CreatePullPointSubscriptionResponse *dst, _tev__CreatePullPointSubscriptionResponse *src) (use soapcpp2 -Ed)
struct _tev__CreatePullPointSubscriptionResponse
{
/// <PRE><BLOCKQUOTE>
///   Endpoint reference of the subscription to be used for pulling the messages.
/// </BLOCKQUOTE></PRE>
///
/// Element "SubscriptionReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current time of the server for synchronization purposes.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:"CurrentTime.
    time_t                               wsnt__CurrentTime              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Date time when the PullPoint will be shut down without further pull requests.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:"TerminationTime.
    time_t                               wsnt__TerminationTime          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessages
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessages is a complexType.
///
/// @note struct _tev__PullMessages operations:
/// - _tev__PullMessages* soap_new__tev__PullMessages(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__PullMessages(struct soap*, _tev__PullMessages*) default initialize members
/// - int soap_read__tev__PullMessages(struct soap*, _tev__PullMessages*) deserialize from a source
/// - int soap_write__tev__PullMessages(struct soap*, _tev__PullMessages*) serialize to a sink
/// - _tev__PullMessages* soap_dup__tev__PullMessages(struct soap*, _tev__PullMessages* dst, _tev__PullMessages *src) returns deep copy of _tev__PullMessages src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__PullMessages(_tev__PullMessages*) deep deletes _tev__PullMessages data members, use only on dst after soap_dup__tev__PullMessages(NULL, _tev__PullMessages *dst, _tev__PullMessages *src) (use soapcpp2 -Ed)
struct _tev__PullMessages
{
/// <PRE><BLOCKQUOTE>
///   Maximum time to block until this method returns.
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Upper limit for the number of messages to return at once. A server implementation may decide to return less messages.
/// </BLOCKQUOTE></PRE>
///
/// Element "MessageLimit" of type xs:int.
    int                                  MessageLimit                   1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse is a complexType.
///
/// @note struct _tev__PullMessagesResponse operations:
/// - _tev__PullMessagesResponse* soap_new__tev__PullMessagesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*) default initialize members
/// - int soap_read__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*) deserialize from a source
/// - int soap_write__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*) serialize to a sink
/// - _tev__PullMessagesResponse* soap_dup__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse* dst, _tev__PullMessagesResponse *src) returns deep copy of _tev__PullMessagesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__PullMessagesResponse(_tev__PullMessagesResponse*) deep deletes _tev__PullMessagesResponse data members, use only on dst after soap_dup__tev__PullMessagesResponse(NULL, _tev__PullMessagesResponse *dst, _tev__PullMessagesResponse *src) (use soapcpp2 -Ed)
struct _tev__PullMessagesResponse
{
/// <PRE><BLOCKQUOTE>
///   The date and time when the messages have been delivered by the web server to the client.
/// </BLOCKQUOTE></PRE>
///
/// Element "CurrentTime" of type xs:dateTime.
    time_t                               CurrentTime                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Date time when the PullPoint will be shut down without further pull requests.
/// </BLOCKQUOTE></PRE>
///
/// Element "TerminationTime" of type xs:dateTime.
    time_t                               TerminationTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of messages. This list shall be empty in case of a timeout.
/// </BLOCKQUOTE></PRE>
///
/// Size of the dynamic array of values of type struct wsnt__NotificationMessageHolderType* is 0..unbounded.
  $ int                                  __sizeNotificationMessage      0;
/// Array struct wsnt__NotificationMessageHolderType* of size 0..unbounded.
    struct wsnt__NotificationMessageHolderType*  wsnt__NotificationMessage      0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse is a complexType.
///
/// @note struct _tev__PullMessagesFaultResponse operations:
/// - _tev__PullMessagesFaultResponse* soap_new__tev__PullMessagesFaultResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*) default initialize members
/// - int soap_read__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*) deserialize from a source
/// - int soap_write__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*) serialize to a sink
/// - _tev__PullMessagesFaultResponse* soap_dup__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse* dst, _tev__PullMessagesFaultResponse *src) returns deep copy of _tev__PullMessagesFaultResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__PullMessagesFaultResponse(_tev__PullMessagesFaultResponse*) deep deletes _tev__PullMessagesFaultResponse data members, use only on dst after soap_dup__tev__PullMessagesFaultResponse(NULL, _tev__PullMessagesFaultResponse *dst, _tev__PullMessagesFaultResponse *src) (use soapcpp2 -Ed)
struct _tev__PullMessagesFaultResponse
{
/// <PRE><BLOCKQUOTE>
///   Maximum timeout supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxTimeout" of type xs:duration.
    xsd__duration                        MaxTimeout                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum message limit supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxMessageLimit" of type xs:int.
    int                                  MaxMessageLimit                1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":Seek
/// @brief "http://www.onvif.org/ver10/events/wsdl":Seek is a complexType.
///
/// @note struct _tev__Seek operations:
/// - _tev__Seek* soap_new__tev__Seek(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__Seek(struct soap*, _tev__Seek*) default initialize members
/// - int soap_read__tev__Seek(struct soap*, _tev__Seek*) deserialize from a source
/// - int soap_write__tev__Seek(struct soap*, _tev__Seek*) serialize to a sink
/// - _tev__Seek* soap_dup__tev__Seek(struct soap*, _tev__Seek* dst, _tev__Seek *src) returns deep copy of _tev__Seek src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__Seek(_tev__Seek*) deep deletes _tev__Seek data members, use only on dst after soap_dup__tev__Seek(NULL, _tev__Seek *dst, _tev__Seek *src) (use soapcpp2 -Ed)
struct _tev__Seek
{
/// <PRE><BLOCKQUOTE>
///   The date and time to match against stored messages.
/// </BLOCKQUOTE></PRE>
///
/// Element "UtcTime" of type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reverse the pull direction of PullMessages.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reverse" of type xs:boolean.
    enum xsd__boolean*                   Reverse                        0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SeekResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":SeekResponse is a complexType.
///
/// @note struct _tev__SeekResponse operations:
/// - _tev__SeekResponse* soap_new__tev__SeekResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__SeekResponse(struct soap*, _tev__SeekResponse*) default initialize members
/// - int soap_read__tev__SeekResponse(struct soap*, _tev__SeekResponse*) deserialize from a source
/// - int soap_write__tev__SeekResponse(struct soap*, _tev__SeekResponse*) serialize to a sink
/// - _tev__SeekResponse* soap_dup__tev__SeekResponse(struct soap*, _tev__SeekResponse* dst, _tev__SeekResponse *src) returns deep copy of _tev__SeekResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__SeekResponse(_tev__SeekResponse*) deep deletes _tev__SeekResponse data members, use only on dst after soap_dup__tev__SeekResponse(NULL, _tev__SeekResponse *dst, _tev__SeekResponse *src) (use soapcpp2 -Ed)
struct _tev__SeekResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint is a complexType.
///
/// @note struct _tev__SetSynchronizationPoint operations:
/// - _tev__SetSynchronizationPoint* soap_new__tev__SetSynchronizationPoint(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*) default initialize members
/// - int soap_read__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*) deserialize from a source
/// - int soap_write__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*) serialize to a sink
/// - _tev__SetSynchronizationPoint* soap_dup__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint* dst, _tev__SetSynchronizationPoint *src) returns deep copy of _tev__SetSynchronizationPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__SetSynchronizationPoint(_tev__SetSynchronizationPoint*) deep deletes _tev__SetSynchronizationPoint data members, use only on dst after soap_dup__tev__SetSynchronizationPoint(NULL, _tev__SetSynchronizationPoint *dst, _tev__SetSynchronizationPoint *src) (use soapcpp2 -Ed)
struct _tev__SetSynchronizationPoint
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse is a complexType.
///
/// @note struct _tev__SetSynchronizationPointResponse operations:
/// - _tev__SetSynchronizationPointResponse* soap_new__tev__SetSynchronizationPointResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*) default initialize members
/// - int soap_read__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*) deserialize from a source
/// - int soap_write__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*) serialize to a sink
/// - _tev__SetSynchronizationPointResponse* soap_dup__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse* dst, _tev__SetSynchronizationPointResponse *src) returns deep copy of _tev__SetSynchronizationPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__SetSynchronizationPointResponse(_tev__SetSynchronizationPointResponse*) deep deletes _tev__SetSynchronizationPointResponse data members, use only on dst after soap_dup__tev__SetSynchronizationPointResponse(NULL, _tev__SetSynchronizationPointResponse *dst, _tev__SetSynchronizationPointResponse *src) (use soapcpp2 -Ed)
struct _tev__SetSynchronizationPointResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventProperties
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventProperties is a complexType.
///
/// @note struct _tev__GetEventProperties operations:
/// - _tev__GetEventProperties* soap_new__tev__GetEventProperties(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*) default initialize members
/// - int soap_read__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*) deserialize from a source
/// - int soap_write__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*) serialize to a sink
/// - _tev__GetEventProperties* soap_dup__tev__GetEventProperties(struct soap*, _tev__GetEventProperties* dst, _tev__GetEventProperties *src) returns deep copy of _tev__GetEventProperties src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__GetEventProperties(_tev__GetEventProperties*) deep deletes _tev__GetEventProperties data members, use only on dst after soap_dup__tev__GetEventProperties(NULL, _tev__GetEventProperties *dst, _tev__GetEventProperties *src) (use soapcpp2 -Ed)
struct _tev__GetEventProperties
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse is a complexType.
///
/// @note struct _tev__GetEventPropertiesResponse operations:
/// - _tev__GetEventPropertiesResponse* soap_new__tev__GetEventPropertiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*) default initialize members
/// - int soap_read__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*) deserialize from a source
/// - int soap_write__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*) serialize to a sink
/// - _tev__GetEventPropertiesResponse* soap_dup__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse* dst, _tev__GetEventPropertiesResponse *src) returns deep copy of _tev__GetEventPropertiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__GetEventPropertiesResponse(_tev__GetEventPropertiesResponse*) deep deletes _tev__GetEventPropertiesResponse data members, use only on dst after soap_dup__tev__GetEventPropertiesResponse(NULL, _tev__GetEventPropertiesResponse *dst, _tev__GetEventPropertiesResponse *src) (use soapcpp2 -Ed)
struct _tev__GetEventPropertiesResponse
{
/// <PRE><BLOCKQUOTE>
///   List of topic namespaces supported.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeTopicNamespaceLocation   1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         TopicNamespaceLocation         1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   True when topicset is fixed for all times.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:"FixedTopicSet.
    enum xsd__boolean                    wsnt__FixedTopicSet            1 = xsd__boolean__true_;	///< Required element with default value="true".
/// <PRE><BLOCKQUOTE>
///   Set of topics supported.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:"TopicSet.
    struct wstop__TopicSetType*          wstop__TopicSet                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the XPath expression syntax supported for matching topic expressions. <br/>
///   The following TopicExpressionDialects are mandatory for an ONVIF compliant device :
///   <ul type="disc">
///   <li>http://docs.oasis-open.org/wsn/t-1/TopicExpression/Concrete</li>
///   <li>http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Size of the dynamic array of values of type xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeTopicExpressionDialect   1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         wsnt__TopicExpressionDialect   1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Defines the XPath function set supported for message content filtering.<br/> The following MessageContentFilterDialects should be returned if a device supports the message content filtering:
///   <ul type="disc">
///   <li>http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter.</li>
///   </ul>
///   A device that does not support any MessageContentFilterDialect returns a single empty url.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeMessageContentFilterDialect 1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         MessageContentFilterDialect    1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional ProducerPropertiesDialects. Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a> for advanced filtering.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 0..unbounded.
  $ int                                  __sizeProducerPropertiesFilterDialect 0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         ProducerPropertiesFilterDialect 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Message Content Description Language allows referencing
///   of vendor-specific types. In order to ease the integration of such types into a client application,
///   the GetEventPropertiesResponse shall list all URI locations to schema files whose types are
///   used in the description of notifications, with MessageContentSchemaLocation elements.<br/> This list shall at least contain the URI of the ONVIF schema file.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI* is 1..unbounded.
  $ int                                  __sizeMessageContentSchemaLocation 1;
/// Array xsd__anyURI* of size 1..unbounded.
    xsd__anyURI*                         MessageContentSchemaLocation   1;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":AddEventBroker
/// @brief "http://www.onvif.org/ver10/events/wsdl":AddEventBroker is a complexType.
///
/// @note struct _tev__AddEventBroker operations:
/// - _tev__AddEventBroker* soap_new__tev__AddEventBroker(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__AddEventBroker(struct soap*, _tev__AddEventBroker*) default initialize members
/// - int soap_read__tev__AddEventBroker(struct soap*, _tev__AddEventBroker*) deserialize from a source
/// - int soap_write__tev__AddEventBroker(struct soap*, _tev__AddEventBroker*) serialize to a sink
/// - _tev__AddEventBroker* soap_dup__tev__AddEventBroker(struct soap*, _tev__AddEventBroker* dst, _tev__AddEventBroker *src) returns deep copy of _tev__AddEventBroker src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__AddEventBroker(_tev__AddEventBroker*) deep deletes _tev__AddEventBroker data members, use only on dst after soap_dup__tev__AddEventBroker(NULL, _tev__AddEventBroker *dst, _tev__AddEventBroker *src) (use soapcpp2 -Ed)
struct _tev__AddEventBroker
{
/// Element "EventBroker" of type "http://www.onvif.org/ver10/events/wsdl":EventBrokerConfig.
    struct tev__EventBrokerConfig*       EventBroker                    1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":AddEventBrokerResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":AddEventBrokerResponse is a complexType.
///
/// @note struct _tev__AddEventBrokerResponse operations:
/// - _tev__AddEventBrokerResponse* soap_new__tev__AddEventBrokerResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__AddEventBrokerResponse(struct soap*, _tev__AddEventBrokerResponse*) default initialize members
/// - int soap_read__tev__AddEventBrokerResponse(struct soap*, _tev__AddEventBrokerResponse*) deserialize from a source
/// - int soap_write__tev__AddEventBrokerResponse(struct soap*, _tev__AddEventBrokerResponse*) serialize to a sink
/// - _tev__AddEventBrokerResponse* soap_dup__tev__AddEventBrokerResponse(struct soap*, _tev__AddEventBrokerResponse* dst, _tev__AddEventBrokerResponse *src) returns deep copy of _tev__AddEventBrokerResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__AddEventBrokerResponse(_tev__AddEventBrokerResponse*) deep deletes _tev__AddEventBrokerResponse data members, use only on dst after soap_dup__tev__AddEventBrokerResponse(NULL, _tev__AddEventBrokerResponse *dst, _tev__AddEventBrokerResponse *src) (use soapcpp2 -Ed)
struct _tev__AddEventBrokerResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":DeleteEventBroker
/// @brief "http://www.onvif.org/ver10/events/wsdl":DeleteEventBroker is a complexType.
///
/// @note struct _tev__DeleteEventBroker operations:
/// - _tev__DeleteEventBroker* soap_new__tev__DeleteEventBroker(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__DeleteEventBroker(struct soap*, _tev__DeleteEventBroker*) default initialize members
/// - int soap_read__tev__DeleteEventBroker(struct soap*, _tev__DeleteEventBroker*) deserialize from a source
/// - int soap_write__tev__DeleteEventBroker(struct soap*, _tev__DeleteEventBroker*) serialize to a sink
/// - _tev__DeleteEventBroker* soap_dup__tev__DeleteEventBroker(struct soap*, _tev__DeleteEventBroker* dst, _tev__DeleteEventBroker *src) returns deep copy of _tev__DeleteEventBroker src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__DeleteEventBroker(_tev__DeleteEventBroker*) deep deletes _tev__DeleteEventBroker data members, use only on dst after soap_dup__tev__DeleteEventBroker(NULL, _tev__DeleteEventBroker *dst, _tev__DeleteEventBroker *src) (use soapcpp2 -Ed)
struct _tev__DeleteEventBroker
{
/// Element "Address" of type xs:anyURI.
    xsd__anyURI                          Address                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":DeleteEventBrokerResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":DeleteEventBrokerResponse is a complexType.
///
/// @note struct _tev__DeleteEventBrokerResponse operations:
/// - _tev__DeleteEventBrokerResponse* soap_new__tev__DeleteEventBrokerResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__DeleteEventBrokerResponse(struct soap*, _tev__DeleteEventBrokerResponse*) default initialize members
/// - int soap_read__tev__DeleteEventBrokerResponse(struct soap*, _tev__DeleteEventBrokerResponse*) deserialize from a source
/// - int soap_write__tev__DeleteEventBrokerResponse(struct soap*, _tev__DeleteEventBrokerResponse*) serialize to a sink
/// - _tev__DeleteEventBrokerResponse* soap_dup__tev__DeleteEventBrokerResponse(struct soap*, _tev__DeleteEventBrokerResponse* dst, _tev__DeleteEventBrokerResponse *src) returns deep copy of _tev__DeleteEventBrokerResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__DeleteEventBrokerResponse(_tev__DeleteEventBrokerResponse*) deep deletes _tev__DeleteEventBrokerResponse data members, use only on dst after soap_dup__tev__DeleteEventBrokerResponse(NULL, _tev__DeleteEventBrokerResponse *dst, _tev__DeleteEventBrokerResponse *src) (use soapcpp2 -Ed)
struct _tev__DeleteEventBrokerResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventBrokers
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventBrokers is a complexType.
///
/// @note struct _tev__GetEventBrokers operations:
/// - _tev__GetEventBrokers* soap_new__tev__GetEventBrokers(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__GetEventBrokers(struct soap*, _tev__GetEventBrokers*) default initialize members
/// - int soap_read__tev__GetEventBrokers(struct soap*, _tev__GetEventBrokers*) deserialize from a source
/// - int soap_write__tev__GetEventBrokers(struct soap*, _tev__GetEventBrokers*) serialize to a sink
/// - _tev__GetEventBrokers* soap_dup__tev__GetEventBrokers(struct soap*, _tev__GetEventBrokers* dst, _tev__GetEventBrokers *src) returns deep copy of _tev__GetEventBrokers src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__GetEventBrokers(_tev__GetEventBrokers*) deep deletes _tev__GetEventBrokers data members, use only on dst after soap_dup__tev__GetEventBrokers(NULL, _tev__GetEventBrokers *dst, _tev__GetEventBrokers *src) (use soapcpp2 -Ed)
struct _tev__GetEventBrokers
{
/// Element "Address" of type xs:anyURI.
    xsd__anyURI                          Address                        0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventBrokersResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventBrokersResponse is a complexType.
///
/// @note struct _tev__GetEventBrokersResponse operations:
/// - _tev__GetEventBrokersResponse* soap_new__tev__GetEventBrokersResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tev__GetEventBrokersResponse(struct soap*, _tev__GetEventBrokersResponse*) default initialize members
/// - int soap_read__tev__GetEventBrokersResponse(struct soap*, _tev__GetEventBrokersResponse*) deserialize from a source
/// - int soap_write__tev__GetEventBrokersResponse(struct soap*, _tev__GetEventBrokersResponse*) serialize to a sink
/// - _tev__GetEventBrokersResponse* soap_dup__tev__GetEventBrokersResponse(struct soap*, _tev__GetEventBrokersResponse* dst, _tev__GetEventBrokersResponse *src) returns deep copy of _tev__GetEventBrokersResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tev__GetEventBrokersResponse(_tev__GetEventBrokersResponse*) deep deletes _tev__GetEventBrokersResponse data members, use only on dst after soap_dup__tev__GetEventBrokersResponse(NULL, _tev__GetEventBrokersResponse *dst, _tev__GetEventBrokersResponse *src) (use soapcpp2 -Ed)
struct _tev__GetEventBrokersResponse
{
/// Size of array of struct tev__EventBrokerConfig* is 0..unbounded.
  $ int                                  __sizeEventBroker              0;
/// Array struct tev__EventBrokerConfig* of size 0..unbounded.
    struct tev__EventBrokerConfig*       EventBroker                    0;	///< Multiple elements.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
///
/// This type is extended by:
/// - "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType as struct wsrfr__ResourceUnknownFaultType
/// - "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType as struct wsrfr__ResourceUnavailableFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType as struct wsnt__SubscribeCreationFailedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType as struct wsnt__InvalidFilterFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType as struct wsnt__TopicExpressionDialectUnknownFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType as struct wsnt__InvalidTopicExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType as struct wsnt__TopicNotSupportedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType as struct wsnt__MultipleTopicsSpecifiedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType as struct wsnt__InvalidProducerPropertiesExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType as struct wsnt__InvalidMessageContentExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType as struct wsnt__UnrecognizedPolicyRequestFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType as struct wsnt__UnsupportedPolicyRequestFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType as struct wsnt__NotifyMessageNotSupportedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType as struct wsnt__UnacceptableInitialTerminationTimeFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType as struct wsnt__NoCurrentMessageOnTopicFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType as struct wsnt__UnableToGetMessagesFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType as struct wsnt__UnableToDestroyPullPointFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType as struct wsnt__UnableToCreatePullPointFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType as struct wsnt__UnacceptableTerminationTimeFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType as struct wsnt__UnableToDestroySubscriptionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType as struct wsnt__PauseFailedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType as struct wsnt__ResumeFailedFaultType
///
/// @note struct wsrfbf__BaseFaultType operations:
/// - wsrfbf__BaseFaultType* soap_new_wsrfbf__BaseFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType*) default initialize members
/// - int soap_read_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType*) deserialize from a source
/// - int soap_write_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType*) serialize to a sink
/// - wsrfbf__BaseFaultType* soap_dup_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType* dst, wsrfbf__BaseFaultType *src) returns deep copy of wsrfbf__BaseFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsrfbf__BaseFaultType(wsrfbf__BaseFaultType*) deep deletes wsrfbf__BaseFaultType data members, use only on dst after soap_dup_wsrfbf__BaseFaultType(NULL, wsrfbf__BaseFaultType *dst, wsrfbf__BaseFaultType *src) (use soapcpp2 -Ed)
struct wsrfbf__BaseFaultType
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// @note struct _wsrfbf__BaseFaultType_ErrorCode operations:
/// - _wsrfbf__BaseFaultType_ErrorCode* soap_new__wsrfbf__BaseFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode*) serialize to a sink
/// - _wsrfbf__BaseFaultType_ErrorCode* soap_dup__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode* dst, _wsrfbf__BaseFaultType_ErrorCode *src) returns deep copy of _wsrfbf__BaseFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfbf__BaseFaultType_ErrorCode(_wsrfbf__BaseFaultType_ErrorCode*) deep deletes _wsrfbf__BaseFaultType_ErrorCode data members, use only on dst after soap_dup__wsrfbf__BaseFaultType_ErrorCode(NULL, _wsrfbf__BaseFaultType_ErrorCode *dst, _wsrfbf__BaseFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsrfbf__BaseFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsrfbf__BaseFaultType_Description operations:
/// - _wsrfbf__BaseFaultType_Description* soap_new__wsrfbf__BaseFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description*) default initialize members
/// - int soap_read__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description*) deserialize from a source
/// - int soap_write__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description*) serialize to a sink
/// - _wsrfbf__BaseFaultType_Description* soap_dup__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description* dst, _wsrfbf__BaseFaultType_Description *src) returns deep copy of _wsrfbf__BaseFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfbf__BaseFaultType_Description(_wsrfbf__BaseFaultType_Description*) deep deletes _wsrfbf__BaseFaultType_Description data members, use only on dst after soap_dup__wsrfbf__BaseFaultType_Description(NULL, _wsrfbf__BaseFaultType_Description *dst, _wsrfbf__BaseFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsrfbf__BaseFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;	///< Multiple elements.
/// @note struct _wsrfbf__BaseFaultType_FaultCause operations:
/// - _wsrfbf__BaseFaultType_FaultCause* soap_new__wsrfbf__BaseFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause*) default initialize members
/// - int soap_read__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause*) serialize to a sink
/// - _wsrfbf__BaseFaultType_FaultCause* soap_dup__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause* dst, _wsrfbf__BaseFaultType_FaultCause *src) returns deep copy of _wsrfbf__BaseFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfbf__BaseFaultType_FaultCause(_wsrfbf__BaseFaultType_FaultCause*) deep deletes _wsrfbf__BaseFaultType_FaultCause data members, use only on dst after soap_dup__wsrfbf__BaseFaultType_FaultCause(NULL, _wsrfbf__BaseFaultType_FaultCause *dst, _wsrfbf__BaseFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsrfbf__BaseFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
///
/// @note struct wsnt__QueryExpressionType operations:
/// - wsnt__QueryExpressionType* soap_new_wsnt__QueryExpressionType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType*) default initialize members
/// - int soap_read_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType*) deserialize from a source
/// - int soap_write_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType*) serialize to a sink
/// - wsnt__QueryExpressionType* soap_dup_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType* dst, wsnt__QueryExpressionType *src) returns deep copy of wsnt__QueryExpressionType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__QueryExpressionType(wsnt__QueryExpressionType*) deep deletes wsnt__QueryExpressionType data members, use only on dst after soap_dup_wsnt__QueryExpressionType(NULL, wsnt__QueryExpressionType *dst, wsnt__QueryExpressionType *src) (use soapcpp2 -Ed)
struct wsnt__QueryExpressionType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
///
/// @note struct wsnt__TopicExpressionType operations:
/// - wsnt__TopicExpressionType* soap_new_wsnt__TopicExpressionType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType*) default initialize members
/// - int soap_read_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType*) deserialize from a source
/// - int soap_write_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType*) serialize to a sink
/// - wsnt__TopicExpressionType* soap_dup_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType* dst, wsnt__TopicExpressionType *src) returns deep copy of wsnt__TopicExpressionType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__TopicExpressionType(wsnt__TopicExpressionType*) deep deletes wsnt__TopicExpressionType data members, use only on dst after soap_dup_wsnt__TopicExpressionType(NULL, wsnt__TopicExpressionType *dst, wsnt__TopicExpressionType *src) (use soapcpp2 -Ed)
struct wsnt__TopicExpressionType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
///
/// @note struct wsnt__FilterType operations:
/// - wsnt__FilterType* soap_new_wsnt__FilterType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__FilterType(struct soap*, wsnt__FilterType*) default initialize members
/// - int soap_read_wsnt__FilterType(struct soap*, wsnt__FilterType*) deserialize from a source
/// - int soap_write_wsnt__FilterType(struct soap*, wsnt__FilterType*) serialize to a sink
/// - wsnt__FilterType* soap_dup_wsnt__FilterType(struct soap*, wsnt__FilterType* dst, wsnt__FilterType *src) returns deep copy of wsnt__FilterType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__FilterType(wsnt__FilterType*) deep deletes wsnt__FilterType data members, use only on dst after soap_dup_wsnt__FilterType(NULL, wsnt__FilterType *dst, wsnt__FilterType *src) (use soapcpp2 -Ed)
struct wsnt__FilterType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
///
/// @note struct wsnt__SubscriptionPolicyType operations:
/// - wsnt__SubscriptionPolicyType* soap_new_wsnt__SubscriptionPolicyType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType*) default initialize members
/// - int soap_read_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType*) deserialize from a source
/// - int soap_write_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType*) serialize to a sink
/// - wsnt__SubscriptionPolicyType* soap_dup_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType* dst, wsnt__SubscriptionPolicyType *src) returns deep copy of wsnt__SubscriptionPolicyType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__SubscriptionPolicyType(wsnt__SubscriptionPolicyType*) deep deletes wsnt__SubscriptionPolicyType data members, use only on dst after soap_dup_wsnt__SubscriptionPolicyType(NULL, wsnt__SubscriptionPolicyType *dst, wsnt__SubscriptionPolicyType *src) (use soapcpp2 -Ed)
struct wsnt__SubscriptionPolicyType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
///
/// @note struct wsnt__NotificationMessageHolderType operations:
/// - wsnt__NotificationMessageHolderType* soap_new_wsnt__NotificationMessageHolderType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType*) default initialize members
/// - int soap_read_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType*) deserialize from a source
/// - int soap_write_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType*) serialize to a sink
/// - wsnt__NotificationMessageHolderType* soap_dup_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType* dst, wsnt__NotificationMessageHolderType *src) returns deep copy of wsnt__NotificationMessageHolderType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__NotificationMessageHolderType(wsnt__NotificationMessageHolderType*) deep deletes wsnt__NotificationMessageHolderType data members, use only on dst after soap_dup_wsnt__NotificationMessageHolderType(NULL, wsnt__NotificationMessageHolderType *dst, wsnt__NotificationMessageHolderType *src) (use soapcpp2 -Ed)
struct wsnt__NotificationMessageHolderType
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"Topic.
    struct wsnt__TopicExpressionType*    Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
/// @note struct _wsnt__NotificationMessageHolderType_Message operations:
/// - _wsnt__NotificationMessageHolderType_Message* soap_new__wsnt__NotificationMessageHolderType_Message(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message*) default initialize members
/// - int soap_read__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message*) deserialize from a source
/// - int soap_write__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message*) serialize to a sink
/// - _wsnt__NotificationMessageHolderType_Message* soap_dup__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message* dst, _wsnt__NotificationMessageHolderType_Message *src) returns deep copy of _wsnt__NotificationMessageHolderType_Message src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotificationMessageHolderType_Message(_wsnt__NotificationMessageHolderType_Message*) deep deletes _wsnt__NotificationMessageHolderType_Message data members, use only on dst after soap_dup__wsnt__NotificationMessageHolderType_Message(NULL, _wsnt__NotificationMessageHolderType_Message *dst, _wsnt__NotificationMessageHolderType_Message *src) (use soapcpp2 -Ed)
    struct _wsnt__NotificationMessageHolderType_Message
    {
/// <any namespace="##any" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                    Message                        1;	///< Required element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
///
/// @note struct _wsnt__NotificationProducerRP operations:
/// - _wsnt__NotificationProducerRP* soap_new__wsnt__NotificationProducerRP(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*) default initialize members
/// - int soap_read__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*) deserialize from a source
/// - int soap_write__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*) serialize to a sink
/// - _wsnt__NotificationProducerRP* soap_dup__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP* dst, _wsnt__NotificationProducerRP *src) returns deep copy of _wsnt__NotificationProducerRP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotificationProducerRP(_wsnt__NotificationProducerRP*) deep deletes _wsnt__NotificationProducerRP data members, use only on dst after soap_dup__wsnt__NotificationProducerRP(NULL, _wsnt__NotificationProducerRP *dst, _wsnt__NotificationProducerRP *src) (use soapcpp2 -Ed)
struct _wsnt__NotificationProducerRP
{
/// Size of the dynamic array of values of type struct wsnt__TopicExpressionType* is 0..unbounded.
  $ int                                  __sizeTopicExpression          0;
/// Array struct wsnt__TopicExpressionType* of size 0..unbounded.
    struct wsnt__TopicExpressionType*    TopicExpression_               0;	///< Multiple elements.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"FixedTopicSet.
    enum xsd__boolean*                   FixedTopicSet                  0 = xsd__boolean__true_;	///< Optional element with default value="true".
/// Size of the dynamic array of values of type xsd__anyURI* is 0..unbounded.
  $ int                                  __sizeTopicExpressionDialect   0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         TopicExpressionDialect_        0;	///< Multiple elements.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"TopicSet.
    struct wstop__TopicSetType*          wstop__TopicSet                0;	///< Optional element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
///
/// @note struct _wsnt__SubscriptionManagerRP operations:
/// - _wsnt__SubscriptionManagerRP* soap_new__wsnt__SubscriptionManagerRP(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*) default initialize members
/// - int soap_read__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*) deserialize from a source
/// - int soap_write__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*) serialize to a sink
/// - _wsnt__SubscriptionManagerRP* soap_dup__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP* dst, _wsnt__SubscriptionManagerRP *src) returns deep copy of _wsnt__SubscriptionManagerRP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscriptionManagerRP(_wsnt__SubscriptionManagerRP*) deep deletes _wsnt__SubscriptionManagerRP data members, use only on dst after soap_dup__wsnt__SubscriptionManagerRP(NULL, _wsnt__SubscriptionManagerRP *dst, _wsnt__SubscriptionManagerRP *src) (use soapcpp2 -Ed)
struct _wsnt__SubscriptionManagerRP
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"Filter.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"SubscriptionPolicy.
    struct wsnt__SubscriptionPolicyType*  SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
/// @brief "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
///
/// @note struct _wsnt__Notify operations:
/// - _wsnt__Notify* soap_new__wsnt__Notify(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Notify(struct soap*, _wsnt__Notify*) default initialize members
/// - int soap_read__wsnt__Notify(struct soap*, _wsnt__Notify*) deserialize from a source
/// - int soap_write__wsnt__Notify(struct soap*, _wsnt__Notify*) serialize to a sink
/// - _wsnt__Notify* soap_dup__wsnt__Notify(struct soap*, _wsnt__Notify* dst, _wsnt__Notify *src) returns deep copy of _wsnt__Notify src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Notify(_wsnt__Notify*) deep deletes _wsnt__Notify data members, use only on dst after soap_dup__wsnt__Notify(NULL, _wsnt__Notify *dst, _wsnt__Notify *src) (use soapcpp2 -Ed)
struct _wsnt__Notify
{
/// Size of the dynamic array of values of type struct wsnt__NotificationMessageHolderType* is 1..unbounded.
  $ int                                  __sizeNotificationMessage      1;
/// Array struct wsnt__NotificationMessageHolderType* of size 1..unbounded.
    struct wsnt__NotificationMessageHolderType*  NotificationMessage_           1;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
/// @brief "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
///
/// @note struct _wsnt__UseRaw operations:
/// - _wsnt__UseRaw* soap_new__wsnt__UseRaw(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*) default initialize members
/// - int soap_read__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*) deserialize from a source
/// - int soap_write__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*) serialize to a sink
/// - _wsnt__UseRaw* soap_dup__wsnt__UseRaw(struct soap*, _wsnt__UseRaw* dst, _wsnt__UseRaw *src) returns deep copy of _wsnt__UseRaw src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UseRaw(_wsnt__UseRaw*) deep deletes _wsnt__UseRaw data members, use only on dst after soap_dup__wsnt__UseRaw(NULL, _wsnt__UseRaw *dst, _wsnt__UseRaw *src) (use soapcpp2 -Ed)
struct _wsnt__UseRaw
{
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
///
/// @note struct _wsnt__Subscribe operations:
/// - _wsnt__Subscribe* soap_new__wsnt__Subscribe(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*) default initialize members
/// - int soap_read__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*) deserialize from a source
/// - int soap_write__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*) serialize to a sink
/// - _wsnt__Subscribe* soap_dup__wsnt__Subscribe(struct soap*, _wsnt__Subscribe* dst, _wsnt__Subscribe *src) returns deep copy of _wsnt__Subscribe src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Subscribe(_wsnt__Subscribe*) deep deletes _wsnt__Subscribe data members, use only on dst after soap_dup__wsnt__Subscribe(NULL, _wsnt__Subscribe *dst, _wsnt__Subscribe *src) (use soapcpp2 -Ed)
struct _wsnt__Subscribe
{
/// Element "ConsumerReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element "Filter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// Element "InitialTerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     InitialTerminationTime         0;	///< Optional element.
/// @note struct _wsnt__Subscribe_SubscriptionPolicy operations:
/// - _wsnt__Subscribe_SubscriptionPolicy* soap_new__wsnt__Subscribe_SubscriptionPolicy(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy*) default initialize members
/// - int soap_read__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy*) deserialize from a source
/// - int soap_write__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy*) serialize to a sink
/// - _wsnt__Subscribe_SubscriptionPolicy* soap_dup__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy* dst, _wsnt__Subscribe_SubscriptionPolicy *src) returns deep copy of _wsnt__Subscribe_SubscriptionPolicy src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Subscribe_SubscriptionPolicy(_wsnt__Subscribe_SubscriptionPolicy*) deep deletes _wsnt__Subscribe_SubscriptionPolicy data members, use only on dst after soap_dup__wsnt__Subscribe_SubscriptionPolicy(NULL, _wsnt__Subscribe_SubscriptionPolicy *dst, _wsnt__Subscribe_SubscriptionPolicy *src) (use soapcpp2 -Ed)
    struct _wsnt__Subscribe_SubscriptionPolicy
    {
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
///
/// @note struct _wsnt__SubscribeResponse operations:
/// - _wsnt__SubscribeResponse* soap_new__wsnt__SubscribeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*) default initialize members
/// - int soap_read__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*) deserialize from a source
/// - int soap_write__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*) serialize to a sink
/// - _wsnt__SubscribeResponse* soap_dup__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse* dst, _wsnt__SubscribeResponse *src) returns deep copy of _wsnt__SubscribeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeResponse(_wsnt__SubscribeResponse*) deep deletes _wsnt__SubscribeResponse data members, use only on dst after soap_dup__wsnt__SubscribeResponse(NULL, _wsnt__SubscribeResponse *dst, _wsnt__SubscribeResponse *src) (use soapcpp2 -Ed)
struct _wsnt__SubscribeResponse
{
/// Element "SubscriptionReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
///
/// @note struct _wsnt__GetCurrentMessage operations:
/// - _wsnt__GetCurrentMessage* soap_new__wsnt__GetCurrentMessage(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*) default initialize members
/// - int soap_read__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*) deserialize from a source
/// - int soap_write__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*) serialize to a sink
/// - _wsnt__GetCurrentMessage* soap_dup__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage* dst, _wsnt__GetCurrentMessage *src) returns deep copy of _wsnt__GetCurrentMessage src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetCurrentMessage(_wsnt__GetCurrentMessage*) deep deletes _wsnt__GetCurrentMessage data members, use only on dst after soap_dup__wsnt__GetCurrentMessage(NULL, _wsnt__GetCurrentMessage *dst, _wsnt__GetCurrentMessage *src) (use soapcpp2 -Ed)
struct _wsnt__GetCurrentMessage
{
/// Element "Topic" of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    struct wsnt__TopicExpressionType*    Topic                          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
///
/// @note struct _wsnt__GetCurrentMessageResponse operations:
/// - _wsnt__GetCurrentMessageResponse* soap_new__wsnt__GetCurrentMessageResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*) default initialize members
/// - int soap_read__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*) deserialize from a source
/// - int soap_write__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*) serialize to a sink
/// - _wsnt__GetCurrentMessageResponse* soap_dup__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse* dst, _wsnt__GetCurrentMessageResponse *src) returns deep copy of _wsnt__GetCurrentMessageResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetCurrentMessageResponse(_wsnt__GetCurrentMessageResponse*) deep deletes _wsnt__GetCurrentMessageResponse data members, use only on dst after soap_dup__wsnt__GetCurrentMessageResponse(NULL, _wsnt__GetCurrentMessageResponse *dst, _wsnt__GetCurrentMessageResponse *src) (use soapcpp2 -Ed)
struct _wsnt__GetCurrentMessageResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
///
/// @note struct _wsnt__GetMessages operations:
/// - _wsnt__GetMessages* soap_new__wsnt__GetMessages(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*) default initialize members
/// - int soap_read__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*) deserialize from a source
/// - int soap_write__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*) serialize to a sink
/// - _wsnt__GetMessages* soap_dup__wsnt__GetMessages(struct soap*, _wsnt__GetMessages* dst, _wsnt__GetMessages *src) returns deep copy of _wsnt__GetMessages src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetMessages(_wsnt__GetMessages*) deep deletes _wsnt__GetMessages data members, use only on dst after soap_dup__wsnt__GetMessages(NULL, _wsnt__GetMessages *dst, _wsnt__GetMessages *src) (use soapcpp2 -Ed)
struct _wsnt__GetMessages
{
/// Element "MaximumNumber" of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              MaximumNumber                  0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
///
/// @note struct _wsnt__GetMessagesResponse operations:
/// - _wsnt__GetMessagesResponse* soap_new__wsnt__GetMessagesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*) default initialize members
/// - int soap_read__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*) deserialize from a source
/// - int soap_write__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*) serialize to a sink
/// - _wsnt__GetMessagesResponse* soap_dup__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse* dst, _wsnt__GetMessagesResponse *src) returns deep copy of _wsnt__GetMessagesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetMessagesResponse(_wsnt__GetMessagesResponse*) deep deletes _wsnt__GetMessagesResponse data members, use only on dst after soap_dup__wsnt__GetMessagesResponse(NULL, _wsnt__GetMessagesResponse *dst, _wsnt__GetMessagesResponse *src) (use soapcpp2 -Ed)
struct _wsnt__GetMessagesResponse
{
/// Size of the dynamic array of values of type struct wsnt__NotificationMessageHolderType* is 0..unbounded.
  $ int                                  __sizeNotificationMessage      0;
/// Array struct wsnt__NotificationMessageHolderType* of size 0..unbounded.
    struct wsnt__NotificationMessageHolderType*  NotificationMessage_           0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
///
/// @note struct _wsnt__DestroyPullPoint operations:
/// - _wsnt__DestroyPullPoint* soap_new__wsnt__DestroyPullPoint(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*) default initialize members
/// - int soap_read__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*) deserialize from a source
/// - int soap_write__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*) serialize to a sink
/// - _wsnt__DestroyPullPoint* soap_dup__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint* dst, _wsnt__DestroyPullPoint *src) returns deep copy of _wsnt__DestroyPullPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__DestroyPullPoint(_wsnt__DestroyPullPoint*) deep deletes _wsnt__DestroyPullPoint data members, use only on dst after soap_dup__wsnt__DestroyPullPoint(NULL, _wsnt__DestroyPullPoint *dst, _wsnt__DestroyPullPoint *src) (use soapcpp2 -Ed)
struct _wsnt__DestroyPullPoint
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
///
/// @note struct _wsnt__DestroyPullPointResponse operations:
/// - _wsnt__DestroyPullPointResponse* soap_new__wsnt__DestroyPullPointResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*) default initialize members
/// - int soap_read__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*) deserialize from a source
/// - int soap_write__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*) serialize to a sink
/// - _wsnt__DestroyPullPointResponse* soap_dup__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse* dst, _wsnt__DestroyPullPointResponse *src) returns deep copy of _wsnt__DestroyPullPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__DestroyPullPointResponse(_wsnt__DestroyPullPointResponse*) deep deletes _wsnt__DestroyPullPointResponse data members, use only on dst after soap_dup__wsnt__DestroyPullPointResponse(NULL, _wsnt__DestroyPullPointResponse *dst, _wsnt__DestroyPullPointResponse *src) (use soapcpp2 -Ed)
struct _wsnt__DestroyPullPointResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
///
/// @note struct _wsnt__CreatePullPoint operations:
/// - _wsnt__CreatePullPoint* soap_new__wsnt__CreatePullPoint(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*) default initialize members
/// - int soap_read__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*) deserialize from a source
/// - int soap_write__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*) serialize to a sink
/// - _wsnt__CreatePullPoint* soap_dup__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint* dst, _wsnt__CreatePullPoint *src) returns deep copy of _wsnt__CreatePullPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__CreatePullPoint(_wsnt__CreatePullPoint*) deep deletes _wsnt__CreatePullPoint data members, use only on dst after soap_dup__wsnt__CreatePullPoint(NULL, _wsnt__CreatePullPoint *dst, _wsnt__CreatePullPoint *src) (use soapcpp2 -Ed)
struct _wsnt__CreatePullPoint
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
///
/// @note struct _wsnt__CreatePullPointResponse operations:
/// - _wsnt__CreatePullPointResponse* soap_new__wsnt__CreatePullPointResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*) default initialize members
/// - int soap_read__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*) deserialize from a source
/// - int soap_write__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*) serialize to a sink
/// - _wsnt__CreatePullPointResponse* soap_dup__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse* dst, _wsnt__CreatePullPointResponse *src) returns deep copy of _wsnt__CreatePullPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__CreatePullPointResponse(_wsnt__CreatePullPointResponse*) deep deletes _wsnt__CreatePullPointResponse data members, use only on dst after soap_dup__wsnt__CreatePullPointResponse(NULL, _wsnt__CreatePullPointResponse *dst, _wsnt__CreatePullPointResponse *src) (use soapcpp2 -Ed)
struct _wsnt__CreatePullPointResponse
{
/// Element "PullPoint" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
/// @brief "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
///
/// @note struct _wsnt__Renew operations:
/// - _wsnt__Renew* soap_new__wsnt__Renew(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Renew(struct soap*, _wsnt__Renew*) default initialize members
/// - int soap_read__wsnt__Renew(struct soap*, _wsnt__Renew*) deserialize from a source
/// - int soap_write__wsnt__Renew(struct soap*, _wsnt__Renew*) serialize to a sink
/// - _wsnt__Renew* soap_dup__wsnt__Renew(struct soap*, _wsnt__Renew* dst, _wsnt__Renew *src) returns deep copy of _wsnt__Renew src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Renew(_wsnt__Renew*) deep deletes _wsnt__Renew data members, use only on dst after soap_dup__wsnt__Renew(NULL, _wsnt__Renew *dst, _wsnt__Renew *src) (use soapcpp2 -Ed)
struct _wsnt__Renew
{
/// Element "TerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     TerminationTime                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
///
/// @note struct _wsnt__RenewResponse operations:
/// - _wsnt__RenewResponse* soap_new__wsnt__RenewResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*) default initialize members
/// - int soap_read__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*) deserialize from a source
/// - int soap_write__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*) serialize to a sink
/// - _wsnt__RenewResponse* soap_dup__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse* dst, _wsnt__RenewResponse *src) returns deep copy of _wsnt__RenewResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__RenewResponse(_wsnt__RenewResponse*) deep deletes _wsnt__RenewResponse data members, use only on dst after soap_dup__wsnt__RenewResponse(NULL, _wsnt__RenewResponse *dst, _wsnt__RenewResponse *src) (use soapcpp2 -Ed)
struct _wsnt__RenewResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"TerminationTime.
    time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
///
/// @note struct _wsnt__Unsubscribe operations:
/// - _wsnt__Unsubscribe* soap_new__wsnt__Unsubscribe(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*) default initialize members
/// - int soap_read__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*) deserialize from a source
/// - int soap_write__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*) serialize to a sink
/// - _wsnt__Unsubscribe* soap_dup__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe* dst, _wsnt__Unsubscribe *src) returns deep copy of _wsnt__Unsubscribe src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Unsubscribe(_wsnt__Unsubscribe*) deep deletes _wsnt__Unsubscribe data members, use only on dst after soap_dup__wsnt__Unsubscribe(NULL, _wsnt__Unsubscribe *dst, _wsnt__Unsubscribe *src) (use soapcpp2 -Ed)
struct _wsnt__Unsubscribe
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
///
/// @note struct _wsnt__UnsubscribeResponse operations:
/// - _wsnt__UnsubscribeResponse* soap_new__wsnt__UnsubscribeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*) default initialize members
/// - int soap_read__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*) deserialize from a source
/// - int soap_write__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*) serialize to a sink
/// - _wsnt__UnsubscribeResponse* soap_dup__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse* dst, _wsnt__UnsubscribeResponse *src) returns deep copy of _wsnt__UnsubscribeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsubscribeResponse(_wsnt__UnsubscribeResponse*) deep deletes _wsnt__UnsubscribeResponse data members, use only on dst after soap_dup__wsnt__UnsubscribeResponse(NULL, _wsnt__UnsubscribeResponse *dst, _wsnt__UnsubscribeResponse *src) (use soapcpp2 -Ed)
struct _wsnt__UnsubscribeResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
///
/// @note struct _wsnt__PauseSubscription operations:
/// - _wsnt__PauseSubscription* soap_new__wsnt__PauseSubscription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*) default initialize members
/// - int soap_read__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*) deserialize from a source
/// - int soap_write__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*) serialize to a sink
/// - _wsnt__PauseSubscription* soap_dup__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription* dst, _wsnt__PauseSubscription *src) returns deep copy of _wsnt__PauseSubscription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseSubscription(_wsnt__PauseSubscription*) deep deletes _wsnt__PauseSubscription data members, use only on dst after soap_dup__wsnt__PauseSubscription(NULL, _wsnt__PauseSubscription *dst, _wsnt__PauseSubscription *src) (use soapcpp2 -Ed)
struct _wsnt__PauseSubscription
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
///
/// @note struct _wsnt__PauseSubscriptionResponse operations:
/// - _wsnt__PauseSubscriptionResponse* soap_new__wsnt__PauseSubscriptionResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*) default initialize members
/// - int soap_read__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*) deserialize from a source
/// - int soap_write__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*) serialize to a sink
/// - _wsnt__PauseSubscriptionResponse* soap_dup__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse* dst, _wsnt__PauseSubscriptionResponse *src) returns deep copy of _wsnt__PauseSubscriptionResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseSubscriptionResponse(_wsnt__PauseSubscriptionResponse*) deep deletes _wsnt__PauseSubscriptionResponse data members, use only on dst after soap_dup__wsnt__PauseSubscriptionResponse(NULL, _wsnt__PauseSubscriptionResponse *dst, _wsnt__PauseSubscriptionResponse *src) (use soapcpp2 -Ed)
struct _wsnt__PauseSubscriptionResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
///
/// @note struct _wsnt__ResumeSubscription operations:
/// - _wsnt__ResumeSubscription* soap_new__wsnt__ResumeSubscription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*) default initialize members
/// - int soap_read__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*) deserialize from a source
/// - int soap_write__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*) serialize to a sink
/// - _wsnt__ResumeSubscription* soap_dup__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription* dst, _wsnt__ResumeSubscription *src) returns deep copy of _wsnt__ResumeSubscription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeSubscription(_wsnt__ResumeSubscription*) deep deletes _wsnt__ResumeSubscription data members, use only on dst after soap_dup__wsnt__ResumeSubscription(NULL, _wsnt__ResumeSubscription *dst, _wsnt__ResumeSubscription *src) (use soapcpp2 -Ed)
struct _wsnt__ResumeSubscription
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
///
/// @note struct _wsnt__ResumeSubscriptionResponse operations:
/// - _wsnt__ResumeSubscriptionResponse* soap_new__wsnt__ResumeSubscriptionResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*) default initialize members
/// - int soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*) deserialize from a source
/// - int soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*) serialize to a sink
/// - _wsnt__ResumeSubscriptionResponse* soap_dup__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse* dst, _wsnt__ResumeSubscriptionResponse *src) returns deep copy of _wsnt__ResumeSubscriptionResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeSubscriptionResponse(_wsnt__ResumeSubscriptionResponse*) deep deletes _wsnt__ResumeSubscriptionResponse data members, use only on dst after soap_dup__wsnt__ResumeSubscriptionResponse(NULL, _wsnt__ResumeSubscriptionResponse *dst, _wsnt__ResumeSubscriptionResponse *src) (use soapcpp2 -Ed)
struct _wsnt__ResumeSubscriptionResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
///
/// @note struct wstop__Documentation operations:
/// - wstop__Documentation* soap_new_wstop__Documentation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__Documentation(struct soap*, wstop__Documentation*) default initialize members
/// - int soap_read_wstop__Documentation(struct soap*, wstop__Documentation*) deserialize from a source
/// - int soap_write_wstop__Documentation(struct soap*, wstop__Documentation*) serialize to a sink
/// - wstop__Documentation* soap_dup_wstop__Documentation(struct soap*, wstop__Documentation* dst, wstop__Documentation *src) returns deep copy of wstop__Documentation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__Documentation(wstop__Documentation*) deep deletes wstop__Documentation data members, use only on dst after soap_dup_wstop__Documentation(NULL, wstop__Documentation *dst, wstop__Documentation *src) (use soapcpp2 -Ed)
struct wstop__Documentation
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
///
/// This type is extended by:
/// - "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType as struct wstop__TopicNamespaceType
/// - "http://docs.oasis-open.org/wsn/t-1":TopicType as struct wstop__TopicType
/// - "http://docs.oasis-open.org/wsn/t-1":TopicSetType as struct wstop__TopicSetType
///
/// @note struct wstop__ExtensibleDocumented operations:
/// - wstop__ExtensibleDocumented* soap_new_wstop__ExtensibleDocumented(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented*) default initialize members
/// - int soap_read_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented*) deserialize from a source
/// - int soap_write_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented*) serialize to a sink
/// - wstop__ExtensibleDocumented* soap_dup_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented* dst, wstop__ExtensibleDocumented *src) returns deep copy of wstop__ExtensibleDocumented src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__ExtensibleDocumented(wstop__ExtensibleDocumented*) deep deletes wstop__ExtensibleDocumented data members, use only on dst after soap_dup_wstop__ExtensibleDocumented(NULL, wstop__ExtensibleDocumented *dst, wstop__ExtensibleDocumented *src) (use soapcpp2 -Ed)
struct wstop__ExtensibleDocumented
{
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
///
/// @note struct wstop__QueryExpressionType operations:
/// - wstop__QueryExpressionType* soap_new_wstop__QueryExpressionType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType*) default initialize members
/// - int soap_read_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType*) deserialize from a source
/// - int soap_write_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType*) serialize to a sink
/// - wstop__QueryExpressionType* soap_dup_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType* dst, wstop__QueryExpressionType *src) returns deep copy of wstop__QueryExpressionType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__QueryExpressionType(wstop__QueryExpressionType*) deep deletes wstop__QueryExpressionType data members, use only on dst after soap_dup_wstop__QueryExpressionType(NULL, wstop__QueryExpressionType *dst, wstop__QueryExpressionType *src) (use soapcpp2 -Ed)
struct wstop__QueryExpressionType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsrfr__ResourceUnknownFaultType operations:
/// - wsrfr__ResourceUnknownFaultType* soap_new_wsrfr__ResourceUnknownFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsrfr__ResourceUnknownFaultType(struct soap*, wsrfr__ResourceUnknownFaultType*) default initialize members
/// - int soap_read_wsrfr__ResourceUnknownFaultType(struct soap*, wsrfr__ResourceUnknownFaultType*) deserialize from a source
/// - int soap_write_wsrfr__ResourceUnknownFaultType(struct soap*, wsrfr__ResourceUnknownFaultType*) serialize to a sink
/// - wsrfr__ResourceUnknownFaultType* soap_dup_wsrfr__ResourceUnknownFaultType(struct soap*, wsrfr__ResourceUnknownFaultType* dst, wsrfr__ResourceUnknownFaultType *src) returns deep copy of wsrfr__ResourceUnknownFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsrfr__ResourceUnknownFaultType(wsrfr__ResourceUnknownFaultType*) deep deletes wsrfr__ResourceUnknownFaultType data members, use only on dst after soap_dup_wsrfr__ResourceUnknownFaultType(NULL, wsrfr__ResourceUnknownFaultType *dst, wsrfr__ResourceUnknownFaultType *src) (use soapcpp2 -Ed)
struct wsrfr__ResourceUnknownFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsrfr__ResourceUnknownFaultType_ErrorCode operations:
/// - _wsrfr__ResourceUnknownFaultType_ErrorCode* soap_new__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnknownFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnknownFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnknownFaultType_ErrorCode*) serialize to a sink
/// - _wsrfr__ResourceUnknownFaultType_ErrorCode* soap_dup__wsrfr__ResourceUnknownFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnknownFaultType_ErrorCode* dst, _wsrfr__ResourceUnknownFaultType_ErrorCode *src) returns deep copy of _wsrfr__ResourceUnknownFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfr__ResourceUnknownFaultType_ErrorCode(_wsrfr__ResourceUnknownFaultType_ErrorCode*) deep deletes _wsrfr__ResourceUnknownFaultType_ErrorCode data members, use only on dst after soap_dup__wsrfr__ResourceUnknownFaultType_ErrorCode(NULL, _wsrfr__ResourceUnknownFaultType_ErrorCode *dst, _wsrfr__ResourceUnknownFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsrfr__ResourceUnknownFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsrfr__ResourceUnknownFaultType_Description operations:
/// - _wsrfr__ResourceUnknownFaultType_Description* soap_new__wsrfr__ResourceUnknownFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfr__ResourceUnknownFaultType_Description(struct soap*, _wsrfr__ResourceUnknownFaultType_Description*) default initialize members
/// - int soap_read__wsrfr__ResourceUnknownFaultType_Description(struct soap*, _wsrfr__ResourceUnknownFaultType_Description*) deserialize from a source
/// - int soap_write__wsrfr__ResourceUnknownFaultType_Description(struct soap*, _wsrfr__ResourceUnknownFaultType_Description*) serialize to a sink
/// - _wsrfr__ResourceUnknownFaultType_Description* soap_dup__wsrfr__ResourceUnknownFaultType_Description(struct soap*, _wsrfr__ResourceUnknownFaultType_Description* dst, _wsrfr__ResourceUnknownFaultType_Description *src) returns deep copy of _wsrfr__ResourceUnknownFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfr__ResourceUnknownFaultType_Description(_wsrfr__ResourceUnknownFaultType_Description*) deep deletes _wsrfr__ResourceUnknownFaultType_Description data members, use only on dst after soap_dup__wsrfr__ResourceUnknownFaultType_Description(NULL, _wsrfr__ResourceUnknownFaultType_Description *dst, _wsrfr__ResourceUnknownFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsrfr__ResourceUnknownFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsrfr__ResourceUnknownFaultType_FaultCause operations:
/// - _wsrfr__ResourceUnknownFaultType_FaultCause* soap_new__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnknownFaultType_FaultCause*) default initialize members
/// - int soap_read__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnknownFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnknownFaultType_FaultCause*) serialize to a sink
/// - _wsrfr__ResourceUnknownFaultType_FaultCause* soap_dup__wsrfr__ResourceUnknownFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnknownFaultType_FaultCause* dst, _wsrfr__ResourceUnknownFaultType_FaultCause *src) returns deep copy of _wsrfr__ResourceUnknownFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfr__ResourceUnknownFaultType_FaultCause(_wsrfr__ResourceUnknownFaultType_FaultCause*) deep deletes _wsrfr__ResourceUnknownFaultType_FaultCause data members, use only on dst after soap_dup__wsrfr__ResourceUnknownFaultType_FaultCause(NULL, _wsrfr__ResourceUnknownFaultType_FaultCause *dst, _wsrfr__ResourceUnknownFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsrfr__ResourceUnknownFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsrfr__ResourceUnavailableFaultType operations:
/// - wsrfr__ResourceUnavailableFaultType* soap_new_wsrfr__ResourceUnavailableFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsrfr__ResourceUnavailableFaultType(struct soap*, wsrfr__ResourceUnavailableFaultType*) default initialize members
/// - int soap_read_wsrfr__ResourceUnavailableFaultType(struct soap*, wsrfr__ResourceUnavailableFaultType*) deserialize from a source
/// - int soap_write_wsrfr__ResourceUnavailableFaultType(struct soap*, wsrfr__ResourceUnavailableFaultType*) serialize to a sink
/// - wsrfr__ResourceUnavailableFaultType* soap_dup_wsrfr__ResourceUnavailableFaultType(struct soap*, wsrfr__ResourceUnavailableFaultType* dst, wsrfr__ResourceUnavailableFaultType *src) returns deep copy of wsrfr__ResourceUnavailableFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsrfr__ResourceUnavailableFaultType(wsrfr__ResourceUnavailableFaultType*) deep deletes wsrfr__ResourceUnavailableFaultType data members, use only on dst after soap_dup_wsrfr__ResourceUnavailableFaultType(NULL, wsrfr__ResourceUnavailableFaultType *dst, wsrfr__ResourceUnavailableFaultType *src) (use soapcpp2 -Ed)
struct wsrfr__ResourceUnavailableFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsrfr__ResourceUnavailableFaultType_ErrorCode operations:
/// - _wsrfr__ResourceUnavailableFaultType_ErrorCode* soap_new__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnavailableFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnavailableFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnavailableFaultType_ErrorCode*) serialize to a sink
/// - _wsrfr__ResourceUnavailableFaultType_ErrorCode* soap_dup__wsrfr__ResourceUnavailableFaultType_ErrorCode(struct soap*, _wsrfr__ResourceUnavailableFaultType_ErrorCode* dst, _wsrfr__ResourceUnavailableFaultType_ErrorCode *src) returns deep copy of _wsrfr__ResourceUnavailableFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfr__ResourceUnavailableFaultType_ErrorCode(_wsrfr__ResourceUnavailableFaultType_ErrorCode*) deep deletes _wsrfr__ResourceUnavailableFaultType_ErrorCode data members, use only on dst after soap_dup__wsrfr__ResourceUnavailableFaultType_ErrorCode(NULL, _wsrfr__ResourceUnavailableFaultType_ErrorCode *dst, _wsrfr__ResourceUnavailableFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsrfr__ResourceUnavailableFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsrfr__ResourceUnavailableFaultType_Description operations:
/// - _wsrfr__ResourceUnavailableFaultType_Description* soap_new__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, _wsrfr__ResourceUnavailableFaultType_Description*) default initialize members
/// - int soap_read__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, _wsrfr__ResourceUnavailableFaultType_Description*) deserialize from a source
/// - int soap_write__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, _wsrfr__ResourceUnavailableFaultType_Description*) serialize to a sink
/// - _wsrfr__ResourceUnavailableFaultType_Description* soap_dup__wsrfr__ResourceUnavailableFaultType_Description(struct soap*, _wsrfr__ResourceUnavailableFaultType_Description* dst, _wsrfr__ResourceUnavailableFaultType_Description *src) returns deep copy of _wsrfr__ResourceUnavailableFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfr__ResourceUnavailableFaultType_Description(_wsrfr__ResourceUnavailableFaultType_Description*) deep deletes _wsrfr__ResourceUnavailableFaultType_Description data members, use only on dst after soap_dup__wsrfr__ResourceUnavailableFaultType_Description(NULL, _wsrfr__ResourceUnavailableFaultType_Description *dst, _wsrfr__ResourceUnavailableFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsrfr__ResourceUnavailableFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsrfr__ResourceUnavailableFaultType_FaultCause operations:
/// - _wsrfr__ResourceUnavailableFaultType_FaultCause* soap_new__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnavailableFaultType_FaultCause*) default initialize members
/// - int soap_read__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnavailableFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnavailableFaultType_FaultCause*) serialize to a sink
/// - _wsrfr__ResourceUnavailableFaultType_FaultCause* soap_dup__wsrfr__ResourceUnavailableFaultType_FaultCause(struct soap*, _wsrfr__ResourceUnavailableFaultType_FaultCause* dst, _wsrfr__ResourceUnavailableFaultType_FaultCause *src) returns deep copy of _wsrfr__ResourceUnavailableFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfr__ResourceUnavailableFaultType_FaultCause(_wsrfr__ResourceUnavailableFaultType_FaultCause*) deep deletes _wsrfr__ResourceUnavailableFaultType_FaultCause data members, use only on dst after soap_dup__wsrfr__ResourceUnavailableFaultType_FaultCause(NULL, _wsrfr__ResourceUnavailableFaultType_FaultCause *dst, _wsrfr__ResourceUnavailableFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsrfr__ResourceUnavailableFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__SubscribeCreationFailedFaultType operations:
/// - wsnt__SubscribeCreationFailedFaultType* soap_new_wsnt__SubscribeCreationFailedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType*) default initialize members
/// - int soap_read_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType*) deserialize from a source
/// - int soap_write_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType*) serialize to a sink
/// - wsnt__SubscribeCreationFailedFaultType* soap_dup_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType* dst, wsnt__SubscribeCreationFailedFaultType *src) returns deep copy of wsnt__SubscribeCreationFailedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__SubscribeCreationFailedFaultType(wsnt__SubscribeCreationFailedFaultType*) deep deletes wsnt__SubscribeCreationFailedFaultType data members, use only on dst after soap_dup_wsnt__SubscribeCreationFailedFaultType(NULL, wsnt__SubscribeCreationFailedFaultType *dst, wsnt__SubscribeCreationFailedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__SubscribeCreationFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode operations:
/// - _wsnt__SubscribeCreationFailedFaultType_ErrorCode* soap_new__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__SubscribeCreationFailedFaultType_ErrorCode* soap_dup__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode* dst, _wsnt__SubscribeCreationFailedFaultType_ErrorCode *src) returns deep copy of _wsnt__SubscribeCreationFailedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeCreationFailedFaultType_ErrorCode(_wsnt__SubscribeCreationFailedFaultType_ErrorCode*) deep deletes _wsnt__SubscribeCreationFailedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__SubscribeCreationFailedFaultType_ErrorCode(NULL, _wsnt__SubscribeCreationFailedFaultType_ErrorCode *dst, _wsnt__SubscribeCreationFailedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__SubscribeCreationFailedFaultType_Description operations:
/// - _wsnt__SubscribeCreationFailedFaultType_Description* soap_new__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, _wsnt__SubscribeCreationFailedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, _wsnt__SubscribeCreationFailedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, _wsnt__SubscribeCreationFailedFaultType_Description*) serialize to a sink
/// - _wsnt__SubscribeCreationFailedFaultType_Description* soap_dup__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, _wsnt__SubscribeCreationFailedFaultType_Description* dst, _wsnt__SubscribeCreationFailedFaultType_Description *src) returns deep copy of _wsnt__SubscribeCreationFailedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeCreationFailedFaultType_Description(_wsnt__SubscribeCreationFailedFaultType_Description*) deep deletes _wsnt__SubscribeCreationFailedFaultType_Description data members, use only on dst after soap_dup__wsnt__SubscribeCreationFailedFaultType_Description(NULL, _wsnt__SubscribeCreationFailedFaultType_Description *dst, _wsnt__SubscribeCreationFailedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__SubscribeCreationFailedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__SubscribeCreationFailedFaultType_FaultCause operations:
/// - _wsnt__SubscribeCreationFailedFaultType_FaultCause* soap_new__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__SubscribeCreationFailedFaultType_FaultCause* soap_dup__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause* dst, _wsnt__SubscribeCreationFailedFaultType_FaultCause *src) returns deep copy of _wsnt__SubscribeCreationFailedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeCreationFailedFaultType_FaultCause(_wsnt__SubscribeCreationFailedFaultType_FaultCause*) deep deletes _wsnt__SubscribeCreationFailedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__SubscribeCreationFailedFaultType_FaultCause(NULL, _wsnt__SubscribeCreationFailedFaultType_FaultCause *dst, _wsnt__SubscribeCreationFailedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__SubscribeCreationFailedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__InvalidFilterFaultType operations:
/// - wsnt__InvalidFilterFaultType* soap_new_wsnt__InvalidFilterFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType*) default initialize members
/// - int soap_read_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType*) serialize to a sink
/// - wsnt__InvalidFilterFaultType* soap_dup_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType* dst, wsnt__InvalidFilterFaultType *src) returns deep copy of wsnt__InvalidFilterFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidFilterFaultType(wsnt__InvalidFilterFaultType*) deep deletes wsnt__InvalidFilterFaultType data members, use only on dst after soap_dup_wsnt__InvalidFilterFaultType(NULL, wsnt__InvalidFilterFaultType *dst, wsnt__InvalidFilterFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidFilterFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__InvalidFilterFaultType_ErrorCode operations:
/// - _wsnt__InvalidFilterFaultType_ErrorCode* soap_new__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, _wsnt__InvalidFilterFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, _wsnt__InvalidFilterFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, _wsnt__InvalidFilterFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidFilterFaultType_ErrorCode* soap_dup__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, _wsnt__InvalidFilterFaultType_ErrorCode* dst, _wsnt__InvalidFilterFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidFilterFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidFilterFaultType_ErrorCode(_wsnt__InvalidFilterFaultType_ErrorCode*) deep deletes _wsnt__InvalidFilterFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidFilterFaultType_ErrorCode(NULL, _wsnt__InvalidFilterFaultType_ErrorCode *dst, _wsnt__InvalidFilterFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidFilterFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__InvalidFilterFaultType_Description operations:
/// - _wsnt__InvalidFilterFaultType_Description* soap_new__wsnt__InvalidFilterFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidFilterFaultType_Description(struct soap*, _wsnt__InvalidFilterFaultType_Description*) default initialize members
/// - int soap_read__wsnt__InvalidFilterFaultType_Description(struct soap*, _wsnt__InvalidFilterFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidFilterFaultType_Description(struct soap*, _wsnt__InvalidFilterFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidFilterFaultType_Description* soap_dup__wsnt__InvalidFilterFaultType_Description(struct soap*, _wsnt__InvalidFilterFaultType_Description* dst, _wsnt__InvalidFilterFaultType_Description *src) returns deep copy of _wsnt__InvalidFilterFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidFilterFaultType_Description(_wsnt__InvalidFilterFaultType_Description*) deep deletes _wsnt__InvalidFilterFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidFilterFaultType_Description(NULL, _wsnt__InvalidFilterFaultType_Description *dst, _wsnt__InvalidFilterFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidFilterFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__InvalidFilterFaultType_FaultCause operations:
/// - _wsnt__InvalidFilterFaultType_FaultCause* soap_new__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, _wsnt__InvalidFilterFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, _wsnt__InvalidFilterFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, _wsnt__InvalidFilterFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidFilterFaultType_FaultCause* soap_dup__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, _wsnt__InvalidFilterFaultType_FaultCause* dst, _wsnt__InvalidFilterFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidFilterFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidFilterFaultType_FaultCause(_wsnt__InvalidFilterFaultType_FaultCause*) deep deletes _wsnt__InvalidFilterFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidFilterFaultType_FaultCause(NULL, _wsnt__InvalidFilterFaultType_FaultCause *dst, _wsnt__InvalidFilterFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidFilterFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 1..unbounded.
  $ int                                  __sizeUnknownFilter            1;
/// Array _QName* of size 1..unbounded.
    _QName*                              UnknownFilter                  1;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__TopicExpressionDialectUnknownFaultType operations:
/// - wsnt__TopicExpressionDialectUnknownFaultType* soap_new_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType*) default initialize members
/// - int soap_read_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType*) deserialize from a source
/// - int soap_write_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType*) serialize to a sink
/// - wsnt__TopicExpressionDialectUnknownFaultType* soap_dup_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType* dst, wsnt__TopicExpressionDialectUnknownFaultType *src) returns deep copy of wsnt__TopicExpressionDialectUnknownFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__TopicExpressionDialectUnknownFaultType(wsnt__TopicExpressionDialectUnknownFaultType*) deep deletes wsnt__TopicExpressionDialectUnknownFaultType data members, use only on dst after soap_dup_wsnt__TopicExpressionDialectUnknownFaultType(NULL, wsnt__TopicExpressionDialectUnknownFaultType *dst, wsnt__TopicExpressionDialectUnknownFaultType *src) (use soapcpp2 -Ed)
struct wsnt__TopicExpressionDialectUnknownFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode operations:
/// - _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode* soap_new__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode* soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode* dst, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *src) returns deep copy of _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) deep deletes _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(NULL, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *dst, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__TopicExpressionDialectUnknownFaultType_Description operations:
/// - _wsnt__TopicExpressionDialectUnknownFaultType_Description* soap_new__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description*) default initialize members
/// - int soap_read__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description*) serialize to a sink
/// - _wsnt__TopicExpressionDialectUnknownFaultType_Description* soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description* dst, _wsnt__TopicExpressionDialectUnknownFaultType_Description *src) returns deep copy of _wsnt__TopicExpressionDialectUnknownFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicExpressionDialectUnknownFaultType_Description(_wsnt__TopicExpressionDialectUnknownFaultType_Description*) deep deletes _wsnt__TopicExpressionDialectUnknownFaultType_Description data members, use only on dst after soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_Description(NULL, _wsnt__TopicExpressionDialectUnknownFaultType_Description *dst, _wsnt__TopicExpressionDialectUnknownFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicExpressionDialectUnknownFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause operations:
/// - _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause* soap_new__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) serialize to a sink
/// - _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause* soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause* dst, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *src) returns deep copy of _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) deep deletes _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(NULL, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *dst, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__InvalidTopicExpressionFaultType operations:
/// - wsnt__InvalidTopicExpressionFaultType* soap_new_wsnt__InvalidTopicExpressionFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType*) default initialize members
/// - int soap_read_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType*) serialize to a sink
/// - wsnt__InvalidTopicExpressionFaultType* soap_dup_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType* dst, wsnt__InvalidTopicExpressionFaultType *src) returns deep copy of wsnt__InvalidTopicExpressionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidTopicExpressionFaultType(wsnt__InvalidTopicExpressionFaultType*) deep deletes wsnt__InvalidTopicExpressionFaultType data members, use only on dst after soap_dup_wsnt__InvalidTopicExpressionFaultType(NULL, wsnt__InvalidTopicExpressionFaultType *dst, wsnt__InvalidTopicExpressionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidTopicExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode operations:
/// - _wsnt__InvalidTopicExpressionFaultType_ErrorCode* soap_new__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidTopicExpressionFaultType_ErrorCode* soap_dup__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode* dst, _wsnt__InvalidTopicExpressionFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidTopicExpressionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidTopicExpressionFaultType_ErrorCode(_wsnt__InvalidTopicExpressionFaultType_ErrorCode*) deep deletes _wsnt__InvalidTopicExpressionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidTopicExpressionFaultType_ErrorCode(NULL, _wsnt__InvalidTopicExpressionFaultType_ErrorCode *dst, _wsnt__InvalidTopicExpressionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__InvalidTopicExpressionFaultType_Description operations:
/// - _wsnt__InvalidTopicExpressionFaultType_Description* soap_new__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, _wsnt__InvalidTopicExpressionFaultType_Description*) default initialize members
/// - int soap_read__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, _wsnt__InvalidTopicExpressionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, _wsnt__InvalidTopicExpressionFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidTopicExpressionFaultType_Description* soap_dup__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, _wsnt__InvalidTopicExpressionFaultType_Description* dst, _wsnt__InvalidTopicExpressionFaultType_Description *src) returns deep copy of _wsnt__InvalidTopicExpressionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidTopicExpressionFaultType_Description(_wsnt__InvalidTopicExpressionFaultType_Description*) deep deletes _wsnt__InvalidTopicExpressionFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidTopicExpressionFaultType_Description(NULL, _wsnt__InvalidTopicExpressionFaultType_Description *dst, _wsnt__InvalidTopicExpressionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidTopicExpressionFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__InvalidTopicExpressionFaultType_FaultCause operations:
/// - _wsnt__InvalidTopicExpressionFaultType_FaultCause* soap_new__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidTopicExpressionFaultType_FaultCause* soap_dup__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause* dst, _wsnt__InvalidTopicExpressionFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidTopicExpressionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidTopicExpressionFaultType_FaultCause(_wsnt__InvalidTopicExpressionFaultType_FaultCause*) deep deletes _wsnt__InvalidTopicExpressionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidTopicExpressionFaultType_FaultCause(NULL, _wsnt__InvalidTopicExpressionFaultType_FaultCause *dst, _wsnt__InvalidTopicExpressionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidTopicExpressionFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__TopicNotSupportedFaultType operations:
/// - wsnt__TopicNotSupportedFaultType* soap_new_wsnt__TopicNotSupportedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType*) default initialize members
/// - int soap_read_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType*) deserialize from a source
/// - int soap_write_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType*) serialize to a sink
/// - wsnt__TopicNotSupportedFaultType* soap_dup_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType* dst, wsnt__TopicNotSupportedFaultType *src) returns deep copy of wsnt__TopicNotSupportedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__TopicNotSupportedFaultType(wsnt__TopicNotSupportedFaultType*) deep deletes wsnt__TopicNotSupportedFaultType data members, use only on dst after soap_dup_wsnt__TopicNotSupportedFaultType(NULL, wsnt__TopicNotSupportedFaultType *dst, wsnt__TopicNotSupportedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__TopicNotSupportedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__TopicNotSupportedFaultType_ErrorCode operations:
/// - _wsnt__TopicNotSupportedFaultType_ErrorCode* soap_new__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__TopicNotSupportedFaultType_ErrorCode* soap_dup__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode* dst, _wsnt__TopicNotSupportedFaultType_ErrorCode *src) returns deep copy of _wsnt__TopicNotSupportedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicNotSupportedFaultType_ErrorCode(_wsnt__TopicNotSupportedFaultType_ErrorCode*) deep deletes _wsnt__TopicNotSupportedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__TopicNotSupportedFaultType_ErrorCode(NULL, _wsnt__TopicNotSupportedFaultType_ErrorCode *dst, _wsnt__TopicNotSupportedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__TopicNotSupportedFaultType_Description operations:
/// - _wsnt__TopicNotSupportedFaultType_Description* soap_new__wsnt__TopicNotSupportedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicNotSupportedFaultType_Description(struct soap*, _wsnt__TopicNotSupportedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__TopicNotSupportedFaultType_Description(struct soap*, _wsnt__TopicNotSupportedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__TopicNotSupportedFaultType_Description(struct soap*, _wsnt__TopicNotSupportedFaultType_Description*) serialize to a sink
/// - _wsnt__TopicNotSupportedFaultType_Description* soap_dup__wsnt__TopicNotSupportedFaultType_Description(struct soap*, _wsnt__TopicNotSupportedFaultType_Description* dst, _wsnt__TopicNotSupportedFaultType_Description *src) returns deep copy of _wsnt__TopicNotSupportedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicNotSupportedFaultType_Description(_wsnt__TopicNotSupportedFaultType_Description*) deep deletes _wsnt__TopicNotSupportedFaultType_Description data members, use only on dst after soap_dup__wsnt__TopicNotSupportedFaultType_Description(NULL, _wsnt__TopicNotSupportedFaultType_Description *dst, _wsnt__TopicNotSupportedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicNotSupportedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__TopicNotSupportedFaultType_FaultCause operations:
/// - _wsnt__TopicNotSupportedFaultType_FaultCause* soap_new__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, _wsnt__TopicNotSupportedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, _wsnt__TopicNotSupportedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, _wsnt__TopicNotSupportedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__TopicNotSupportedFaultType_FaultCause* soap_dup__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, _wsnt__TopicNotSupportedFaultType_FaultCause* dst, _wsnt__TopicNotSupportedFaultType_FaultCause *src) returns deep copy of _wsnt__TopicNotSupportedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicNotSupportedFaultType_FaultCause(_wsnt__TopicNotSupportedFaultType_FaultCause*) deep deletes _wsnt__TopicNotSupportedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__TopicNotSupportedFaultType_FaultCause(NULL, _wsnt__TopicNotSupportedFaultType_FaultCause *dst, _wsnt__TopicNotSupportedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicNotSupportedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__MultipleTopicsSpecifiedFaultType operations:
/// - wsnt__MultipleTopicsSpecifiedFaultType* soap_new_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType*) default initialize members
/// - int soap_read_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType*) deserialize from a source
/// - int soap_write_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType*) serialize to a sink
/// - wsnt__MultipleTopicsSpecifiedFaultType* soap_dup_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType* dst, wsnt__MultipleTopicsSpecifiedFaultType *src) returns deep copy of wsnt__MultipleTopicsSpecifiedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__MultipleTopicsSpecifiedFaultType(wsnt__MultipleTopicsSpecifiedFaultType*) deep deletes wsnt__MultipleTopicsSpecifiedFaultType data members, use only on dst after soap_dup_wsnt__MultipleTopicsSpecifiedFaultType(NULL, wsnt__MultipleTopicsSpecifiedFaultType *dst, wsnt__MultipleTopicsSpecifiedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__MultipleTopicsSpecifiedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode operations:
/// - _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode* soap_new__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode* soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode* dst, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *src) returns deep copy of _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) deep deletes _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(NULL, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *dst, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__MultipleTopicsSpecifiedFaultType_Description operations:
/// - _wsnt__MultipleTopicsSpecifiedFaultType_Description* soap_new__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description*) serialize to a sink
/// - _wsnt__MultipleTopicsSpecifiedFaultType_Description* soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description* dst, _wsnt__MultipleTopicsSpecifiedFaultType_Description *src) returns deep copy of _wsnt__MultipleTopicsSpecifiedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__MultipleTopicsSpecifiedFaultType_Description(_wsnt__MultipleTopicsSpecifiedFaultType_Description*) deep deletes _wsnt__MultipleTopicsSpecifiedFaultType_Description data members, use only on dst after soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_Description(NULL, _wsnt__MultipleTopicsSpecifiedFaultType_Description *dst, _wsnt__MultipleTopicsSpecifiedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__MultipleTopicsSpecifiedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause operations:
/// - _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause* soap_new__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause* soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause* dst, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *src) returns deep copy of _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) deep deletes _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(NULL, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *dst, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__InvalidProducerPropertiesExpressionFaultType operations:
/// - wsnt__InvalidProducerPropertiesExpressionFaultType* soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) default initialize members
/// - int soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) serialize to a sink
/// - wsnt__InvalidProducerPropertiesExpressionFaultType* soap_dup_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType* dst, wsnt__InvalidProducerPropertiesExpressionFaultType *src) returns deep copy of wsnt__InvalidProducerPropertiesExpressionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidProducerPropertiesExpressionFaultType(wsnt__InvalidProducerPropertiesExpressionFaultType*) deep deletes wsnt__InvalidProducerPropertiesExpressionFaultType data members, use only on dst after soap_dup_wsnt__InvalidProducerPropertiesExpressionFaultType(NULL, wsnt__InvalidProducerPropertiesExpressionFaultType *dst, wsnt__InvalidProducerPropertiesExpressionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidProducerPropertiesExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode operations:
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode* soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode* soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode* dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) deep deletes _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(NULL, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description operations:
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_Description* soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) default initialize members
/// - int soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_Description* soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description* dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *src) returns deep copy of _wsnt__InvalidProducerPropertiesExpressionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(_wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) deep deletes _wsnt__InvalidProducerPropertiesExpressionFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(NULL, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause operations:
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause* soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause* soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause* dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) deep deletes _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(NULL, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__InvalidMessageContentExpressionFaultType operations:
/// - wsnt__InvalidMessageContentExpressionFaultType* soap_new_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType*) default initialize members
/// - int soap_read_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType*) serialize to a sink
/// - wsnt__InvalidMessageContentExpressionFaultType* soap_dup_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType* dst, wsnt__InvalidMessageContentExpressionFaultType *src) returns deep copy of wsnt__InvalidMessageContentExpressionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidMessageContentExpressionFaultType(wsnt__InvalidMessageContentExpressionFaultType*) deep deletes wsnt__InvalidMessageContentExpressionFaultType data members, use only on dst after soap_dup_wsnt__InvalidMessageContentExpressionFaultType(NULL, wsnt__InvalidMessageContentExpressionFaultType *dst, wsnt__InvalidMessageContentExpressionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidMessageContentExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode operations:
/// - _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode* soap_new__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode* soap_dup__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode* dst, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) deep deletes _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(NULL, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *dst, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__InvalidMessageContentExpressionFaultType_Description operations:
/// - _wsnt__InvalidMessageContentExpressionFaultType_Description* soap_new__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description*) default initialize members
/// - int soap_read__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidMessageContentExpressionFaultType_Description* soap_dup__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description* dst, _wsnt__InvalidMessageContentExpressionFaultType_Description *src) returns deep copy of _wsnt__InvalidMessageContentExpressionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidMessageContentExpressionFaultType_Description(_wsnt__InvalidMessageContentExpressionFaultType_Description*) deep deletes _wsnt__InvalidMessageContentExpressionFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidMessageContentExpressionFaultType_Description(NULL, _wsnt__InvalidMessageContentExpressionFaultType_Description *dst, _wsnt__InvalidMessageContentExpressionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidMessageContentExpressionFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause operations:
/// - _wsnt__InvalidMessageContentExpressionFaultType_FaultCause* soap_new__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidMessageContentExpressionFaultType_FaultCause* soap_dup__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause* dst, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidMessageContentExpressionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(_wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) deep deletes _wsnt__InvalidMessageContentExpressionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(NULL, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *dst, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnrecognizedPolicyRequestFaultType operations:
/// - wsnt__UnrecognizedPolicyRequestFaultType* soap_new_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType*) default initialize members
/// - int soap_read_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType*) serialize to a sink
/// - wsnt__UnrecognizedPolicyRequestFaultType* soap_dup_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType* dst, wsnt__UnrecognizedPolicyRequestFaultType *src) returns deep copy of wsnt__UnrecognizedPolicyRequestFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnrecognizedPolicyRequestFaultType(wsnt__UnrecognizedPolicyRequestFaultType*) deep deletes wsnt__UnrecognizedPolicyRequestFaultType data members, use only on dst after soap_dup_wsnt__UnrecognizedPolicyRequestFaultType(NULL, wsnt__UnrecognizedPolicyRequestFaultType *dst, wsnt__UnrecognizedPolicyRequestFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnrecognizedPolicyRequestFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode operations:
/// - _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode* soap_new__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode* soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode* dst, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *src) returns deep copy of _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) deep deletes _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(NULL, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *dst, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnrecognizedPolicyRequestFaultType_Description operations:
/// - _wsnt__UnrecognizedPolicyRequestFaultType_Description* soap_new__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description*) serialize to a sink
/// - _wsnt__UnrecognizedPolicyRequestFaultType_Description* soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description* dst, _wsnt__UnrecognizedPolicyRequestFaultType_Description *src) returns deep copy of _wsnt__UnrecognizedPolicyRequestFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnrecognizedPolicyRequestFaultType_Description(_wsnt__UnrecognizedPolicyRequestFaultType_Description*) deep deletes _wsnt__UnrecognizedPolicyRequestFaultType_Description data members, use only on dst after soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_Description(NULL, _wsnt__UnrecognizedPolicyRequestFaultType_Description *dst, _wsnt__UnrecognizedPolicyRequestFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnrecognizedPolicyRequestFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause operations:
/// - _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause* soap_new__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause* soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause* dst, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *src) returns deep copy of _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) deep deletes _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(NULL, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *dst, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 0..unbounded.
  $ int                                  __sizeUnrecognizedPolicy       0;
/// Array _QName* of size 0..unbounded.
    _QName*                              UnrecognizedPolicy             0;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnsupportedPolicyRequestFaultType operations:
/// - wsnt__UnsupportedPolicyRequestFaultType* soap_new_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType*) default initialize members
/// - int soap_read_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType*) serialize to a sink
/// - wsnt__UnsupportedPolicyRequestFaultType* soap_dup_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType* dst, wsnt__UnsupportedPolicyRequestFaultType *src) returns deep copy of wsnt__UnsupportedPolicyRequestFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnsupportedPolicyRequestFaultType(wsnt__UnsupportedPolicyRequestFaultType*) deep deletes wsnt__UnsupportedPolicyRequestFaultType data members, use only on dst after soap_dup_wsnt__UnsupportedPolicyRequestFaultType(NULL, wsnt__UnsupportedPolicyRequestFaultType *dst, wsnt__UnsupportedPolicyRequestFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnsupportedPolicyRequestFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode operations:
/// - _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode* soap_new__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode* soap_dup__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode* dst, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *src) returns deep copy of _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) deep deletes _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(NULL, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *dst, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnsupportedPolicyRequestFaultType_Description operations:
/// - _wsnt__UnsupportedPolicyRequestFaultType_Description* soap_new__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description*) serialize to a sink
/// - _wsnt__UnsupportedPolicyRequestFaultType_Description* soap_dup__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description* dst, _wsnt__UnsupportedPolicyRequestFaultType_Description *src) returns deep copy of _wsnt__UnsupportedPolicyRequestFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsupportedPolicyRequestFaultType_Description(_wsnt__UnsupportedPolicyRequestFaultType_Description*) deep deletes _wsnt__UnsupportedPolicyRequestFaultType_Description data members, use only on dst after soap_dup__wsnt__UnsupportedPolicyRequestFaultType_Description(NULL, _wsnt__UnsupportedPolicyRequestFaultType_Description *dst, _wsnt__UnsupportedPolicyRequestFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnsupportedPolicyRequestFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause operations:
/// - _wsnt__UnsupportedPolicyRequestFaultType_FaultCause* soap_new__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnsupportedPolicyRequestFaultType_FaultCause* soap_dup__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause* dst, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *src) returns deep copy of _wsnt__UnsupportedPolicyRequestFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(_wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) deep deletes _wsnt__UnsupportedPolicyRequestFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(NULL, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *dst, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 0..unbounded.
  $ int                                  __sizeUnsupportedPolicy        0;
/// Array _QName* of size 0..unbounded.
    _QName*                              UnsupportedPolicy              0;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__NotifyMessageNotSupportedFaultType operations:
/// - wsnt__NotifyMessageNotSupportedFaultType* soap_new_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType*) default initialize members
/// - int soap_read_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType*) deserialize from a source
/// - int soap_write_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType*) serialize to a sink
/// - wsnt__NotifyMessageNotSupportedFaultType* soap_dup_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType* dst, wsnt__NotifyMessageNotSupportedFaultType *src) returns deep copy of wsnt__NotifyMessageNotSupportedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__NotifyMessageNotSupportedFaultType(wsnt__NotifyMessageNotSupportedFaultType*) deep deletes wsnt__NotifyMessageNotSupportedFaultType data members, use only on dst after soap_dup_wsnt__NotifyMessageNotSupportedFaultType(NULL, wsnt__NotifyMessageNotSupportedFaultType *dst, wsnt__NotifyMessageNotSupportedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__NotifyMessageNotSupportedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode operations:
/// - _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode* soap_new__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode* soap_dup__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode* dst, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *src) returns deep copy of _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) deep deletes _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(NULL, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *dst, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__NotifyMessageNotSupportedFaultType_Description operations:
/// - _wsnt__NotifyMessageNotSupportedFaultType_Description* soap_new__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description*) serialize to a sink
/// - _wsnt__NotifyMessageNotSupportedFaultType_Description* soap_dup__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description* dst, _wsnt__NotifyMessageNotSupportedFaultType_Description *src) returns deep copy of _wsnt__NotifyMessageNotSupportedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotifyMessageNotSupportedFaultType_Description(_wsnt__NotifyMessageNotSupportedFaultType_Description*) deep deletes _wsnt__NotifyMessageNotSupportedFaultType_Description data members, use only on dst after soap_dup__wsnt__NotifyMessageNotSupportedFaultType_Description(NULL, _wsnt__NotifyMessageNotSupportedFaultType_Description *dst, _wsnt__NotifyMessageNotSupportedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__NotifyMessageNotSupportedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause operations:
/// - _wsnt__NotifyMessageNotSupportedFaultType_FaultCause* soap_new__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__NotifyMessageNotSupportedFaultType_FaultCause* soap_dup__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause* dst, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *src) returns deep copy of _wsnt__NotifyMessageNotSupportedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(_wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) deep deletes _wsnt__NotifyMessageNotSupportedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(NULL, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *dst, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnacceptableInitialTerminationTimeFaultType operations:
/// - wsnt__UnacceptableInitialTerminationTimeFaultType* soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) default initialize members
/// - int soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) serialize to a sink
/// - wsnt__UnacceptableInitialTerminationTimeFaultType* soap_dup_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType* dst, wsnt__UnacceptableInitialTerminationTimeFaultType *src) returns deep copy of wsnt__UnacceptableInitialTerminationTimeFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnacceptableInitialTerminationTimeFaultType(wsnt__UnacceptableInitialTerminationTimeFaultType*) deep deletes wsnt__UnacceptableInitialTerminationTimeFaultType data members, use only on dst after soap_dup_wsnt__UnacceptableInitialTerminationTimeFaultType(NULL, wsnt__UnacceptableInitialTerminationTimeFaultType *dst, wsnt__UnacceptableInitialTerminationTimeFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnacceptableInitialTerminationTimeFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode operations:
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode* soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode* soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode* dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *src) returns deep copy of _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) deep deletes _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(NULL, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description operations:
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_Description* soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) serialize to a sink
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_Description* soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description* dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *src) returns deep copy of _wsnt__UnacceptableInitialTerminationTimeFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(_wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) deep deletes _wsnt__UnacceptableInitialTerminationTimeFaultType_Description data members, use only on dst after soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(NULL, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause operations:
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause* soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause* soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause* dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *src) returns deep copy of _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) deep deletes _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(NULL, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Element "MinimumTime" of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__NoCurrentMessageOnTopicFaultType operations:
/// - wsnt__NoCurrentMessageOnTopicFaultType* soap_new_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType*) default initialize members
/// - int soap_read_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType*) deserialize from a source
/// - int soap_write_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType*) serialize to a sink
/// - wsnt__NoCurrentMessageOnTopicFaultType* soap_dup_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType* dst, wsnt__NoCurrentMessageOnTopicFaultType *src) returns deep copy of wsnt__NoCurrentMessageOnTopicFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__NoCurrentMessageOnTopicFaultType(wsnt__NoCurrentMessageOnTopicFaultType*) deep deletes wsnt__NoCurrentMessageOnTopicFaultType data members, use only on dst after soap_dup_wsnt__NoCurrentMessageOnTopicFaultType(NULL, wsnt__NoCurrentMessageOnTopicFaultType *dst, wsnt__NoCurrentMessageOnTopicFaultType *src) (use soapcpp2 -Ed)
struct wsnt__NoCurrentMessageOnTopicFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode operations:
/// - _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode* soap_new__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode* soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode* dst, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *src) returns deep copy of _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) deep deletes _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(NULL, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *dst, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__NoCurrentMessageOnTopicFaultType_Description operations:
/// - _wsnt__NoCurrentMessageOnTopicFaultType_Description* soap_new__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description*) default initialize members
/// - int soap_read__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description*) serialize to a sink
/// - _wsnt__NoCurrentMessageOnTopicFaultType_Description* soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description* dst, _wsnt__NoCurrentMessageOnTopicFaultType_Description *src) returns deep copy of _wsnt__NoCurrentMessageOnTopicFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NoCurrentMessageOnTopicFaultType_Description(_wsnt__NoCurrentMessageOnTopicFaultType_Description*) deep deletes _wsnt__NoCurrentMessageOnTopicFaultType_Description data members, use only on dst after soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_Description(NULL, _wsnt__NoCurrentMessageOnTopicFaultType_Description *dst, _wsnt__NoCurrentMessageOnTopicFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__NoCurrentMessageOnTopicFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause operations:
/// - _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause* soap_new__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) serialize to a sink
/// - _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause* soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause* dst, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *src) returns deep copy of _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) deep deletes _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(NULL, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *dst, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnableToGetMessagesFaultType operations:
/// - wsnt__UnableToGetMessagesFaultType* soap_new_wsnt__UnableToGetMessagesFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType*) default initialize members
/// - int soap_read_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType*) serialize to a sink
/// - wsnt__UnableToGetMessagesFaultType* soap_dup_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType* dst, wsnt__UnableToGetMessagesFaultType *src) returns deep copy of wsnt__UnableToGetMessagesFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToGetMessagesFaultType(wsnt__UnableToGetMessagesFaultType*) deep deletes wsnt__UnableToGetMessagesFaultType data members, use only on dst after soap_dup_wsnt__UnableToGetMessagesFaultType(NULL, wsnt__UnableToGetMessagesFaultType *dst, wsnt__UnableToGetMessagesFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToGetMessagesFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnableToGetMessagesFaultType_ErrorCode operations:
/// - _wsnt__UnableToGetMessagesFaultType_ErrorCode* soap_new__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToGetMessagesFaultType_ErrorCode* soap_dup__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode* dst, _wsnt__UnableToGetMessagesFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToGetMessagesFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToGetMessagesFaultType_ErrorCode(_wsnt__UnableToGetMessagesFaultType_ErrorCode*) deep deletes _wsnt__UnableToGetMessagesFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToGetMessagesFaultType_ErrorCode(NULL, _wsnt__UnableToGetMessagesFaultType_ErrorCode *dst, _wsnt__UnableToGetMessagesFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToGetMessagesFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnableToGetMessagesFaultType_Description operations:
/// - _wsnt__UnableToGetMessagesFaultType_Description* soap_new__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, _wsnt__UnableToGetMessagesFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, _wsnt__UnableToGetMessagesFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, _wsnt__UnableToGetMessagesFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToGetMessagesFaultType_Description* soap_dup__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, _wsnt__UnableToGetMessagesFaultType_Description* dst, _wsnt__UnableToGetMessagesFaultType_Description *src) returns deep copy of _wsnt__UnableToGetMessagesFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToGetMessagesFaultType_Description(_wsnt__UnableToGetMessagesFaultType_Description*) deep deletes _wsnt__UnableToGetMessagesFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToGetMessagesFaultType_Description(NULL, _wsnt__UnableToGetMessagesFaultType_Description *dst, _wsnt__UnableToGetMessagesFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToGetMessagesFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnableToGetMessagesFaultType_FaultCause operations:
/// - _wsnt__UnableToGetMessagesFaultType_FaultCause* soap_new__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToGetMessagesFaultType_FaultCause* soap_dup__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause* dst, _wsnt__UnableToGetMessagesFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToGetMessagesFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToGetMessagesFaultType_FaultCause(_wsnt__UnableToGetMessagesFaultType_FaultCause*) deep deletes _wsnt__UnableToGetMessagesFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToGetMessagesFaultType_FaultCause(NULL, _wsnt__UnableToGetMessagesFaultType_FaultCause *dst, _wsnt__UnableToGetMessagesFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToGetMessagesFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnableToDestroyPullPointFaultType operations:
/// - wsnt__UnableToDestroyPullPointFaultType* soap_new_wsnt__UnableToDestroyPullPointFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType*) default initialize members
/// - int soap_read_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType*) serialize to a sink
/// - wsnt__UnableToDestroyPullPointFaultType* soap_dup_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType* dst, wsnt__UnableToDestroyPullPointFaultType *src) returns deep copy of wsnt__UnableToDestroyPullPointFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToDestroyPullPointFaultType(wsnt__UnableToDestroyPullPointFaultType*) deep deletes wsnt__UnableToDestroyPullPointFaultType data members, use only on dst after soap_dup_wsnt__UnableToDestroyPullPointFaultType(NULL, wsnt__UnableToDestroyPullPointFaultType *dst, wsnt__UnableToDestroyPullPointFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToDestroyPullPointFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode operations:
/// - _wsnt__UnableToDestroyPullPointFaultType_ErrorCode* soap_new__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToDestroyPullPointFaultType_ErrorCode* soap_dup__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode* dst, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToDestroyPullPointFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(_wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) deep deletes _wsnt__UnableToDestroyPullPointFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(NULL, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *dst, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnableToDestroyPullPointFaultType_Description operations:
/// - _wsnt__UnableToDestroyPullPointFaultType_Description* soap_new__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToDestroyPullPointFaultType_Description* soap_dup__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_Description* dst, _wsnt__UnableToDestroyPullPointFaultType_Description *src) returns deep copy of _wsnt__UnableToDestroyPullPointFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroyPullPointFaultType_Description(_wsnt__UnableToDestroyPullPointFaultType_Description*) deep deletes _wsnt__UnableToDestroyPullPointFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToDestroyPullPointFaultType_Description(NULL, _wsnt__UnableToDestroyPullPointFaultType_Description *dst, _wsnt__UnableToDestroyPullPointFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroyPullPointFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause operations:
/// - _wsnt__UnableToDestroyPullPointFaultType_FaultCause* soap_new__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToDestroyPullPointFaultType_FaultCause* soap_dup__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause* dst, _wsnt__UnableToDestroyPullPointFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToDestroyPullPointFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroyPullPointFaultType_FaultCause(_wsnt__UnableToDestroyPullPointFaultType_FaultCause*) deep deletes _wsnt__UnableToDestroyPullPointFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToDestroyPullPointFaultType_FaultCause(NULL, _wsnt__UnableToDestroyPullPointFaultType_FaultCause *dst, _wsnt__UnableToDestroyPullPointFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnableToCreatePullPointFaultType operations:
/// - wsnt__UnableToCreatePullPointFaultType* soap_new_wsnt__UnableToCreatePullPointFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType*) default initialize members
/// - int soap_read_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType*) serialize to a sink
/// - wsnt__UnableToCreatePullPointFaultType* soap_dup_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType* dst, wsnt__UnableToCreatePullPointFaultType *src) returns deep copy of wsnt__UnableToCreatePullPointFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToCreatePullPointFaultType(wsnt__UnableToCreatePullPointFaultType*) deep deletes wsnt__UnableToCreatePullPointFaultType data members, use only on dst after soap_dup_wsnt__UnableToCreatePullPointFaultType(NULL, wsnt__UnableToCreatePullPointFaultType *dst, wsnt__UnableToCreatePullPointFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToCreatePullPointFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode operations:
/// - _wsnt__UnableToCreatePullPointFaultType_ErrorCode* soap_new__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToCreatePullPointFaultType_ErrorCode* soap_dup__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode* dst, _wsnt__UnableToCreatePullPointFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToCreatePullPointFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToCreatePullPointFaultType_ErrorCode(_wsnt__UnableToCreatePullPointFaultType_ErrorCode*) deep deletes _wsnt__UnableToCreatePullPointFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToCreatePullPointFaultType_ErrorCode(NULL, _wsnt__UnableToCreatePullPointFaultType_ErrorCode *dst, _wsnt__UnableToCreatePullPointFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnableToCreatePullPointFaultType_Description operations:
/// - _wsnt__UnableToCreatePullPointFaultType_Description* soap_new__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, _wsnt__UnableToCreatePullPointFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, _wsnt__UnableToCreatePullPointFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, _wsnt__UnableToCreatePullPointFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToCreatePullPointFaultType_Description* soap_dup__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, _wsnt__UnableToCreatePullPointFaultType_Description* dst, _wsnt__UnableToCreatePullPointFaultType_Description *src) returns deep copy of _wsnt__UnableToCreatePullPointFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToCreatePullPointFaultType_Description(_wsnt__UnableToCreatePullPointFaultType_Description*) deep deletes _wsnt__UnableToCreatePullPointFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToCreatePullPointFaultType_Description(NULL, _wsnt__UnableToCreatePullPointFaultType_Description *dst, _wsnt__UnableToCreatePullPointFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToCreatePullPointFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnableToCreatePullPointFaultType_FaultCause operations:
/// - _wsnt__UnableToCreatePullPointFaultType_FaultCause* soap_new__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToCreatePullPointFaultType_FaultCause* soap_dup__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause* dst, _wsnt__UnableToCreatePullPointFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToCreatePullPointFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToCreatePullPointFaultType_FaultCause(_wsnt__UnableToCreatePullPointFaultType_FaultCause*) deep deletes _wsnt__UnableToCreatePullPointFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToCreatePullPointFaultType_FaultCause(NULL, _wsnt__UnableToCreatePullPointFaultType_FaultCause *dst, _wsnt__UnableToCreatePullPointFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToCreatePullPointFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnacceptableTerminationTimeFaultType operations:
/// - wsnt__UnacceptableTerminationTimeFaultType* soap_new_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType*) default initialize members
/// - int soap_read_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType*) serialize to a sink
/// - wsnt__UnacceptableTerminationTimeFaultType* soap_dup_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType* dst, wsnt__UnacceptableTerminationTimeFaultType *src) returns deep copy of wsnt__UnacceptableTerminationTimeFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnacceptableTerminationTimeFaultType(wsnt__UnacceptableTerminationTimeFaultType*) deep deletes wsnt__UnacceptableTerminationTimeFaultType data members, use only on dst after soap_dup_wsnt__UnacceptableTerminationTimeFaultType(NULL, wsnt__UnacceptableTerminationTimeFaultType *dst, wsnt__UnacceptableTerminationTimeFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnacceptableTerminationTimeFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode operations:
/// - _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode* soap_new__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode* soap_dup__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode* dst, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *src) returns deep copy of _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) deep deletes _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(NULL, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *dst, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnacceptableTerminationTimeFaultType_Description operations:
/// - _wsnt__UnacceptableTerminationTimeFaultType_Description* soap_new__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description*) serialize to a sink
/// - _wsnt__UnacceptableTerminationTimeFaultType_Description* soap_dup__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description* dst, _wsnt__UnacceptableTerminationTimeFaultType_Description *src) returns deep copy of _wsnt__UnacceptableTerminationTimeFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableTerminationTimeFaultType_Description(_wsnt__UnacceptableTerminationTimeFaultType_Description*) deep deletes _wsnt__UnacceptableTerminationTimeFaultType_Description data members, use only on dst after soap_dup__wsnt__UnacceptableTerminationTimeFaultType_Description(NULL, _wsnt__UnacceptableTerminationTimeFaultType_Description *dst, _wsnt__UnacceptableTerminationTimeFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableTerminationTimeFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause operations:
/// - _wsnt__UnacceptableTerminationTimeFaultType_FaultCause* soap_new__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnacceptableTerminationTimeFaultType_FaultCause* soap_dup__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause* dst, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *src) returns deep copy of _wsnt__UnacceptableTerminationTimeFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(_wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) deep deletes _wsnt__UnacceptableTerminationTimeFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(NULL, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *dst, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Element "MinimumTime" of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnableToDestroySubscriptionFaultType operations:
/// - wsnt__UnableToDestroySubscriptionFaultType* soap_new_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType*) default initialize members
/// - int soap_read_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType*) serialize to a sink
/// - wsnt__UnableToDestroySubscriptionFaultType* soap_dup_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType* dst, wsnt__UnableToDestroySubscriptionFaultType *src) returns deep copy of wsnt__UnableToDestroySubscriptionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToDestroySubscriptionFaultType(wsnt__UnableToDestroySubscriptionFaultType*) deep deletes wsnt__UnableToDestroySubscriptionFaultType data members, use only on dst after soap_dup_wsnt__UnableToDestroySubscriptionFaultType(NULL, wsnt__UnableToDestroySubscriptionFaultType *dst, wsnt__UnableToDestroySubscriptionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToDestroySubscriptionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode operations:
/// - _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode* soap_new__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode* soap_dup__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode* dst, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) deep deletes _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(NULL, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *dst, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnableToDestroySubscriptionFaultType_Description operations:
/// - _wsnt__UnableToDestroySubscriptionFaultType_Description* soap_new__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToDestroySubscriptionFaultType_Description* soap_dup__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description* dst, _wsnt__UnableToDestroySubscriptionFaultType_Description *src) returns deep copy of _wsnt__UnableToDestroySubscriptionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroySubscriptionFaultType_Description(_wsnt__UnableToDestroySubscriptionFaultType_Description*) deep deletes _wsnt__UnableToDestroySubscriptionFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToDestroySubscriptionFaultType_Description(NULL, _wsnt__UnableToDestroySubscriptionFaultType_Description *dst, _wsnt__UnableToDestroySubscriptionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroySubscriptionFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause operations:
/// - _wsnt__UnableToDestroySubscriptionFaultType_FaultCause* soap_new__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToDestroySubscriptionFaultType_FaultCause* soap_dup__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause* dst, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToDestroySubscriptionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(_wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) deep deletes _wsnt__UnableToDestroySubscriptionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(NULL, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *dst, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__PauseFailedFaultType operations:
/// - wsnt__PauseFailedFaultType* soap_new_wsnt__PauseFailedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType*) default initialize members
/// - int soap_read_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType*) deserialize from a source
/// - int soap_write_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType*) serialize to a sink
/// - wsnt__PauseFailedFaultType* soap_dup_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType* dst, wsnt__PauseFailedFaultType *src) returns deep copy of wsnt__PauseFailedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__PauseFailedFaultType(wsnt__PauseFailedFaultType*) deep deletes wsnt__PauseFailedFaultType data members, use only on dst after soap_dup_wsnt__PauseFailedFaultType(NULL, wsnt__PauseFailedFaultType *dst, wsnt__PauseFailedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__PauseFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__PauseFailedFaultType_ErrorCode operations:
/// - _wsnt__PauseFailedFaultType_ErrorCode* soap_new__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, _wsnt__PauseFailedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, _wsnt__PauseFailedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, _wsnt__PauseFailedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__PauseFailedFaultType_ErrorCode* soap_dup__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, _wsnt__PauseFailedFaultType_ErrorCode* dst, _wsnt__PauseFailedFaultType_ErrorCode *src) returns deep copy of _wsnt__PauseFailedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseFailedFaultType_ErrorCode(_wsnt__PauseFailedFaultType_ErrorCode*) deep deletes _wsnt__PauseFailedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__PauseFailedFaultType_ErrorCode(NULL, _wsnt__PauseFailedFaultType_ErrorCode *dst, _wsnt__PauseFailedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__PauseFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__PauseFailedFaultType_Description operations:
/// - _wsnt__PauseFailedFaultType_Description* soap_new__wsnt__PauseFailedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseFailedFaultType_Description(struct soap*, _wsnt__PauseFailedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__PauseFailedFaultType_Description(struct soap*, _wsnt__PauseFailedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__PauseFailedFaultType_Description(struct soap*, _wsnt__PauseFailedFaultType_Description*) serialize to a sink
/// - _wsnt__PauseFailedFaultType_Description* soap_dup__wsnt__PauseFailedFaultType_Description(struct soap*, _wsnt__PauseFailedFaultType_Description* dst, _wsnt__PauseFailedFaultType_Description *src) returns deep copy of _wsnt__PauseFailedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseFailedFaultType_Description(_wsnt__PauseFailedFaultType_Description*) deep deletes _wsnt__PauseFailedFaultType_Description data members, use only on dst after soap_dup__wsnt__PauseFailedFaultType_Description(NULL, _wsnt__PauseFailedFaultType_Description *dst, _wsnt__PauseFailedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__PauseFailedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__PauseFailedFaultType_FaultCause operations:
/// - _wsnt__PauseFailedFaultType_FaultCause* soap_new__wsnt__PauseFailedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseFailedFaultType_FaultCause(struct soap*, _wsnt__PauseFailedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__PauseFailedFaultType_FaultCause(struct soap*, _wsnt__PauseFailedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__PauseFailedFaultType_FaultCause(struct soap*, _wsnt__PauseFailedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__PauseFailedFaultType_FaultCause* soap_dup__wsnt__PauseFailedFaultType_FaultCause(struct soap*, _wsnt__PauseFailedFaultType_FaultCause* dst, _wsnt__PauseFailedFaultType_FaultCause *src) returns deep copy of _wsnt__PauseFailedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseFailedFaultType_FaultCause(_wsnt__PauseFailedFaultType_FaultCause*) deep deletes _wsnt__PauseFailedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__PauseFailedFaultType_FaultCause(NULL, _wsnt__PauseFailedFaultType_FaultCause *dst, _wsnt__PauseFailedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__PauseFailedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__ResumeFailedFaultType operations:
/// - wsnt__ResumeFailedFaultType* soap_new_wsnt__ResumeFailedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType*) default initialize members
/// - int soap_read_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType*) deserialize from a source
/// - int soap_write_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType*) serialize to a sink
/// - wsnt__ResumeFailedFaultType* soap_dup_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType* dst, wsnt__ResumeFailedFaultType *src) returns deep copy of wsnt__ResumeFailedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__ResumeFailedFaultType(wsnt__ResumeFailedFaultType*) deep deletes wsnt__ResumeFailedFaultType data members, use only on dst after soap_dup_wsnt__ResumeFailedFaultType(NULL, wsnt__ResumeFailedFaultType *dst, wsnt__ResumeFailedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__ResumeFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__ResumeFailedFaultType_ErrorCode operations:
/// - _wsnt__ResumeFailedFaultType_ErrorCode* soap_new__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, _wsnt__ResumeFailedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, _wsnt__ResumeFailedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, _wsnt__ResumeFailedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__ResumeFailedFaultType_ErrorCode* soap_dup__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, _wsnt__ResumeFailedFaultType_ErrorCode* dst, _wsnt__ResumeFailedFaultType_ErrorCode *src) returns deep copy of _wsnt__ResumeFailedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeFailedFaultType_ErrorCode(_wsnt__ResumeFailedFaultType_ErrorCode*) deep deletes _wsnt__ResumeFailedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__ResumeFailedFaultType_ErrorCode(NULL, _wsnt__ResumeFailedFaultType_ErrorCode *dst, _wsnt__ResumeFailedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__ResumeFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__ResumeFailedFaultType_Description operations:
/// - _wsnt__ResumeFailedFaultType_Description* soap_new__wsnt__ResumeFailedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeFailedFaultType_Description(struct soap*, _wsnt__ResumeFailedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__ResumeFailedFaultType_Description(struct soap*, _wsnt__ResumeFailedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__ResumeFailedFaultType_Description(struct soap*, _wsnt__ResumeFailedFaultType_Description*) serialize to a sink
/// - _wsnt__ResumeFailedFaultType_Description* soap_dup__wsnt__ResumeFailedFaultType_Description(struct soap*, _wsnt__ResumeFailedFaultType_Description* dst, _wsnt__ResumeFailedFaultType_Description *src) returns deep copy of _wsnt__ResumeFailedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeFailedFaultType_Description(_wsnt__ResumeFailedFaultType_Description*) deep deletes _wsnt__ResumeFailedFaultType_Description data members, use only on dst after soap_dup__wsnt__ResumeFailedFaultType_Description(NULL, _wsnt__ResumeFailedFaultType_Description *dst, _wsnt__ResumeFailedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__ResumeFailedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__ResumeFailedFaultType_FaultCause operations:
/// - _wsnt__ResumeFailedFaultType_FaultCause* soap_new__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, _wsnt__ResumeFailedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, _wsnt__ResumeFailedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, _wsnt__ResumeFailedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__ResumeFailedFaultType_FaultCause* soap_dup__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, _wsnt__ResumeFailedFaultType_FaultCause* dst, _wsnt__ResumeFailedFaultType_FaultCause *src) returns deep copy of _wsnt__ResumeFailedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeFailedFaultType_FaultCause(_wsnt__ResumeFailedFaultType_FaultCause*) deep deletes _wsnt__ResumeFailedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__ResumeFailedFaultType_FaultCause(NULL, _wsnt__ResumeFailedFaultType_FaultCause *dst, _wsnt__ResumeFailedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__ResumeFailedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// @note struct wstop__TopicNamespaceType operations:
/// - wstop__TopicNamespaceType* soap_new_wstop__TopicNamespaceType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType*) default initialize members
/// - int soap_read_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType*) deserialize from a source
/// - int soap_write_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType*) serialize to a sink
/// - wstop__TopicNamespaceType* soap_dup_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType* dst, wstop__TopicNamespaceType *src) returns deep copy of wstop__TopicNamespaceType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__TopicNamespaceType(wstop__TopicNamespaceType*) deep deletes wstop__TopicNamespaceType data members, use only on dst after soap_dup_wstop__TopicNamespaceType(NULL, wstop__TopicNamespaceType *dst, wstop__TopicNamespaceType *src) (use soapcpp2 -Ed)
struct wstop__TopicNamespaceType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// Size of Topic array is 0..unbounded.
  $ int                                  __sizeTopic                    0;
/// @note struct _wstop__TopicNamespaceType_Topic operations:
/// - _wstop__TopicNamespaceType_Topic* soap_new__wstop__TopicNamespaceType_Topic(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic*) default initialize members
/// - int soap_read__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic*) deserialize from a source
/// - int soap_write__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic*) serialize to a sink
/// - _wstop__TopicNamespaceType_Topic* soap_dup__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic* dst, _wstop__TopicNamespaceType_Topic *src) returns deep copy of _wstop__TopicNamespaceType_Topic src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wstop__TopicNamespaceType_Topic(_wstop__TopicNamespaceType_Topic*) deep deletes _wstop__TopicNamespaceType_Topic data members, use only on dst after soap_dup__wstop__TopicNamespaceType_Topic(NULL, _wstop__TopicNamespaceType_Topic *dst, _wstop__TopicNamespaceType_Topic *src) (use soapcpp2 -Ed)
    struct _wstop__TopicNamespaceType_Topic
    {
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// INHERITED FROM wstop__TopicType:
/// Element "MessagePattern" of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    struct wstop__QueryExpressionType*   MessagePattern                 0;	///< Optional element.
/// Size of array of struct wstop__TopicType* is 0..unbounded.
  $ int                                  __sizeTopic                    0;
/// Array struct wstop__TopicType* of size 0..unbounded.
    struct wstop__TopicType*             Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName                          name                           1;	///< Required attribute.
@    _QName                                                             

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of type xs:boolean.
  @ enum xsd__boolean                    final_                         0 = xsd__boolean__false_;	///< Optional attribute with default value="false".
//  END OF INHERITED FROM wstop__TopicType
/// Attribute "parent" of type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
  @ wstop__ConcreteTopicExpression       parent                         0;	///< Optional attribute.
    }                                   *Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName                          name                           0;	///< Optional attribute.
/// Attribute "targetNamespace" of type xs:anyURI.
  @ xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute "final" of type xs:boolean.
  @ enum xsd__boolean                    final_                         0 = xsd__boolean__false_;	///< Optional attribute with default value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// @note struct wstop__TopicType operations:
/// - wstop__TopicType* soap_new_wstop__TopicType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__TopicType(struct soap*, wstop__TopicType*) default initialize members
/// - int soap_read_wstop__TopicType(struct soap*, wstop__TopicType*) deserialize from a source
/// - int soap_write_wstop__TopicType(struct soap*, wstop__TopicType*) serialize to a sink
/// - wstop__TopicType* soap_dup_wstop__TopicType(struct soap*, wstop__TopicType* dst, wstop__TopicType *src) returns deep copy of wstop__TopicType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__TopicType(wstop__TopicType*) deep deletes wstop__TopicType data members, use only on dst after soap_dup_wstop__TopicType(NULL, wstop__TopicType *dst, wstop__TopicType *src) (use soapcpp2 -Ed)
struct wstop__TopicType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// Element "MessagePattern" of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    struct wstop__QueryExpressionType*   MessagePattern                 0;	///< Optional element.
/// Size of array of struct wstop__TopicType* is 0..unbounded.
  $ int                                  __sizeTopic                    0;
/// Array struct wstop__TopicType* of size 0..unbounded.
    struct wstop__TopicType*             Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName                          name                           1;	///< Required attribute.
@    _QName                                                             

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of type xs:boolean.
  @ enum xsd__boolean                    final_                         0 = xsd__boolean__false_;	///< Optional attribute with default value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// @note struct wstop__TopicSetType operations:
/// - wstop__TopicSetType* soap_new_wstop__TopicSetType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__TopicSetType(struct soap*, wstop__TopicSetType*) default initialize members
/// - int soap_read_wstop__TopicSetType(struct soap*, wstop__TopicSetType*) deserialize from a source
/// - int soap_write_wstop__TopicSetType(struct soap*, wstop__TopicSetType*) serialize to a sink
/// - wstop__TopicSetType* soap_dup_wstop__TopicSetType(struct soap*, wstop__TopicSetType* dst, wstop__TopicSetType *src) returns deep copy of wstop__TopicSetType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__TopicSetType(wstop__TopicSetType*) deep deletes wstop__TopicSetType data members, use only on dst after soap_dup_wstop__TopicSetType(NULL, wstop__TopicSetType *dst, wstop__TopicSetType *src) (use soapcpp2 -Ed)
struct wstop__TopicSetType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":Capabilities of type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap tev  service name:	PullPointSubscriptionBinding 
//gsoap tev  service type:	PullPointSubscription 
//gsoap tev  service namespace:	http://www.onvif.org/ver10/events/wsdl 
//gsoap tev  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref PullPointSubscriptionBinding

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_operations Operations of Binding "PullPointSubscriptionBinding"

  - @ref __tev__PullMessages

  - @ref __tev__Seek

  - @ref __tev__SetSynchronizationPoint

  - @ref __tev__Unsubscribe

  - @ref __tev__GetServiceCapabilities

  - @ref __tev__CreatePullPointSubscription

  - @ref __tev__GetEventProperties

  - @ref __tev__AddEventBroker

  - @ref __tev__DeleteEventBroker

  - @ref __tev__GetEventBrokers

  - @ref __tev__Renew

  - @ref __tev__Unsubscribe_

  - @ref __tev__Subscribe

  - @ref __tev__GetCurrentMessage

  - @ref __tev__Notify

  - @ref __tev__GetMessages

  - @ref __tev__DestroyPullPoint

  - @ref __tev__Notify_

  - @ref __tev__CreatePullPoint

  - @ref __tev__Renew_

  - @ref __tev__Unsubscribe__

  - @ref __tev__PauseSubscription

  - @ref __tev__ResumeSubscription

@section PullPointSubscriptionBinding_ports Default endpoints of Binding "PullPointSubscriptionBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use wsdl2h option -j to omit these declarations.

*/
mutable struct SOAP_ENV__Detail
{
/// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
/// SOAP Fault message "InvalidFilterFault" part "InvalidFilterFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault".
    struct wsnt__InvalidFilterFaultType*  wsnt__InvalidFilterFault      ;
/// SOAP Fault message "InvalidMessageContentExpressionFault" part "InvalidMessageContentExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault".
    struct wsnt__InvalidMessageContentExpressionFaultType*  wsnt__InvalidMessageContentExpressionFault;
/// SOAP Fault message "InvalidProducerPropertiesExpressionFault" part "InvalidProducerPropertiesExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault".
    struct wsnt__InvalidProducerPropertiesExpressionFaultType*  wsnt__InvalidProducerPropertiesExpressionFault;
/// SOAP Fault message "InvalidTopicExpressionFault" part "InvalidTopicExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault".
    struct wsnt__InvalidTopicExpressionFaultType*  wsnt__InvalidTopicExpressionFault;
/// SOAP Fault message "MultipleTopicsSpecifiedFault" part "MultipleTopicsSpecifiedFault" element ""http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault".
    struct wsnt__MultipleTopicsSpecifiedFaultType*  wsnt__MultipleTopicsSpecifiedFault;
/// SOAP Fault message "NoCurrentMessageOnTopicFault" part "NoCurrentMessageOnTopicFault" element ""http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault".
    struct wsnt__NoCurrentMessageOnTopicFaultType*  wsnt__NoCurrentMessageOnTopicFault;
/// SOAP Fault message "NotifyMessageNotSupportedFault" part "NotifyMessageNotSupportedFault" element ""http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault".
    struct wsnt__NotifyMessageNotSupportedFaultType*  wsnt__NotifyMessageNotSupportedFault;
/// SOAP Fault message "PauseFailedFault" part "PauseFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":PauseFailedFault".
    struct wsnt__PauseFailedFaultType*   wsnt__PauseFailedFault        ;
/// SOAP Fault message "PullMessagesFaultResponse" part "parameters" element ""http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse".
    struct _tev__PullMessagesFaultResponse*  tev__PullMessagesFaultResponse;
/// SOAP Fault message "ResourceUnknownFault" part "ResourceUnknownFault" element ""http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault".
    struct wsrfr__ResourceUnknownFaultType*  wsrfr__ResourceUnknownFault   ;
/// SOAP Fault message "ResumeFailedFault" part "ResumeFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault".
    struct wsnt__ResumeFailedFaultType*  wsnt__ResumeFailedFault       ;
/// SOAP Fault message "SubscribeCreationFailedFault" part "SubscribeCreationFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault".
    struct wsnt__SubscribeCreationFailedFaultType*  wsnt__SubscribeCreationFailedFault;
/// SOAP Fault message "TopicExpressionDialectUnknownFault" part "TopicExpressionDialectUnknownFault" element ""http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault".
    struct wsnt__TopicExpressionDialectUnknownFaultType*  wsnt__TopicExpressionDialectUnknownFault;
/// SOAP Fault message "TopicNotSupportedFault" part "TopicNotSupportedFault" element ""http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault".
    struct wsnt__TopicNotSupportedFaultType*  wsnt__TopicNotSupportedFault  ;
/// SOAP Fault message "UnableToCreatePullPointFault" part "UnableToCreatePullPointFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault".
    struct wsnt__UnableToCreatePullPointFaultType*  wsnt__UnableToCreatePullPointFault;
/// SOAP Fault message "UnableToDestroyPullPointFault" part "UnableToDestroyPullPointFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault".
    struct wsnt__UnableToDestroyPullPointFaultType*  wsnt__UnableToDestroyPullPointFault;
/// SOAP Fault message "UnableToDestroySubscriptionFault" part "UnableToDestroySubscriptionFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault".
    struct wsnt__UnableToDestroySubscriptionFaultType*  wsnt__UnableToDestroySubscriptionFault;
/// SOAP Fault message "UnableToGetMessagesFault" part "UnableToGetMessagesFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault".
    struct wsnt__UnableToGetMessagesFaultType*  wsnt__UnableToGetMessagesFault;
/// SOAP Fault message "UnacceptableInitialTerminationTimeFault" part "UnacceptableInitialTerminationTimeFault" element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault".
    struct wsnt__UnacceptableInitialTerminationTimeFaultType*  wsnt__UnacceptableInitialTerminationTimeFault;
/// SOAP Fault message "UnacceptableTerminationTimeFault" part "UnacceptableTerminationTimeFault" element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault".
    struct wsnt__UnacceptableTerminationTimeFaultType*  wsnt__UnacceptableTerminationTimeFault;
/// SOAP Fault message "UnrecognizedPolicyRequestFault" part "UnrecognizedPolicyRequestFault" element ""http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault".
    struct wsnt__UnrecognizedPolicyRequestFaultType*  wsnt__UnrecognizedPolicyRequestFault;
/// SOAP Fault message "UnsupportedPolicyRequestFault" part "UnsupportedPolicyRequestFault" element ""http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault".
    struct wsnt__UnsupportedPolicyRequestFaultType*  wsnt__UnsupportedPolicyRequestFault;
    int                                  __type                        ;	///< set to SOAP_TYPE_T for a serializable type T
    void                                *fault                         ;	///< points to serializable value of type T or NULL
    _XML                                 __any                         ;	///< Catch any other content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PullPointSubscriptionBinding                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__PullMessages                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__PullMessages" of service binding "PullPointSubscriptionBinding".
				This method pulls one or more messages from a PullPoint.
				The device shall provide the following PullMessages
command for all SubscriptionManager
				endpoints returned by the CreatePullPointSubscription
command. This method shall not wait until
				the requested number of messages is available but
return as soon as at least one message is available.<br/>
				The command shall at least support a Timeout of
one minute. In case a device supports retrieval of less messages 
				than requested it shall return these without generating
a fault.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesResponse"

  - Output Fault: "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse (literal)
    - Output Fault addressing action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessages/Fault/PullMessagesFaultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__PullMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__PullMessages*          tev__PullMessages,
    // output parameters:
    struct _tev__PullMessagesResponse  *tev__PullMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__PullMessages(
    struct soap *soap,
    // input parameters:
    struct _tev__PullMessages*          tev__PullMessages,
    // output parameters:
    struct _tev__PullMessagesResponse  *tev__PullMessagesResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	PullMessages SOAP
//gsoap tev  service method-style:	PullMessages document
//gsoap tev  service method-encoding:	PullMessages literal
//gsoap tev  service method-input-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest
//gsoap tev  service method-output-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesResponse
//gsoap tev  service method-fault:	PullMessages tev__PullMessagesFaultResponse
//gsoap tev  service method-fault-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessages/Fault/PullMessagesFaultResponse
int __tev__PullMessages(
    struct _tev__PullMessages*          tev__PullMessages,	///< Input parameter
    struct _tev__PullMessagesResponse  *tev__PullMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Seek                                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Seek" of service binding "PullPointSubscriptionBinding".
				This method readjusts the pull pointer into the
past.
				A device supporting persistent notification storage
shall provide the
				following Seek command for all SubscriptionManager
endpoints returned by
				the CreatePullPointSubscription command. The optional
Reverse argument can
				be used to reverse the pull direction of the PullMessages
command.<br/>
				The UtcTime argument will be matched against the
UtcTime attribute on a
				NotificationMessage.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Seek(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__Seek*                  tev__Seek,
    // output parameters:
    struct _tev__SeekResponse          *tev__SeekResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Seek(
    struct soap *soap,
    // input parameters:
    struct _tev__Seek*                  tev__Seek,
    // output parameters:
    struct _tev__SeekResponse          *tev__SeekResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Seek SOAP
//gsoap tev  service method-style:	Seek document
//gsoap tev  service method-encoding:	Seek literal
//gsoap tev  service method-input-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest
//gsoap tev  service method-output-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekResponse
int __tev__Seek(
    struct _tev__Seek*                  tev__Seek,	///< Input parameter
    struct _tev__SeekResponse          *tev__SeekResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__SetSynchronizationPoint" of service binding "PullPointSubscriptionBinding".
Properties inform a client about property creation, changes and
				deletion in a uniform way. When a client wants to
synchronize its properties with the
				properties of the device, it can request a synchronization
point which repeats the current
				status of all properties to which a client has subscribed.
The PropertyOperation of all
				produced notifications is set to Initialized.
The Synchronization Point is
				requested directly from the SubscriptionManager
which was returned in either the
				SubscriptionResponse or in the CreatePullPointSubscriptionResponse.
The property update is
				transmitted via the notification transportation
of the notification interface. This method is mandatory.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__SetSynchronizationPoint* tev__SetSynchronizationPoint,
    // output parameters:
    struct _tev__SetSynchronizationPointResponse*tev__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    struct _tev__SetSynchronizationPoint* tev__SetSynchronizationPoint,
    // output parameters:
    struct _tev__SetSynchronizationPointResponse*tev__SetSynchronizationPointResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap tev  service method-style:	SetSynchronizationPoint document
//gsoap tev  service method-encoding:	SetSynchronizationPoint literal
//gsoap tev  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest
//gsoap tev  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointResponse
int __tev__SetSynchronizationPoint(
    struct _tev__SetSynchronizationPoint* tev__SetSynchronizationPoint,	///< Input parameter
    struct _tev__SetSynchronizationPointResponse*tev__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe" of service binding "PullPointSubscriptionBinding".
The device shall provide the following Unsubscribe command for all SubscriptionManager
endpoints returned by the CreatePullPointSubscription command.<br/>
				This command shall terminate the lifetime of a pull
point.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Unsubscribe SOAP
//gsoap tev  service method-style:	Unsubscribe document
//gsoap tev  service method-encoding:	Unsubscribe literal
//gsoap tev  service method-input-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe(
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,	///< Input parameter
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetServiceCapabilities" of service binding "PullPointSubscriptionBinding".
Returns the capabilities of the event service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__GetServiceCapabilities* tev__GetServiceCapabilities,
    // output parameters:
    struct _tev__GetServiceCapabilitiesResponse*tev__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tev__GetServiceCapabilities* tev__GetServiceCapabilities,
    // output parameters:
    struct _tev__GetServiceCapabilitiesResponse*tev__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tev  service method-style:	GetServiceCapabilities document
//gsoap tev  service method-encoding:	GetServiceCapabilities literal
//gsoap tev  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest
//gsoap tev  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesResponse
int __tev__GetServiceCapabilities(
    struct _tev__GetServiceCapabilities* tev__GetServiceCapabilities,	///< Input parameter
    struct _tev__GetServiceCapabilitiesResponse*tev__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__CreatePullPointSubscription                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__CreatePullPointSubscription" of service binding "PullPointSubscriptionBinding".
This method returns a PullPointSubscription that can be polled using PullMessages.

				This message contains the same elements as the SubscriptionRequest
of the WS-BaseNotification without the ConsumerReference.<br/>
				If no Filter is specified the pullpoint notifies
all occurring events to the client.<br/>
				This method is mandatory.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__CreatePullPointSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__CreatePullPointSubscription* tev__CreatePullPointSubscription,
    // output parameters:
    struct _tev__CreatePullPointSubscriptionResponse*tev__CreatePullPointSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__CreatePullPointSubscription(
    struct soap *soap,
    // input parameters:
    struct _tev__CreatePullPointSubscription* tev__CreatePullPointSubscription,
    // output parameters:
    struct _tev__CreatePullPointSubscriptionResponse*tev__CreatePullPointSubscriptionResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	CreatePullPointSubscription SOAP
//gsoap tev  service method-style:	CreatePullPointSubscription document
//gsoap tev  service method-encoding:	CreatePullPointSubscription literal
//gsoap tev  service method-input-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest
//gsoap tev  service method-output-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionResponse
//gsoap tev  service method-fault:	CreatePullPointSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidFilterFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidMessageContentExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnrecognizedPolicyRequestFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnsupportedPolicyRequestFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__NotifyMessageNotSupportedFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__SubscribeCreationFailedFault
int __tev__CreatePullPointSubscription(
    struct _tev__CreatePullPointSubscription* tev__CreatePullPointSubscription,	///< Input parameter
    struct _tev__CreatePullPointSubscriptionResponse*tev__CreatePullPointSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetEventProperties                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetEventProperties" of service binding "PullPointSubscriptionBinding".
The WS-BaseNotification specification defines a set of OPTIONAL WS-ResouceProperties.
				This specification does not require the implementation
of the WS-ResourceProperty interface.
				Instead, the subsequent direct interface shall be
implemented by an ONVIF compliant device
				in order to provide information about the FilterDialects,
Schema files and topics supported by
				the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetEventProperties(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__GetEventProperties*    tev__GetEventProperties,
    // output parameters:
    struct _tev__GetEventPropertiesResponse*tev__GetEventPropertiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetEventProperties(
    struct soap *soap,
    // input parameters:
    struct _tev__GetEventProperties*    tev__GetEventProperties,
    // output parameters:
    struct _tev__GetEventPropertiesResponse*tev__GetEventPropertiesResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetEventProperties SOAP
//gsoap tev  service method-style:	GetEventProperties document
//gsoap tev  service method-encoding:	GetEventProperties literal
//gsoap tev  service method-input-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest
//gsoap tev  service method-output-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesResponse
int __tev__GetEventProperties(
    struct _tev__GetEventProperties*    tev__GetEventProperties,	///< Input parameter
    struct _tev__GetEventPropertiesResponse*tev__GetEventPropertiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__AddEventBroker                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__AddEventBroker" of service binding "PullPointSubscriptionBinding".
The AddEventBroker command allows an ONVIF client to add an event broker configuration
to device to enable ONVIF events to be transferred to an event broker. If an existing
event broker configuration already exists with the same Address, the existing configuration
shall be modified.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/AddEventBrokerRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/AddEventBrokerRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/AddEventBrokerRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__AddEventBroker(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__AddEventBroker*        tev__AddEventBroker,
    // output parameters:
    struct _tev__AddEventBrokerResponse*tev__AddEventBrokerResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__AddEventBroker(
    struct soap *soap,
    // input parameters:
    struct _tev__AddEventBroker*        tev__AddEventBroker,
    // output parameters:
    struct _tev__AddEventBrokerResponse*tev__AddEventBrokerResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	AddEventBroker SOAP
//gsoap tev  service method-style:	AddEventBroker document
//gsoap tev  service method-encoding:	AddEventBroker literal
//gsoap tev  service method-input-action:	AddEventBroker http://www.onvif.org/ver10/events/wsdl/EventPortType/AddEventBrokerRequest
//gsoap tev  service method-output-action:	AddEventBroker http://www.onvif.org/ver10/events/wsdl/EventPortType/AddEventBrokerRequestResponse
int __tev__AddEventBroker(
    struct _tev__AddEventBroker*        tev__AddEventBroker,	///< Input parameter
    struct _tev__AddEventBrokerResponse*tev__AddEventBrokerResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__DeleteEventBroker                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__DeleteEventBroker" of service binding "PullPointSubscriptionBinding".
The DeleteEventBroker allows an ONVIF client to delete an event broker configuration
from an ONVIF device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/DeleteEventBrokerRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/DeleteEventBrokerRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/DeleteEventBrokerRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__DeleteEventBroker(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__DeleteEventBroker*     tev__DeleteEventBroker,
    // output parameters:
    struct _tev__DeleteEventBrokerResponse*tev__DeleteEventBrokerResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__DeleteEventBroker(
    struct soap *soap,
    // input parameters:
    struct _tev__DeleteEventBroker*     tev__DeleteEventBroker,
    // output parameters:
    struct _tev__DeleteEventBrokerResponse*tev__DeleteEventBrokerResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	DeleteEventBroker SOAP
//gsoap tev  service method-style:	DeleteEventBroker document
//gsoap tev  service method-encoding:	DeleteEventBroker literal
//gsoap tev  service method-input-action:	DeleteEventBroker http://www.onvif.org/ver10/events/wsdl/EventPortType/DeleteEventBrokerRequest
//gsoap tev  service method-output-action:	DeleteEventBroker http://www.onvif.org/ver10/events/wsdl/EventPortType/DeleteEventBrokerRequestResponse
int __tev__DeleteEventBroker(
    struct _tev__DeleteEventBroker*     tev__DeleteEventBroker,	///< Input parameter
    struct _tev__DeleteEventBrokerResponse*tev__DeleteEventBrokerResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetEventBrokers                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetEventBrokers" of service binding "PullPointSubscriptionBinding".
The GetEventBrokers command lets a client retrieve event broker configurations from
the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventBrokersRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventBrokersRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventBrokersRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetEventBrokers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tev__GetEventBrokers*       tev__GetEventBrokers,
    // output parameters:
    struct _tev__GetEventBrokersResponse*tev__GetEventBrokersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetEventBrokers(
    struct soap *soap,
    // input parameters:
    struct _tev__GetEventBrokers*       tev__GetEventBrokers,
    // output parameters:
    struct _tev__GetEventBrokersResponse*tev__GetEventBrokersResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetEventBrokers SOAP
//gsoap tev  service method-style:	GetEventBrokers document
//gsoap tev  service method-encoding:	GetEventBrokers literal
//gsoap tev  service method-input-action:	GetEventBrokers http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventBrokersRequest
//gsoap tev  service method-output-action:	GetEventBrokers http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventBrokersRequestResponse
int __tev__GetEventBrokers(
    struct _tev__GetEventBrokers*       tev__GetEventBrokers,	///< Input parameter
    struct _tev__GetEventBrokersResponse*tev__GetEventBrokersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Renew                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Renew" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Renew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Renew*                wsnt__Renew,
    // output parameters:
    struct _wsnt__RenewResponse        *wsnt__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Renew(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Renew*                wsnt__Renew,
    // output parameters:
    struct _wsnt__RenewResponse        *wsnt__RenewResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Renew SOAP
//gsoap tev  service method-style:	Renew document
//gsoap tev  service method-encoding:	Renew literal
//gsoap tev  service method-input-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest
//gsoap tev  service method-output-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse
//gsoap tev  service method-fault:	Renew wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Renew wsnt__UnacceptableTerminationTimeFault
int __tev__Renew(
    struct _wsnt__Renew*                wsnt__Renew,	///< Input parameter
    struct _wsnt__RenewResponse        *wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe_                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe_" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe_(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Unsubscribe_ SOAP
//gsoap tev  service method-style:	Unsubscribe_ document
//gsoap tev  service method-encoding:	Unsubscribe_ literal
//gsoap tev  service method-input-action:	Unsubscribe_ http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe_ http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe_ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe_ wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe_(
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,	///< Input parameter
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Subscribe                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Subscribe" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Subscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Subscribe*            wsnt__Subscribe,
    // output parameters:
    struct _wsnt__SubscribeResponse    *wsnt__SubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Subscribe(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Subscribe*            wsnt__Subscribe,
    // output parameters:
    struct _wsnt__SubscribeResponse    *wsnt__SubscribeResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Subscribe SOAP
//gsoap tev  service method-style:	Subscribe document
//gsoap tev  service method-encoding:	Subscribe literal
//gsoap tev  service method-input-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest
//gsoap tev  service method-output-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse
//gsoap tev  service method-fault:	Subscribe wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidFilterFault
//gsoap tev  service method-fault:	Subscribe wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidMessageContentExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnrecognizedPolicyRequestFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnsupportedPolicyRequestFault
//gsoap tev  service method-fault:	Subscribe wsnt__NotifyMessageNotSupportedFault
//gsoap tev  service method-fault:	Subscribe wsnt__SubscribeCreationFailedFault
int __tev__Subscribe(
    struct _wsnt__Subscribe*            wsnt__Subscribe,	///< Input parameter
    struct _wsnt__SubscribeResponse    *wsnt__SubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetCurrentMessage                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetCurrentMessage" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetCurrentMessage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__GetCurrentMessage*    wsnt__GetCurrentMessage,
    // output parameters:
    struct _wsnt__GetCurrentMessageResponse*wsnt__GetCurrentMessageResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetCurrentMessage(
    struct soap *soap,
    // input parameters:
    struct _wsnt__GetCurrentMessage*    wsnt__GetCurrentMessage,
    // output parameters:
    struct _wsnt__GetCurrentMessageResponse*wsnt__GetCurrentMessageResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetCurrentMessage SOAP
//gsoap tev  service method-style:	GetCurrentMessage document
//gsoap tev  service method-encoding:	GetCurrentMessage literal
//gsoap tev  service method-input-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest
//gsoap tev  service method-output-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse
//gsoap tev  service method-fault:	GetCurrentMessage wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__NoCurrentMessageOnTopicFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__MultipleTopicsSpecifiedFault
int __tev__GetCurrentMessage(
    struct _wsnt__GetCurrentMessage*    wsnt__GetCurrentMessage,	///< Input parameter
    struct _wsnt__GetCurrentMessageResponse*wsnt__GetCurrentMessageResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Notify                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Notify" of service binding "PullPointSubscriptionBinding".

  - One-way service request message

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___tev__Notify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Notify*               wsnt__Notify,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Notify(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Notify*               wsnt__Notify,
    // output parameters:
  );
@endcode

*/

//gsoap tev  service method-protocol:	Notify SOAP
//gsoap tev  service method-style:	Notify document
//gsoap tev  service method-encoding:	Notify literal
//gsoap tev  service method-input-action:	Notify http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify
int __tev__Notify(
    struct _wsnt__Notify*               wsnt__Notify,	///< Input parameter
    void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetMessages                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetMessages" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__GetMessages*          wsnt__GetMessages,
    // output parameters:
    struct _wsnt__GetMessagesResponse  *wsnt__GetMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetMessages(
    struct soap *soap,
    // input parameters:
    struct _wsnt__GetMessages*          wsnt__GetMessages,
    // output parameters:
    struct _wsnt__GetMessagesResponse  *wsnt__GetMessagesResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	GetMessages SOAP
//gsoap tev  service method-style:	GetMessages document
//gsoap tev  service method-encoding:	GetMessages literal
//gsoap tev  service method-input-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest
//gsoap tev  service method-output-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse
//gsoap tev  service method-fault:	GetMessages wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	GetMessages wsnt__UnableToGetMessagesFault
int __tev__GetMessages(
    struct _wsnt__GetMessages*          wsnt__GetMessages,	///< Input parameter
    struct _wsnt__GetMessagesResponse  *wsnt__GetMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__DestroyPullPoint                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__DestroyPullPoint" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__DestroyPullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__DestroyPullPoint*     wsnt__DestroyPullPoint,
    // output parameters:
    struct _wsnt__DestroyPullPointResponse*wsnt__DestroyPullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__DestroyPullPoint(
    struct soap *soap,
    // input parameters:
    struct _wsnt__DestroyPullPoint*     wsnt__DestroyPullPoint,
    // output parameters:
    struct _wsnt__DestroyPullPointResponse*wsnt__DestroyPullPointResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	DestroyPullPoint SOAP
//gsoap tev  service method-style:	DestroyPullPoint document
//gsoap tev  service method-encoding:	DestroyPullPoint literal
//gsoap tev  service method-input-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest
//gsoap tev  service method-output-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse
//gsoap tev  service method-fault:	DestroyPullPoint wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	DestroyPullPoint wsnt__UnableToDestroyPullPointFault
int __tev__DestroyPullPoint(
    struct _wsnt__DestroyPullPoint*     wsnt__DestroyPullPoint,	///< Input parameter
    struct _wsnt__DestroyPullPointResponse*wsnt__DestroyPullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Notify_                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Notify_" of service binding "PullPointSubscriptionBinding".

  - One-way service request message

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___tev__Notify_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Notify*               wsnt__Notify,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Notify_(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Notify*               wsnt__Notify,
    // output parameters:
  );
@endcode

*/

//gsoap tev  service method-protocol:	Notify_ SOAP
//gsoap tev  service method-style:	Notify_ document
//gsoap tev  service method-encoding:	Notify_ literal
//gsoap tev  service method-input-action:	Notify_ http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify
int __tev__Notify_(
    struct _wsnt__Notify*               wsnt__Notify,	///< Input parameter
    void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__CreatePullPoint                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__CreatePullPoint" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__CreatePullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__CreatePullPoint*      wsnt__CreatePullPoint,
    // output parameters:
    struct _wsnt__CreatePullPointResponse*wsnt__CreatePullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__CreatePullPoint(
    struct soap *soap,
    // input parameters:
    struct _wsnt__CreatePullPoint*      wsnt__CreatePullPoint,
    // output parameters:
    struct _wsnt__CreatePullPointResponse*wsnt__CreatePullPointResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	CreatePullPoint SOAP
//gsoap tev  service method-style:	CreatePullPoint document
//gsoap tev  service method-encoding:	CreatePullPoint literal
//gsoap tev  service method-input-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest
//gsoap tev  service method-output-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse
//gsoap tev  service method-fault:	CreatePullPoint wsnt__UnableToCreatePullPointFault
int __tev__CreatePullPoint(
    struct _wsnt__CreatePullPoint*      wsnt__CreatePullPoint,	///< Input parameter
    struct _wsnt__CreatePullPointResponse*wsnt__CreatePullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Renew_                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Renew_" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Renew_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Renew*                wsnt__Renew,
    // output parameters:
    struct _wsnt__RenewResponse        *wsnt__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Renew_(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Renew*                wsnt__Renew,
    // output parameters:
    struct _wsnt__RenewResponse        *wsnt__RenewResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Renew_ SOAP
//gsoap tev  service method-style:	Renew_ document
//gsoap tev  service method-encoding:	Renew_ literal
//gsoap tev  service method-input-action:	Renew_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest
//gsoap tev  service method-output-action:	Renew_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse
//gsoap tev  service method-fault:	Renew_ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Renew_ wsnt__UnacceptableTerminationTimeFault
int __tev__Renew_(
    struct _wsnt__Renew*                wsnt__Renew,	///< Input parameter
    struct _wsnt__RenewResponse        *wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe__                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe__" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe__(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe__(
    struct soap *soap,
    // input parameters:
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,
    // output parameters:
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	Unsubscribe__ SOAP
//gsoap tev  service method-style:	Unsubscribe__ document
//gsoap tev  service method-encoding:	Unsubscribe__ literal
//gsoap tev  service method-input-action:	Unsubscribe__ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe__ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe__ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe__ wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe__(
    struct _wsnt__Unsubscribe*          wsnt__Unsubscribe,	///< Input parameter
    struct _wsnt__UnsubscribeResponse  *wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__PauseSubscription                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__PauseSubscription" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__PauseSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__PauseSubscription*    wsnt__PauseSubscription,
    // output parameters:
    struct _wsnt__PauseSubscriptionResponse*wsnt__PauseSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__PauseSubscription(
    struct soap *soap,
    // input parameters:
    struct _wsnt__PauseSubscription*    wsnt__PauseSubscription,
    // output parameters:
    struct _wsnt__PauseSubscriptionResponse*wsnt__PauseSubscriptionResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	PauseSubscription SOAP
//gsoap tev  service method-style:	PauseSubscription document
//gsoap tev  service method-encoding:	PauseSubscription literal
//gsoap tev  service method-input-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest
//gsoap tev  service method-output-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse
//gsoap tev  service method-fault:	PauseSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	PauseSubscription wsnt__PauseFailedFault
int __tev__PauseSubscription(
    struct _wsnt__PauseSubscription*    wsnt__PauseSubscription,	///< Input parameter
    struct _wsnt__PauseSubscriptionResponse*wsnt__PauseSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__ResumeSubscription                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__ResumeSubscription" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__ResumeSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _wsnt__ResumeSubscription*   wsnt__ResumeSubscription,
    // output parameters:
    struct _wsnt__ResumeSubscriptionResponse*wsnt__ResumeSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__ResumeSubscription(
    struct soap *soap,
    // input parameters:
    struct _wsnt__ResumeSubscription*   wsnt__ResumeSubscription,
    // output parameters:
    struct _wsnt__ResumeSubscriptionResponse*wsnt__ResumeSubscriptionResponse
  );
@endcode

*/

//gsoap tev  service method-protocol:	ResumeSubscription SOAP
//gsoap tev  service method-style:	ResumeSubscription document
//gsoap tev  service method-encoding:	ResumeSubscription literal
//gsoap tev  service method-input-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest
//gsoap tev  service method-output-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse
//gsoap tev  service method-fault:	ResumeSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	ResumeSubscription wsnt__ResumeFailedFault
int __tev__ResumeSubscription(
    struct _wsnt__ResumeSubscription*   wsnt__ResumeSubscription,	///< Input parameter
    struct _wsnt__ResumeSubscriptionResponse*wsnt__ResumeSubscriptionResponse	///< Output parameter
);

/** @page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_policy_enablers Policy Enablers of Binding "PullPointSubscriptionBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

@note The following readers and writers are C/C++ data type (de)serializers
auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

@note Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

@note Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

@note The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_set_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_set_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


*/

/**

@section tev Top-level root elements of schema "http://www.onvif.org/ver10/events/wsdl"

  - <tev:GetServiceCapabilities> @ref _tev__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetServiceCapabilities(struct soap*, const char *URL, struct _tev__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetServiceCapabilities(struct soap*, const char *URL, struct _tev__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetServiceCapabilities(struct soap*, const char *URL, struct _tev__GetServiceCapabilities*);
    soap_POST_recv__tev__GetServiceCapabilities(struct soap*, struct _tev__GetServiceCapabilities*);
    @endcode

  - <tev:GetServiceCapabilitiesResponse> @ref _tev__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tev__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tev__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tev__GetServiceCapabilitiesResponse*);
    soap_POST_recv__tev__GetServiceCapabilitiesResponse(struct soap*, struct _tev__GetServiceCapabilitiesResponse*);
    @endcode

  - <tev:Capabilities> (use wsdl2h option -g to auto-generate type _tev__Capabilities)

  - <tev:CreatePullPointSubscription> @ref _tev__CreatePullPointSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__CreatePullPointSubscription(struct soap*, const char *URL, struct _tev__CreatePullPointSubscription*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__CreatePullPointSubscription(struct soap*, const char *URL, struct _tev__CreatePullPointSubscription*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__CreatePullPointSubscription(struct soap*, const char *URL, struct _tev__CreatePullPointSubscription*);
    soap_POST_recv__tev__CreatePullPointSubscription(struct soap*, struct _tev__CreatePullPointSubscription*);
    @endcode

  - <tev:CreatePullPointSubscriptionResponse> @ref _tev__CreatePullPointSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__CreatePullPointSubscriptionResponse(struct soap*, const char *URL, struct _tev__CreatePullPointSubscriptionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__CreatePullPointSubscriptionResponse(struct soap*, const char *URL, struct _tev__CreatePullPointSubscriptionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__CreatePullPointSubscriptionResponse(struct soap*, const char *URL, struct _tev__CreatePullPointSubscriptionResponse*);
    soap_POST_recv__tev__CreatePullPointSubscriptionResponse(struct soap*, struct _tev__CreatePullPointSubscriptionResponse*);
    @endcode

  - <tev:PullMessages> @ref _tev__PullMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessages(struct soap*, struct _tev__PullMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessages(struct soap*, struct _tev__PullMessages*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__PullMessages(struct soap*, const char *URL, struct _tev__PullMessages*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__PullMessages(struct soap*, const char *URL, struct _tev__PullMessages*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__PullMessages(struct soap*, const char *URL, struct _tev__PullMessages*);
    soap_POST_recv__tev__PullMessages(struct soap*, struct _tev__PullMessages*);
    @endcode

  - <tev:PullMessagesResponse> @ref _tev__PullMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__PullMessagesResponse(struct soap*, const char *URL, struct _tev__PullMessagesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__PullMessagesResponse(struct soap*, const char *URL, struct _tev__PullMessagesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__PullMessagesResponse(struct soap*, const char *URL, struct _tev__PullMessagesResponse*);
    soap_POST_recv__tev__PullMessagesResponse(struct soap*, struct _tev__PullMessagesResponse*);
    @endcode

  - <tev:PullMessagesFaultResponse> @ref _tev__PullMessagesFaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__PullMessagesFaultResponse(struct soap*, const char *URL, struct _tev__PullMessagesFaultResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__PullMessagesFaultResponse(struct soap*, const char *URL, struct _tev__PullMessagesFaultResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__PullMessagesFaultResponse(struct soap*, const char *URL, struct _tev__PullMessagesFaultResponse*);
    soap_POST_recv__tev__PullMessagesFaultResponse(struct soap*, struct _tev__PullMessagesFaultResponse*);
    @endcode

  - <tev:Seek> @ref _tev__Seek
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__Seek(struct soap*, struct _tev__Seek*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__Seek(struct soap*, struct _tev__Seek*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__Seek(struct soap*, const char *URL, struct _tev__Seek*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__Seek(struct soap*, const char *URL, struct _tev__Seek*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__Seek(struct soap*, const char *URL, struct _tev__Seek*);
    soap_POST_recv__tev__Seek(struct soap*, struct _tev__Seek*);
    @endcode

  - <tev:SeekResponse> @ref _tev__SeekResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SeekResponse(struct soap*, struct _tev__SeekResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SeekResponse(struct soap*, struct _tev__SeekResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__SeekResponse(struct soap*, const char *URL, struct _tev__SeekResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__SeekResponse(struct soap*, const char *URL, struct _tev__SeekResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__SeekResponse(struct soap*, const char *URL, struct _tev__SeekResponse*);
    soap_POST_recv__tev__SeekResponse(struct soap*, struct _tev__SeekResponse*);
    @endcode

  - <tev:SetSynchronizationPoint> @ref _tev__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__SetSynchronizationPoint(struct soap*, const char *URL, struct _tev__SetSynchronizationPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__SetSynchronizationPoint(struct soap*, const char *URL, struct _tev__SetSynchronizationPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__SetSynchronizationPoint(struct soap*, const char *URL, struct _tev__SetSynchronizationPoint*);
    soap_POST_recv__tev__SetSynchronizationPoint(struct soap*, struct _tev__SetSynchronizationPoint*);
    @endcode

  - <tev:SetSynchronizationPointResponse> @ref _tev__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__SetSynchronizationPointResponse(struct soap*, const char *URL, struct _tev__SetSynchronizationPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__SetSynchronizationPointResponse(struct soap*, const char *URL, struct _tev__SetSynchronizationPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__SetSynchronizationPointResponse(struct soap*, const char *URL, struct _tev__SetSynchronizationPointResponse*);
    soap_POST_recv__tev__SetSynchronizationPointResponse(struct soap*, struct _tev__SetSynchronizationPointResponse*);
    @endcode

  - <tev:GetEventProperties> @ref _tev__GetEventProperties
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetEventProperties(struct soap*, const char *URL, struct _tev__GetEventProperties*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetEventProperties(struct soap*, const char *URL, struct _tev__GetEventProperties*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetEventProperties(struct soap*, const char *URL, struct _tev__GetEventProperties*);
    soap_POST_recv__tev__GetEventProperties(struct soap*, struct _tev__GetEventProperties*);
    @endcode

  - <tev:GetEventPropertiesResponse> @ref _tev__GetEventPropertiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetEventPropertiesResponse(struct soap*, const char *URL, struct _tev__GetEventPropertiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetEventPropertiesResponse(struct soap*, const char *URL, struct _tev__GetEventPropertiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetEventPropertiesResponse(struct soap*, const char *URL, struct _tev__GetEventPropertiesResponse*);
    soap_POST_recv__tev__GetEventPropertiesResponse(struct soap*, struct _tev__GetEventPropertiesResponse*);
    @endcode

  - <tev:ChangedOnly> @ref _tev__ChangedOnly
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__ChangedOnly(struct soap*, _XML);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__ChangedOnly(struct soap*, _XML);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__ChangedOnly(struct soap*, const char *URL, _XML);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__ChangedOnly(struct soap*, const char *URL, _XML);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__ChangedOnly(struct soap*, const char *URL, _XML);
    soap_POST_recv__tev__ChangedOnly(struct soap*, _XML);
    @endcode

  - <tev:AddEventBroker> @ref _tev__AddEventBroker
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__AddEventBroker(struct soap*, struct _tev__AddEventBroker*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__AddEventBroker(struct soap*, struct _tev__AddEventBroker*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__AddEventBroker(struct soap*, const char *URL, struct _tev__AddEventBroker*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__AddEventBroker(struct soap*, const char *URL, struct _tev__AddEventBroker*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__AddEventBroker(struct soap*, const char *URL, struct _tev__AddEventBroker*);
    soap_POST_recv__tev__AddEventBroker(struct soap*, struct _tev__AddEventBroker*);
    @endcode

  - <tev:AddEventBrokerResponse> @ref _tev__AddEventBrokerResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__AddEventBrokerResponse(struct soap*, struct _tev__AddEventBrokerResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__AddEventBrokerResponse(struct soap*, struct _tev__AddEventBrokerResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__AddEventBrokerResponse(struct soap*, const char *URL, struct _tev__AddEventBrokerResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__AddEventBrokerResponse(struct soap*, const char *URL, struct _tev__AddEventBrokerResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__AddEventBrokerResponse(struct soap*, const char *URL, struct _tev__AddEventBrokerResponse*);
    soap_POST_recv__tev__AddEventBrokerResponse(struct soap*, struct _tev__AddEventBrokerResponse*);
    @endcode

  - <tev:DeleteEventBroker> @ref _tev__DeleteEventBroker
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__DeleteEventBroker(struct soap*, struct _tev__DeleteEventBroker*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__DeleteEventBroker(struct soap*, struct _tev__DeleteEventBroker*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__DeleteEventBroker(struct soap*, const char *URL, struct _tev__DeleteEventBroker*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__DeleteEventBroker(struct soap*, const char *URL, struct _tev__DeleteEventBroker*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__DeleteEventBroker(struct soap*, const char *URL, struct _tev__DeleteEventBroker*);
    soap_POST_recv__tev__DeleteEventBroker(struct soap*, struct _tev__DeleteEventBroker*);
    @endcode

  - <tev:DeleteEventBrokerResponse> @ref _tev__DeleteEventBrokerResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__DeleteEventBrokerResponse(struct soap*, struct _tev__DeleteEventBrokerResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__DeleteEventBrokerResponse(struct soap*, struct _tev__DeleteEventBrokerResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__DeleteEventBrokerResponse(struct soap*, const char *URL, struct _tev__DeleteEventBrokerResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__DeleteEventBrokerResponse(struct soap*, const char *URL, struct _tev__DeleteEventBrokerResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__DeleteEventBrokerResponse(struct soap*, const char *URL, struct _tev__DeleteEventBrokerResponse*);
    soap_POST_recv__tev__DeleteEventBrokerResponse(struct soap*, struct _tev__DeleteEventBrokerResponse*);
    @endcode

  - <tev:GetEventBrokers> @ref _tev__GetEventBrokers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventBrokers(struct soap*, struct _tev__GetEventBrokers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventBrokers(struct soap*, struct _tev__GetEventBrokers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetEventBrokers(struct soap*, const char *URL, struct _tev__GetEventBrokers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetEventBrokers(struct soap*, const char *URL, struct _tev__GetEventBrokers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetEventBrokers(struct soap*, const char *URL, struct _tev__GetEventBrokers*);
    soap_POST_recv__tev__GetEventBrokers(struct soap*, struct _tev__GetEventBrokers*);
    @endcode

  - <tev:GetEventBrokersResponse> @ref _tev__GetEventBrokersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventBrokersResponse(struct soap*, struct _tev__GetEventBrokersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventBrokersResponse(struct soap*, struct _tev__GetEventBrokersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetEventBrokersResponse(struct soap*, const char *URL, struct _tev__GetEventBrokersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetEventBrokersResponse(struct soap*, const char *URL, struct _tev__GetEventBrokersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetEventBrokersResponse(struct soap*, const char *URL, struct _tev__GetEventBrokersResponse*);
    soap_POST_recv__tev__GetEventBrokersResponse(struct soap*, struct _tev__GetEventBrokersResponse*);
    @endcode

*/

/**

@section  Top-level root elements of schema ""

*/

/**

@section wsrfrw Top-level root elements of schema "http://docs.oasis-open.org/wsrf/rw-2"

*/

/**

@section wsrfr Top-level root elements of schema "http://docs.oasis-open.org/wsrf/r-2"

  - <wsrfr:ResourceUnknownFault> (use wsdl2h option -g to auto-generate type _wsrfr__ResourceUnknownFault)

  - <wsrfr:ResourceUnavailableFault> (use wsdl2h option -g to auto-generate type _wsrfr__ResourceUnavailableFault)

*/

/**

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate type _wsrfbf__BaseFault)

*/

/**

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnt:TopicExpression> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpression)

  - <wsnt:FixedTopicSet> (use wsdl2h option -g to auto-generate type _wsnt__FixedTopicSet)

  - <wsnt:TopicExpressionDialect> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialect)

  - <wsnt:NotificationProducerRP> @ref _wsnt__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__NotificationProducerRP(struct soap*, const char *URL, struct _wsnt__NotificationProducerRP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__NotificationProducerRP(struct soap*, const char *URL, struct _wsnt__NotificationProducerRP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__NotificationProducerRP(struct soap*, const char *URL, struct _wsnt__NotificationProducerRP*);
    soap_POST_recv__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    @endcode

  - <wsnt:ConsumerReference> (use wsdl2h option -g to auto-generate type _wsnt__ConsumerReference)

  - <wsnt:Filter> (use wsdl2h option -g to auto-generate type _wsnt__Filter)

  - <wsnt:SubscriptionPolicy> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionPolicy)

  - <wsnt:CreationTime> (use wsdl2h option -g to auto-generate type _wsnt__CreationTime)

  - <wsnt:SubscriptionManagerRP> @ref _wsnt__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__SubscriptionManagerRP(struct soap*, const char *URL, struct _wsnt__SubscriptionManagerRP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__SubscriptionManagerRP(struct soap*, const char *URL, struct _wsnt__SubscriptionManagerRP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__SubscriptionManagerRP(struct soap*, const char *URL, struct _wsnt__SubscriptionManagerRP*);
    soap_POST_recv__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    @endcode

  - <wsnt:SubscriptionReference> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionReference)

  - <wsnt:Topic> (use wsdl2h option -g to auto-generate type _wsnt__Topic)

  - <wsnt:ProducerReference> (use wsdl2h option -g to auto-generate type _wsnt__ProducerReference)

  - <wsnt:NotificationMessage> (use wsdl2h option -g to auto-generate type _wsnt__NotificationMessage)

  - <wsnt:Notify> @ref _wsnt__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Notify(struct soap*, const char *URL, struct _wsnt__Notify*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Notify(struct soap*, const char *URL, struct _wsnt__Notify*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Notify(struct soap*, const char *URL, struct _wsnt__Notify*);
    soap_POST_recv__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    @endcode

  - <wsnt:CurrentTime> (use wsdl2h option -g to auto-generate type _wsnt__CurrentTime)

  - <wsnt:TerminationTime> (use wsdl2h option -g to auto-generate type _wsnt__TerminationTime)

  - <wsnt:ProducerProperties> (use wsdl2h option -g to auto-generate type _wsnt__ProducerProperties)

  - <wsnt:MessageContent> (use wsdl2h option -g to auto-generate type _wsnt__MessageContent)

  - <wsnt:UseRaw> @ref _wsnt__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__UseRaw(struct soap*, const char *URL, struct _wsnt__UseRaw*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__UseRaw(struct soap*, const char *URL, struct _wsnt__UseRaw*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__UseRaw(struct soap*, const char *URL, struct _wsnt__UseRaw*);
    soap_POST_recv__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    @endcode

  - <wsnt:Subscribe> @ref _wsnt__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Subscribe(struct soap*, const char *URL, struct _wsnt__Subscribe*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Subscribe(struct soap*, const char *URL, struct _wsnt__Subscribe*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Subscribe(struct soap*, const char *URL, struct _wsnt__Subscribe*);
    soap_POST_recv__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    @endcode

  - <wsnt:SubscribeResponse> @ref _wsnt__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__SubscribeResponse(struct soap*, const char *URL, struct _wsnt__SubscribeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__SubscribeResponse(struct soap*, const char *URL, struct _wsnt__SubscribeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__SubscribeResponse(struct soap*, const char *URL, struct _wsnt__SubscribeResponse*);
    soap_POST_recv__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    @endcode

  - <wsnt:GetCurrentMessage> @ref _wsnt__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetCurrentMessage(struct soap*, const char *URL, struct _wsnt__GetCurrentMessage*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetCurrentMessage(struct soap*, const char *URL, struct _wsnt__GetCurrentMessage*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetCurrentMessage(struct soap*, const char *URL, struct _wsnt__GetCurrentMessage*);
    soap_POST_recv__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    @endcode

  - <wsnt:GetCurrentMessageResponse> @ref _wsnt__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetCurrentMessageResponse(struct soap*, const char *URL, struct _wsnt__GetCurrentMessageResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetCurrentMessageResponse(struct soap*, const char *URL, struct _wsnt__GetCurrentMessageResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetCurrentMessageResponse(struct soap*, const char *URL, struct _wsnt__GetCurrentMessageResponse*);
    soap_POST_recv__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    @endcode

  - <wsnt:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeCreationFailedFault)

  - <wsnt:InvalidFilterFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidFilterFault)

  - <wsnt:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialectUnknownFault)

  - <wsnt:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidTopicExpressionFault)

  - <wsnt:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicNotSupportedFault)

  - <wsnt:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate type _wsnt__MultipleTopicsSpecifiedFault)

  - <wsnt:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidProducerPropertiesExpressionFault)

  - <wsnt:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidMessageContentExpressionFault)

  - <wsnt:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnrecognizedPolicyRequestFault)

  - <wsnt:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnsupportedPolicyRequestFault)

  - <wsnt:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__NotifyMessageNotSupportedFault)

  - <wsnt:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableInitialTerminationTimeFault)

  - <wsnt:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate type _wsnt__NoCurrentMessageOnTopicFault)

  - <wsnt:GetMessages> @ref _wsnt__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetMessages(struct soap*, const char *URL, struct _wsnt__GetMessages*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetMessages(struct soap*, const char *URL, struct _wsnt__GetMessages*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetMessages(struct soap*, const char *URL, struct _wsnt__GetMessages*);
    soap_POST_recv__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    @endcode

  - <wsnt:GetMessagesResponse> @ref _wsnt__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetMessagesResponse(struct soap*, const char *URL, struct _wsnt__GetMessagesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetMessagesResponse(struct soap*, const char *URL, struct _wsnt__GetMessagesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetMessagesResponse(struct soap*, const char *URL, struct _wsnt__GetMessagesResponse*);
    soap_POST_recv__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    @endcode

  - <wsnt:DestroyPullPoint> @ref _wsnt__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__DestroyPullPoint(struct soap*, const char *URL, struct _wsnt__DestroyPullPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__DestroyPullPoint(struct soap*, const char *URL, struct _wsnt__DestroyPullPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__DestroyPullPoint(struct soap*, const char *URL, struct _wsnt__DestroyPullPoint*);
    soap_POST_recv__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    @endcode

  - <wsnt:DestroyPullPointResponse> @ref _wsnt__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__DestroyPullPointResponse(struct soap*, const char *URL, struct _wsnt__DestroyPullPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__DestroyPullPointResponse(struct soap*, const char *URL, struct _wsnt__DestroyPullPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__DestroyPullPointResponse(struct soap*, const char *URL, struct _wsnt__DestroyPullPointResponse*);
    soap_POST_recv__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    @endcode

  - <wsnt:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToGetMessagesFault)

  - <wsnt:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroyPullPointFault)

  - <wsnt:CreatePullPoint> @ref _wsnt__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__CreatePullPoint(struct soap*, const char *URL, struct _wsnt__CreatePullPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__CreatePullPoint(struct soap*, const char *URL, struct _wsnt__CreatePullPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__CreatePullPoint(struct soap*, const char *URL, struct _wsnt__CreatePullPoint*);
    soap_POST_recv__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    @endcode

  - <wsnt:CreatePullPointResponse> @ref _wsnt__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__CreatePullPointResponse(struct soap*, const char *URL, struct _wsnt__CreatePullPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__CreatePullPointResponse(struct soap*, const char *URL, struct _wsnt__CreatePullPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__CreatePullPointResponse(struct soap*, const char *URL, struct _wsnt__CreatePullPointResponse*);
    soap_POST_recv__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    @endcode

  - <wsnt:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToCreatePullPointFault)

  - <wsnt:Renew> @ref _wsnt__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Renew(struct soap*, const char *URL, struct _wsnt__Renew*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Renew(struct soap*, const char *URL, struct _wsnt__Renew*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Renew(struct soap*, const char *URL, struct _wsnt__Renew*);
    soap_POST_recv__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    @endcode

  - <wsnt:RenewResponse> @ref _wsnt__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__RenewResponse(struct soap*, const char *URL, struct _wsnt__RenewResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__RenewResponse(struct soap*, const char *URL, struct _wsnt__RenewResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__RenewResponse(struct soap*, const char *URL, struct _wsnt__RenewResponse*);
    soap_POST_recv__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    @endcode

  - <wsnt:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableTerminationTimeFault)

  - <wsnt:Unsubscribe> @ref _wsnt__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Unsubscribe(struct soap*, const char *URL, struct _wsnt__Unsubscribe*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Unsubscribe(struct soap*, const char *URL, struct _wsnt__Unsubscribe*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Unsubscribe(struct soap*, const char *URL, struct _wsnt__Unsubscribe*);
    soap_POST_recv__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    @endcode

  - <wsnt:UnsubscribeResponse> @ref _wsnt__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__UnsubscribeResponse(struct soap*, const char *URL, struct _wsnt__UnsubscribeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__UnsubscribeResponse(struct soap*, const char *URL, struct _wsnt__UnsubscribeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__UnsubscribeResponse(struct soap*, const char *URL, struct _wsnt__UnsubscribeResponse*);
    soap_POST_recv__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    @endcode

  - <wsnt:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroySubscriptionFault)

  - <wsnt:PauseSubscription> @ref _wsnt__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__PauseSubscription(struct soap*, const char *URL, struct _wsnt__PauseSubscription*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__PauseSubscription(struct soap*, const char *URL, struct _wsnt__PauseSubscription*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__PauseSubscription(struct soap*, const char *URL, struct _wsnt__PauseSubscription*);
    soap_POST_recv__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    @endcode

  - <wsnt:PauseSubscriptionResponse> @ref _wsnt__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__PauseSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__PauseSubscriptionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__PauseSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__PauseSubscriptionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__PauseSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__PauseSubscriptionResponse*);
    soap_POST_recv__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    @endcode

  - <wsnt:ResumeSubscription> @ref _wsnt__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__ResumeSubscription(struct soap*, const char *URL, struct _wsnt__ResumeSubscription*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__ResumeSubscription(struct soap*, const char *URL, struct _wsnt__ResumeSubscription*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__ResumeSubscription(struct soap*, const char *URL, struct _wsnt__ResumeSubscription*);
    soap_POST_recv__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    @endcode

  - <wsnt:ResumeSubscriptionResponse> @ref _wsnt__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__ResumeSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__ResumeSubscriptionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__ResumeSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__ResumeSubscriptionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__ResumeSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__ResumeSubscriptionResponse*);
    soap_POST_recv__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    @endcode

  - <wsnt:PauseFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__PauseFailedFault)

  - <wsnt:ResumeFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__ResumeFailedFault)

*/

/**

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate type _wstop__TopicNamespace)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate type _wstop__TopicSet)

*/

/* End of event.h */
